%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 14 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-BoldItalic FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612.71 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612.71 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612.71 792 C
0 -208 1000 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
-0.2 (System Issues in Implementing High Speed Distributed Parallel Storage) 90.72 710.27 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Systems) 280.89 691.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(Brian T) 220.23 657.6 T
(ierney \050bltierney@lbl.gov\051,) 258.8 657.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Bill Johnston) 212.25 641.6 T
1 9.6 Q
(1) 279.28 646.4 T
1 12 Q
( \050wejohnston@lbl.gov\051,) 284.08 641.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Hanan Herzog, Gary Hoo, Guojun Jin, Jason Lee) 180.99 625.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Imaging T) 235.11 593.6 T
(echnologies Gr) 283.68 593.6 T
(oup) 356.89 593.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Lawr) 227.83 577.6 T
(ence Berkeley Laboratory) 252.73 577.6 T
2 9.6 Q
(2) 377.37 582.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(Berkeley) 257.17 561.6 T
(, CA 94720) 298.49 561.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Abstract) 282.67 529.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.51 (In this paper we describe several aspects of implementing a high speed network-based) 89 505.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.33 (distributed application. W) 89 491.6 P
3.33 (e describe the design and implementation of a distributed) 219.7 491.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.43 (parallel storage system that uses high speed A) 89 477.6 P
2.43 (TM networks as a key element of the) 325.67 477.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.91 (architecture. The architecture provides what amounts to a collection of network-based) 89 463.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.81 (disk block servers, and an associated name server that provides some \336le system) 89 449.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.93 (functionality) 89 435.6 P
1.93 (. The implementation approach is that of user level software that runs on) 149.55 435.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (UNIX workstations. Both the architecture and the implementation are intended to provide) 89 421.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.46 (for easy and economical scalability in both performance and capacity) 89 407.6 P
1.46 (. W) 434.28 407.6 P
1.46 (e describe the) 452.1 407.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (software architecture, the implementation and operating system overhead issues, and our) 89 393.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (experiences with this approach in an IP-over) 89 379.6 P
0.74 (-A) 307.16 379.6 P
0.74 (TM W) 318.49 379.6 P
0.74 (AN. Although most of the paper is) 350.23 379.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.12 (speci\336c to a distributed parallel data server) 89 365.6 P
-0.12 (, we believe many of the issues we encountered) 293.73 365.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(are generally applicable to any high speed network-based application.) 89 351.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(1.0  Intr) 89 316.6 T
(oduction) 130.45 316.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0.46 (In recent years many technological advances have made distributed multimedia servers a) 89 293.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.31 (reality) 89 279.6 P
1.31 (, and people now desire to put \322on-line\323 lar) 118.88 279.6 P
1.31 (ge amounts of information, including) 336.77 279.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.84 (images, videos, and hypermedia databases. Increasingly) 89 265.6 P
3.84 (, there are applications that) 376.01 265.6 P
0 0 0 1 0 0 0 K
89 240.4 521 260.4 C
0 0 0 1 0 0 0 K
89 248.4 221 248.4 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 -208 1000 792 C
0 0 0 1 0 0 0 K
3 10 Q
0 X
0 0 0 1 0 0 0 K
(1.  Correspondence should be directed to Bill Johnston, Lawrence Berkeley Laboratory) 89 233.73 T
(, Bldg. 50B - 2239,) 437.45 233.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Berkeley) 89 221.73 T
(, CA, 94720. T) 124.45 221.73 T
(el: 510-486-5014, fax: 510-486-6363\051.) 183.75 221.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.  This work is jointly supported by ARP) 89 206.73 T
(A - CST) 255.59 206.73 T
(O, and by the U. S. Dept. of Ener) 289.3 206.73 T
(gy) 422.43 206.73 T
(, Ener) 431.78 206.73 T
(gy Research) 455.48 206.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Division, Of) 89 194.73 T
(\336ce of Scienti\336c Computing, under contract DE-AC03-76SF00098 with the University of Cali-) 138.82 194.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fornia. This document is LBL report LBL-35775.) 89 182.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Reference herein to any speci\336c commercial product, process, or service by trade name, trademark, manu-) 89 167.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(facturer) 89 155.73 T
(, or otherwise, does not necessarily constitute or imply its endorsement or recommendation by the) 119.69 155.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(United States Government or the University of California. The views and opinions of authors expressed) 89 143.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(herein do not necessarily state or re\337ect those of the United States Government or the University of Califor-) 89 131.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(nia, and shall not be used for advertising or product endorsement purposes.) 89 119.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The following terms are acknowledged as trademarks: UNIX \050Novell, Inc.\051, Sun and SP) 89 104.73 T
(ARCStation \050Sun) 440.51 104.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Microsystems, Inc.\051, DEC and Alpha \050Digital Equipment Corp.\051, SGI and Indigo \050Silicon Graphics, Inc.\051,) 89 92.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Seagate, Inc.) 89 80.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
-0.05 (demand high-bandwidth access to this data, either in single user streams \050e.g., lar) 89 711.6 P
-0.05 (ge image) 477.4 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5.34 (browsing, uncompressible scienti\336c and medical video, and multiple coordinated) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.45 (multimedia streams\051 or) 89 683.6 P
3.45 (, more commonly) 206.75 683.6 P
3.45 (, in aggregate for multiple users. Here we) 297.88 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (describe a network distributed data server) 89 669.6 P
0.07 (, called the Image Server System \050ISS\051. The ISS) 289.15 669.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.36 (is being used to supply data to a terrain visualization application that requires 300-400) 89 655.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.5 (Mbits/s of data to provide a realistic visualization. Both the ISS and the application have) 89 641.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.36 (been developed in the context of the MAGIC Gigabit testbed \050[5] and [1) 89 627.42 P
0.36 (1]\051. T) 440.12 627.42 P
0.36 (o address a) 466.97 627.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.48 (point frequently raised, compression is not practical in the case of terrain visualization) 89 613.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.29 (because the cost of decompression is prohibitive in the absence of suitable hardware) 89 599.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(implementations.) 89 585.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.05 (T) 89 563.42 P
0.05 (o comment brie\337y on the relevant technologies, current disk technology delivers about 4) 95.49 563.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 (Mbytes/s \05032 Mbits/s\051, a rate that has improved at about 7% each year since 1980 [10],) 89 549.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.71 (and there is reason to believe that it will be some time before a single disk is capable of) 89 535.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.37 (delivering streams at the rates needed for the application mentioned. While RAID [10]) 89 521.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.92 (and other parallel disk array technologies can deliver higher throughput, they are still) 89 507.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.67 (relatively expensive, and do not scale well \050at least economically\051, especially in the) 89 493.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (scenario of multiple network-distributed users \050where we assume that the sources of data,) 89 479.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.1 (as well as the multiple users, will be widely distributed\051. W) 89 465.05 P
3.1 (ide area Asynchronous) 404.83 465.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (T) 89 451.05 P
0.04 (ransfer Mode \050A) 95.91 451.05 P
0.04 (TM\051 networks are being built on a SONET infrastructure, which has the) 174.63 451.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.72 (characteristic that bandwidth aggregates upward \050contrary to our current network) 89 437.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (hierarchy) 89 423.05 P
0.45 (, where the slowest networks are at the top of the hierarchy\051. This characteristic) 133.53 423.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.96 (makes it possible to use the network to aggregate many low-speed sources into a single) 89 409.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(high-speed stream.) 89 395.05 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.1 (The approach described here dif) 89 373.05 P
3.1 (fers in many ways from RAID, and should not be) 255.79 373.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.24 (confused with it. RAID uses a particular data layout and redundancy strategy to secure) 89 359.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.4 (reliable data storage and parallel disk operation. Our approach, while using parallel disks) 89 345.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 (and servers, imposes no particular layout strategy \050in fact, this is deliberately left to the) 89 331.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.05 (application domain\051, and is implemented entirely in software \050though the data redundancy) 89 317.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(idea of RAID might be applied across servers\051.) 89 303.05 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.57 (At the present state of development and experience, the system we describe is used) 89 281.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.19 (primarily as a lar) 89 267.05 P
-0.19 (ge, fast \322cache\323 for image or multimedia data. In our approach, reliability) 169.86 267.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.25 (with respect to data corruption is provided by the usual OS and disk controller) 89 253.05 P
2.25 (-level) 493.68 253.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (mechanisms, and reliability of the overall system is a function of user) 89 239.05 P
0.74 (-level strategies of) 430.87 239.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (data replication. The data of interest \050tens to hundreds of GBytes\051 is typically loaded from) 89 225.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.58 (archival tertiary storage, or written into the system from live video sources. \050In the latter) 89 211.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(case, the data is also archived to bulk storage in real-time.\051) 89 197.05 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (The Image Server System is an example of distributed parallel data storage technology) 89 175.05 P
0.22 (. It) 507.45 175.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (is a multimedia \336le server that is distributed across a wide area network to supply data to) 89 161.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.56 (applications located anywhere in the network. This system is not a general purpose,) 89 147.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0 (distributed \336le system in that the data units \050\322\336les\323\051 are assumed to be lar) 89 133.05 P
-0 (ge and relatively) 441.03 133.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (static. The approach allows data or) 89 119.05 P
-0.11 (ganization to be determined by the user as a function of) 255.51 119.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.59 (data type and access patterns. For most applications, the goal of data or) 89 105.05 P
0.59 (ganization is that) 437.82 105.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (data should be declustered across both disks and servers \050that is, dispersed in such a way) 89 91.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.21 (that as many system elements as possible can operate simultaneously to satisfy a given) 89 77.05 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
-0.12 (request\051. This declustering allows a lar) 89 711.6 P
-0.12 (ge collection of disks to seek in parallel, and allows) 274.14 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.65 (all servers to send the resulting data to the application in parallel, enabling the ISS to) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.43 (perform as a high-speed image server. Architecturally) 89 683.6 P
1.43 (, the ISS is a distributed, parallel) 355.74 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.97 (mass storage system that uses UNIX workstation technology to provide a low-cost,) 89 361.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.52 (scalable implementation. The data transport is via TCP/IP or R) 89 347.48 P
0.52 (TP/IP[13]. The scalability) 394.96 347.48 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.45 (arises from the high degree of independence among the servers: both performance and) 89 333.48 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.46 (capacity may be increased, in essentially linear fashion, by adding servers. \050Ultimately) 89 319.48 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.2 (this is limited by the parallelism inherent in the data.\051 The general idea is illustrated in) 89 305.48 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Figure 1) 89 291.3 T
(\050Data Streams Aggregated by A) 135.33 291.3 T
(TM Switches\051.) 287.96 291.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.08 (In our prototypes, the typical ISS consists of several \050four - \336ve\051 UNIX workstations \050e.g.) 89 269.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (Sun SP) 89 255.3 P
-0.27 (ARCStation, DEC Alpha, SGI Indigo, etc.\051, each with several \050four - six\051 fast-SCSI) 122.64 255.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (disks on multiple \050two - three\051 SCSI host adaptors. Each workstation is also equipped with) 89 241.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.98 (an A) 89 227.3 P
0.98 (TM network interface. An ISS con\336guration such as this can deliver an aggregated) 111.64 227.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.36 (data stream to an application at about 400 Mbits/s \05050 Mbytes/s\051 using these relatively) 89 213.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5.39 (low-cost, \322of) 89 199.3 P
5.39 (f the shelf\323 components by exploiting the parallelism provided by) 156.83 199.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.12 (approximately \336ve hosts, twenty disks, ten SCSI host adaptors, and \336ve network) 89 185.3 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interfaces.) 89 171.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(2.0  Related W) 89 130.47 T
(ork) 176.11 130.47 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0.27 (In some respects, the ISS resembles the Zebra network \336le system, developed by John H.) 89 105.8 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.93 (Hartman and John K. Ousterhout at the University of California, Berkeley [4]. Both the) 89 91.62 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.95 (ISS and Zebra can separate their \336le access and management activities across several) 89 77.62 P
0 0 0 1 0 0 0 K
87.15 371.67 522.85 679.6 C
0 0 0 1 0 0 0 K
95.72 394.27 496.32 666.77 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.72 394.27 496.32 666.77 R
7 X
0 0 0 1 0 0 0 K
V
315.41 452.57 327.45 435.36 308.12 443.58 311.77 448.08 4 Y
0 X
V
311.77 448.07 285.43 469.43 2 L
7 X
V
3 H
2 Z
0 X
N
226.35 511.42 242.23 497.67 221.48 500.92 225.82 505.28 4 Y
V
225.83 505.28 152.1 539.48 2 L
7 X
V
0 X
N
352.18 497.58 331.29 495.5 347.9 508.34 348.08 502.18 4 Y
V
348.09 502.18 434.53 536.58 2 L
7 X
V
0 X
N
135.61 630.32 181.35 646.2 R
7 X
V
2 H
0 Z
0 X
N
292.28 547.72 286.49 527.53 280.7 547.72 286.49 545.61 4 Y
V
286.49 545.61 286.49 557.4 2 L
7 X
V
3 H
2 Z
0 X
N
122.12 565.15 196.59 659.75 R
0.5 H
0 Z
N
137.51 527.74 173.2 564.73 R
7 X
V
0 X
N
254.85 477.32 318.08 515.17 R
7 X
V
0 X
N
147.82 577.44 149.44 565.54 141.77 574.78 145.28 575 4 Y
V
134.18 600.27 145.28 575 2 L
7 X
V
1 H
2 Z
0 X
N
164.46 575.96 158.5 565.55 158.04 577.54 160.97 575.58 4 Y
V
166.93 599.85 160.97 575.58 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(ISS disk server) 131.04 651.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(A) 140.47 555.9 T
(TM) 145.35 555.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(network) 140.47 545.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface) 140.47 535.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
271.33 493.64 284.22 477.07 264.5 484.29 267.91 488.96 4 Y
3 X
V
254.5 498.75 267.92 488.96 2 L
3 H
N
291.04 496.68 285.25 476.49 279.46 496.68 285.25 496.68 4 Y
V
285.25 515.05 285.25 496.68 2 L
N
306.68 482.07 286.28 477.06 300.93 492.12 303.8 487.09 4 Y
V
318.49 495.5 303.8 487.09 2 L
N
242.22 490.15 255 507.02 R
7 X
V
0.5 H
0 Z
0 X
N
277.83 514.81 294.4 527.82 R
7 X
V
0 X
N
318.63 487.24 331.41 504.12 R
7 X
V
0 X
N
136.36 624.88 147.45 630.21 R
N
7 X
90 450 5.4 1.38 135.34 612.61 G
0 X
90 450 5.4 1.38 135.34 612.61 A
7 X
90 450 5.4 1.58 135.05 614.19 G
0 X
90 450 5.4 1.58 135.05 614.19 A
7 X
90 450 5.4 1.44 135.05 615.31 G
0 X
90 450 5.4 1.44 135.05 615.31 A
7 X
90 450 5.4 1.38 135.05 616.75 G
0 X
90 450 5.4 1.38 135.05 616.75 A
7 X
90 450 5.4 1.32 135.05 602.48 G
0 X
90 450 5.4 1.32 135.05 602.48 A
7 X
90 450 5.4 1.51 134.76 603.99 G
0 X
90 450 5.4 1.51 134.76 603.99 A
7 X
90 450 5.4 1.38 134.76 605.06 G
0 X
90 450 5.4 1.38 134.76 605.06 A
7 X
90 450 5.4 1.32 134.76 606.44 G
0 X
90 450 5.4 1.32 134.76 606.44 A
143.29 624.58 143.36 604.44 2 L
7 X
V
2 H
2 Z
0 X
N
143.22 615.1 139.86 615.1 2 L
7 X
V
0 X
N
143.07 604.44 138.99 604.44 2 L
7 X
V
0 X
N
138.11 633.42 179.59 643.07 R
7 X
V
0 X
(workstation) 138.11 637.74 T
169.11 624.88 180.2 630.21 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 168.09 612.61 G
0 X
90 450 5.4 1.38 168.09 612.61 A
7 X
90 450 5.4 1.58 167.8 614.19 G
0 X
90 450 5.4 1.58 167.8 614.19 A
7 X
90 450 5.4 1.44 167.8 615.31 G
0 X
90 450 5.4 1.44 167.8 615.31 A
7 X
90 450 5.4 1.38 167.8 616.75 G
0 X
90 450 5.4 1.38 167.8 616.75 A
7 X
90 450 5.4 1.32 167.8 602.48 G
0 X
90 450 5.4 1.32 167.8 602.48 A
7 X
90 450 5.4 1.51 167.51 603.99 G
0 X
90 450 5.4 1.51 167.51 603.99 A
7 X
90 450 5.4 1.38 167.51 605.06 G
0 X
90 450 5.4 1.38 167.51 605.06 A
7 X
90 450 5.4 1.32 167.51 606.44 G
0 X
90 450 5.4 1.32 167.51 606.44 A
176.04 624.58 176.11 604.44 2 L
7 X
V
2 H
2 Z
0 X
N
175.97 615.1 172.61 615.1 2 L
7 X
V
0 X
N
175.82 604.44 171.74 604.44 2 L
7 X
V
0 X
N
152.52 625.3 163.6 630.63 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 151.5 613.03 G
0 X
90 450 5.4 1.38 151.5 613.03 A
7 X
90 450 5.4 1.58 151.21 614.61 G
0 X
90 450 5.4 1.58 151.21 614.61 A
7 X
90 450 5.4 1.44 151.21 615.73 G
0 X
90 450 5.4 1.44 151.21 615.73 A
7 X
90 450 5.4 1.38 151.21 617.17 G
0 X
90 450 5.4 1.38 151.21 617.17 A
7 X
90 450 5.4 1.32 151.21 602.9 G
0 X
90 450 5.4 1.32 151.21 602.9 A
7 X
90 450 5.4 1.51 150.92 604.41 G
0 X
90 450 5.4 1.51 150.92 604.41 A
7 X
90 450 5.4 1.38 150.92 605.48 G
0 X
90 450 5.4 1.38 150.92 605.48 A
7 X
90 450 5.4 1.32 150.92 606.86 G
0 X
90 450 5.4 1.32 150.92 606.86 A
159.45 625 159.52 604.86 2 L
7 X
V
2 H
2 Z
0 X
N
159.37 615.52 156.02 615.52 2 L
7 X
V
0 X
N
159.23 604.86 155.15 604.86 2 L
7 X
V
0 X
N
155.68 577.28 153.17 565.54 149.08 576.82 152.46 575.85 4 Y
V
150.77 600.27 152.46 575.85 2 L
7 X
V
1 H
0 Z
0 X
N
128.25 582.65 180.18 591.72 R
7 X
V
0 X
(image segments) 128.25 586.38 T
276.76 464.31 293.33 477.32 R
7 X
V
0.5 H
0 X
N
265.73 631.4 311.47 647.28 R
7 X
V
2 H
0 X
N
252.24 566.24 326.71 660.84 R
0.5 H
N
274.43 551.91 302.36 565.11 R
7 X
V
0 X
N
277.94 578.52 279.55 566.63 271.89 575.86 275.4 576.09 4 Y
V
264.3 601.35 275.4 576.09 2 L
7 X
V
1 H
0 X
N
294.58 577.05 288.62 566.63 288.16 578.62 291.08 576.67 4 Y
V
297.05 600.93 291.09 576.66 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(ISS disk server) 261.05 653.06 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(A) 276.74 558.53 T
(TM) 281.63 558.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
266.49 625.97 277.57 631.3 R
0.5 H
N
7 X
90 450 5.4 1.38 265.46 613.7 G
0 X
90 450 5.4 1.38 265.46 613.7 A
7 X
90 450 5.4 1.58 265.17 615.28 G
0 X
90 450 5.4 1.58 265.17 615.28 A
7 X
90 450 5.4 1.44 265.17 616.39 G
0 X
90 450 5.4 1.44 265.17 616.39 A
7 X
90 450 5.4 1.38 265.17 617.83 G
0 X
90 450 5.4 1.38 265.17 617.83 A
7 X
90 450 5.4 1.32 265.17 603.57 G
0 X
90 450 5.4 1.32 265.17 603.57 A
7 X
90 450 5.4 1.51 264.88 605.08 G
0 X
90 450 5.4 1.51 264.88 605.08 A
7 X
90 450 5.4 1.38 264.88 606.15 G
0 X
90 450 5.4 1.38 264.88 606.15 A
7 X
90 450 5.4 1.32 264.88 607.52 G
0 X
90 450 5.4 1.32 264.88 607.52 A
273.41 625.67 273.49 605.52 2 L
7 X
V
2 H
2 Z
0 X
N
273.34 616.19 269.99 616.19 2 L
7 X
V
0 X
N
273.19 605.52 269.11 605.52 2 L
7 X
V
0 X
N
268.23 634.51 309.71 644.16 R
7 X
V
0 X
(workstation) 268.23 638.83 T
299.23 625.97 310.32 631.3 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 298.21 613.7 G
0 X
90 450 5.4 1.38 298.21 613.7 A
7 X
90 450 5.4 1.58 297.92 615.28 G
0 X
90 450 5.4 1.58 297.92 615.28 A
7 X
90 450 5.4 1.44 297.92 616.39 G
0 X
90 450 5.4 1.44 297.92 616.39 A
7 X
90 450 5.4 1.38 297.92 617.83 G
0 X
90 450 5.4 1.38 297.92 617.83 A
7 X
90 450 5.4 1.32 297.92 603.57 G
0 X
90 450 5.4 1.32 297.92 603.57 A
7 X
90 450 5.4 1.51 297.63 605.08 G
0 X
90 450 5.4 1.51 297.63 605.08 A
7 X
90 450 5.4 1.38 297.63 606.15 G
0 X
90 450 5.4 1.38 297.63 606.15 A
7 X
90 450 5.4 1.32 297.63 607.52 G
0 X
90 450 5.4 1.32 297.63 607.52 A
306.16 625.67 306.23 605.52 2 L
7 X
V
2 H
2 Z
0 X
N
306.09 616.19 302.73 616.19 2 L
7 X
V
0 X
N
305.94 605.52 301.86 605.52 2 L
7 X
V
0 X
N
282.64 626.39 293.73 631.72 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 281.62 614.12 G
0 X
90 450 5.4 1.38 281.62 614.12 A
7 X
90 450 5.4 1.58 281.33 615.7 G
0 X
90 450 5.4 1.58 281.33 615.7 A
7 X
90 450 5.4 1.44 281.33 616.81 G
0 X
90 450 5.4 1.44 281.33 616.81 A
7 X
90 450 5.4 1.38 281.33 618.25 G
0 X
90 450 5.4 1.38 281.33 618.25 A
7 X
90 450 5.4 1.32 281.33 603.98 G
0 X
90 450 5.4 1.32 281.33 603.98 A
7 X
90 450 5.4 1.51 281.04 605.5 G
0 X
90 450 5.4 1.51 281.04 605.5 A
7 X
90 450 5.4 1.38 281.04 606.57 G
0 X
90 450 5.4 1.38 281.04 606.57 A
7 X
90 450 5.4 1.32 281.04 607.94 G
0 X
90 450 5.4 1.32 281.04 607.94 A
289.57 626.09 289.64 605.94 2 L
7 X
V
2 H
2 Z
0 X
N
289.5 616.61 286.14 616.61 2 L
7 X
V
0 X
N
289.35 605.94 285.27 605.94 2 L
7 X
V
0 X
N
285.8 578.37 283.29 566.63 279.2 577.91 282.58 576.94 4 Y
V
280.89 601.35 282.58 576.94 2 L
7 X
V
1 H
0 Z
0 X
N
257.41 582.65 309.34 591.72 R
7 X
V
0 X
(image segments) 257.41 586.38 T
413.13 629.87 458.87 645.75 R
7 X
V
2 H
0 X
N
399.65 564.7 474.11 659.31 R
0.5 H
N
425.35 576.99 426.96 565.1 419.29 574.33 422.8 574.56 4 Y
V
411.7 599.82 422.8 574.55 2 L
1 H
N
441.98 575.51 436.02 565.1 435.56 577.09 438.48 575.13 4 Y
V
444.45 599.4 438.49 575.13 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(ISS disk server) 411.25 651.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
413.89 624.43 424.97 629.76 R
0.5 H
N
7 X
90 450 5.4 1.38 412.87 612.16 G
0 X
90 450 5.4 1.38 412.87 612.16 A
7 X
90 450 5.4 1.58 412.57 613.74 G
0 X
90 450 5.4 1.58 412.57 613.74 A
7 X
90 450 5.4 1.44 412.57 614.86 G
0 X
90 450 5.4 1.44 412.57 614.86 A
7 X
90 450 5.4 1.38 412.57 616.3 G
0 X
90 450 5.4 1.38 412.57 616.3 A
7 X
90 450 5.4 1.32 412.57 602.03 G
0 X
90 450 5.4 1.32 412.57 602.03 A
7 X
90 450 5.4 1.51 412.28 603.54 G
0 X
90 450 5.4 1.51 412.28 603.54 A
7 X
90 450 5.4 1.38 412.28 604.61 G
0 X
90 450 5.4 1.38 412.28 604.61 A
7 X
90 450 5.4 1.32 412.28 605.99 G
0 X
90 450 5.4 1.32 412.28 605.99 A
420.82 624.14 420.89 603.99 2 L
7 X
V
2 H
2 Z
0 X
N
420.74 614.66 417.39 614.66 2 L
7 X
V
0 X
N
420.6 603.99 416.51 603.99 2 L
7 X
V
0 X
N
415.63 632.97 457.11 642.63 R
7 X
V
3 F
0 X
(workstation) 415.63 637.29 T
446.64 624.43 457.72 629.76 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 445.62 612.16 G
0 X
90 450 5.4 1.38 445.62 612.16 A
7 X
90 450 5.4 1.58 445.32 613.74 G
0 X
90 450 5.4 1.58 445.32 613.74 A
7 X
90 450 5.4 1.44 445.32 614.86 G
0 X
90 450 5.4 1.44 445.32 614.86 A
7 X
90 450 5.4 1.38 445.32 616.3 G
0 X
90 450 5.4 1.38 445.32 616.3 A
7 X
90 450 5.4 1.32 445.32 602.03 G
0 X
90 450 5.4 1.32 445.32 602.03 A
7 X
90 450 5.4 1.51 445.03 603.54 G
0 X
90 450 5.4 1.51 445.03 603.54 A
7 X
90 450 5.4 1.38 445.03 604.61 G
0 X
90 450 5.4 1.38 445.03 604.61 A
7 X
90 450 5.4 1.32 445.03 605.99 G
0 X
90 450 5.4 1.32 445.03 605.99 A
453.56 624.14 453.64 603.99 2 L
7 X
V
2 H
2 Z
0 X
N
453.49 614.66 450.14 614.66 2 L
7 X
V
0 X
N
453.35 603.99 449.26 603.99 2 L
7 X
V
0 X
N
430.04 624.85 441.13 630.18 R
0.5 H
0 Z
N
7 X
90 450 5.4 1.38 429.02 612.58 G
0 X
90 450 5.4 1.38 429.02 612.58 A
7 X
90 450 5.4 1.58 428.73 614.16 G
0 X
90 450 5.4 1.58 428.73 614.16 A
7 X
90 450 5.4 1.44 428.73 615.28 G
0 X
90 450 5.4 1.44 428.73 615.28 A
7 X
90 450 5.4 1.38 428.73 616.72 G
0 X
90 450 5.4 1.38 428.73 616.72 A
7 X
90 450 5.4 1.32 428.73 602.45 G
0 X
90 450 5.4 1.32 428.73 602.45 A
7 X
90 450 5.4 1.51 428.44 603.96 G
0 X
90 450 5.4 1.51 428.44 603.96 A
7 X
90 450 5.4 1.38 428.44 605.03 G
0 X
90 450 5.4 1.38 428.44 605.03 A
7 X
90 450 5.4 1.32 428.44 606.41 G
0 X
90 450 5.4 1.32 428.44 606.41 A
436.97 624.55 437.04 604.41 2 L
7 X
V
2 H
2 Z
0 X
N
436.9 615.07 433.54 615.07 2 L
7 X
V
0 X
N
436.75 604.41 432.67 604.41 2 L
7 X
V
0 X
N
433.2 576.83 430.7 565.1 426.6 576.38 429.98 575.4 4 Y
V
428.29 599.82 429.98 575.4 2 L
7 X
V
1 H
0 Z
0 X
N
407.51 582.65 459.44 591.72 R
7 X
V
0 X
(image segments) 407.51 586.38 T
303.18 517.22 355.11 526.28 R
7 X
V
0 X
(A) 303.18 520.95 T
(TM switch) 308.07 520.95 T
329.31 428.17 459.1 437.23 R
7 X
V
0 X
(single high bandwidth sink \050or source\051) 329.31 431.9 T
0 10 Q
(Parallel Data and Server Ar) 137.4 408.6 T
(chitectur) 257.2 408.6 T
(e Appr) 295.35 408.6 T
(oach to the Image Server System) 324.89 408.6 T
318.97 453.07 450.41 474.13 R
7 X
V
3 8 Q
0 X
(A) 318.97 468.8 T
(TM network \050interleaved cell streams) 323.86 468.8 T
(representing multiple virtual circuits\051) 318.97 458.8 T
417.55 527.69 453.24 564.69 R
7 X
V
0.5 H
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A) 420.51 555.85 T
(TM) 425.4 555.85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(network) 420.51 545.85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface) 420.51 535.85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
87.15 371.67 522.85 679.6 C
95.72 394.27 496.32 666.77 R
1 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
53.32 378.03 519.82 388.83 R
7 X
V
0 12 Q
0 X
(Figur) 148.19 380.83 T
(e 1) 176.64 380.83 T
(Data Str) 199.97 380.83 T
(eams Aggr) 243.41 380.83 T
(egated by A) 298.18 380.83 T
(TM Switches) 357.95 380.83 T
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
1.77 (hosts on a network. Both try to maintain the availability of the system as a whole by) 89 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.7 (building in some redundancy) 89 697.6 P
1.7 (, allowing for the possibility that a disk or host might be) 232.97 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.76 (unavailable at a critical time. The goal of both is to increase data throughput despite the) 89 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(current limits on both disk and host throughput.) 89 669.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.94 (However) 89 647.6 P
0.94 (, the ISS and the Zebra network \336le system dif) 132.5 647.6 P
0.94 (fer in the fundamental nature of) 364.02 647.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.85 (the tasks they perform. Zebra is intended to provide traditional \336le system functionality) 89 633.6 P
0.85 (,) 518 633.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.62 (ensuring the consistency and correctness of a \336le system whose contents are changing) 89 619.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.64 (from moment to moment. The ISS, on the other hand, tries to provide extremely) 89 605.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.88 (high-speed, high-throughput access to a relatively static set of data. It is optimized to) 89 591.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.83 (retrieve data, requiring only minimum overhead to verify data correctness and no) 89 577.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(overhead to compensate for corrupted data.) 89 563.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.07 (There are other research groups working on solving problems related to distributed) 89 541.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.46 (storage and fast multimedia data retrieval. For example, Ghandeharizadeh, Ramos, et al.,) 89 527.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (at USC are working on declustering methods for multimedia data [3], and Rowe, et al., at) 89 513.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(UCB are working on a continuous media player based on the MPEG standard [12].) 89 499.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(3.0  Applications) 89 458.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
2.38 (There are several tar) 89 433.73 P
2.38 (get applications for the initial implementation of the ISS. These) 194.22 433.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(applications fall into two categories: image servers and multimedia / video \336le servers.) 89 419.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3.1  Image Server) 89 393.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.29 (The initial use of the ISS is to provide data to a terrain visualization application in the) 89 371.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.15 (MAGIC testbed) 89 354.53 P
3 9.6 Q
0.92 (3) 167.14 359.33 P
3 12 Q
1.15 (. This application, known as T) 171.94 354.53 P
1.15 (erraV) 322.52 354.53 P
1.15 (ision [5], allows a user to navigate) 349.11 354.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.84 (through and over a high resolution landscape represented by digital aerial images and) 89 340.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (elevation models. T) 89 326.53 P
0.16 (erraV) 183.48 326.53 P
0.16 (ision is of interest to the U.S. Army because of its ability to let a) 210.07 326.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.9 (commander \322see\323 the battle\336eld. T) 89 312.53 P
2.9 (erraV) 267.37 312.53 P
2.9 (ision is very dif) 293.96 312.53 P
2.9 (ferent from a typical \322\337ight) 377.44 312.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.02 (simulator\323-like program in that it uses lar) 89 298.53 P
1.02 (ge quantities of high resolution aerial imagery) 293.56 298.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.32 (for the visualization instead of simulated terrain. T) 89 284.53 P
1.32 (erraV) 340.7 284.53 P
1.32 (ision requires lar) 367.29 284.53 P
1.32 (ge amounts of) 450.37 284.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.63 (data, transferred at both bursty and steady rates. The ISS is used to supply image data at) 89 270.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (hundreds of Mbits/s rates to T) 89 256.53 P
0.54 (erraV) 235.19 256.53 P
0.54 (ision. W) 261.78 256.53 P
0.54 (e are not using any data compression for this) 302.03 256.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.43 (application because the bandwidth requirements for T) 89 242.53 P
1.43 (erraV) 355.37 242.53 P
1.43 (ision are such that real-time) 381.96 242.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(decompression is not possible without using special purpose hardware.) 89 228.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.55 (In the case of a lar) 89 206.53 P
0.55 (ge-image browsing application like T) 179.85 206.53 P
0.55 (erraV) 361.2 206.53 P
0.55 (ision, the strategy for using) 387.79 206.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (the ISS is straightforward: the image is tiled \050broken into smaller) 89 192.53 P
-0.04 (, equal-sized pieces\051, and) 400.14 192.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (the tiles are scattered across the disks and hosts of the ISS. The order of images delivered) 89 178.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (to the application is determined by the application predicting a \322path\323 through the image) 89 164.53 P
0 0 0 1 0 0 0 K
89 135.4 521 155.4 C
0 0 0 1 0 0 0 K
89 143.4 221 143.4 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
3 10 Q
0 X
0 0 0 1 0 0 0 K
-0.19 (3.  MAGIC \050Multidimensional Applications and Gigabit Internetwork Consortium\051 is a gigabit network test-) 89 128.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(bed that was established in June 1992 by the U. S. Government\325) 89 116.73 T
(s Advanced Research Projects Agency) 344.81 116.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050ARP) 89 104.73 T
(A\051[1) 110.86 104.73 T
(1]. MAGIC\325) 129.37 104.73 T
(s charter is to develop a high-speed, wide-area networking testbed that will demon-) 178.81 104.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.19 (strate interactive exchange of data at gigabit-per) 89 92.73 P
-0.19 (-second rates among multiple distributed servers and clients) 280.36 92.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(using a terrain visualization application.) 89 80.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
0.96 (\050landscape\051, and requesting the tiles needed to supply a view along the path. The actual) 89 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (delivery order is a function of how quickly a given server can read the tiles from disk and) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.21 (send them over the network. T) 89 683.6 P
1.21 (iles will be delivered in roughly the requested order) 241.28 683.6 P
1.21 (, but) 498.45 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5.28 (small variations from the requested order will occur) 89 669.6 P
5.28 (. These variations must be) 374.24 669.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(accommodated by buf) 89 655.6 T
(fering or other strategies in the client application.) 195.43 655.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.33 (This approach can supply data to any sort of lar) 89 633.6 P
0.33 (ge-image browsing application, including) 320.03 633.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.77 (applications for displaying lar) 89 619.6 P
0.77 (ge aerial-photo landscapes, satellite images, X-ray images,) 234.76 619.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(scanning microscope images, and so forth.) 89 605.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3.2  V) 89 579.6 T
(ideo Server) 118.22 579.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
5.14 (Examples of video server applications include video players, video editors, and) 89 557.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.05 (multimedia document browsers. A video server might contain several types of stream-like) 89 543.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.19 (data, including conventional video, compressed video, variable time base, multimedia) 89 529.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.09 (hypertext, interactive video, and others. Several users may be accessing the same video) 89 515.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.45 (data at the same time, but may be at dif) 89 501.6 P
1.45 (ferent frames in the stream. This af) 290.46 501.6 P
1.45 (fects many) 467.23 501.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.17 (factors in an image server system, including the layout of the data on disks. Since there is) 89 487.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.25 (a predictable, sequential pattern to the requests for data, the data would be placed on disk) 89 473.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.64 (in a like manner) 89 459.6 P
1.64 (. Lar) 170.92 459.6 P
1.64 (ge commercial concerns such as T) 195 459.6 P
1.64 (ime W) 367.75 459.6 P
1.64 (arner and U.S. W) 400.76 459.6 P
1.64 (est are) 488.37 459.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (building lar) 89 445.6 P
-0.03 (ge-scale commercial video servers such as the T) 144.43 445.6 P
-0.03 (ime W) 375.42 445.6 P
-0.03 (arner / Silicon Graphics) 406.77 445.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (video server [6]. Our approach may address a wider scale, as well as a greater diversity) 89 431.42 P
-0.09 (, of) 505.09 431.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.16 (data or) 89 417.42 P
4.16 (ganization strategies so as to serve the diverse needs of schools, research) 125.94 417.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.03 (institutions, and hospitals for video-image servers in support of various educational and) 89 403.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(research-oriented digital libraries.) 89 389.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3.3  Application to ISS Interface) 89 363.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
-0.07 (Application access to the ISS is through a client-side library that accepts requests for data,) 89 341.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.15 (and returns data to the application. The client library obtains from the ISS Master a list of) 89 327.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (ISS Disk Servers \050q.v) 89 313.42 P
-0.08 (.\051 that have data for the area of interest. The client library establishes) 191.99 313.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.41 (connections to all ISS Disk Servers containing that data set. The application speci\336es the) 89 299.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(location of a memory buf) 89 285.42 T
(fer to receive incoming data.) 210.76 285.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (The current implementation provides access to lar) 89 263.42 P
0.11 (ge images, in which the unit of data is a) 329.38 263.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.04 (tile. The application requests data in terms of lists of tiles, and the tiles sent by the ISS) 89 249.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (servers are placed into the application\325) 89 235.23 P
-0.03 (s buf) 273.8 235.23 P
-0.03 (fer) 297.21 235.23 P
-0.03 (. \050See Figure 2) 309.87 235.23 P
-0.03 (\050Application Architecture\051.\051) 386.4 235.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3.4  Data Pr) 89 209.23 T
(ediction) 150.1 209.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0.1 (Data prediction is important to ensure that the ISS is utilized as ef) 89 187.23 P
0.1 (\336ciently as possible. By) 406.01 187.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.17 (always requesting more tiles than the ISS can actually deliver before the next tile request,) 89 173.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.16 (we ensure that no component of the ISS is ever idle. For example, if most of a request) 89 159.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.06 (list\325) 89 145.23 P
1.06 (s images were on one server) 107.01 145.23 P
1.06 (, the other servers could still be reading and sending or) 247.45 145.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (caching images that may be needed in the future, instead of idly waiting. The point of the) 89 131.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(path prediction is to provide a rational basis for pre-requesting tiles.) 89 117.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.8 (As an example of path prediction, consider an interactive video database with a \336nite) 89 95.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (number of possible branch points. \050A \322branch point\323 occurs where a user might select one) 89 81.23 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
-0.21 (of several possible play clips.\051 As a branch point is approached by the player) 89 502.67 P
-0.21 (, the predictor) 454.43 502.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.56 (\050without knowledge of which branch will be taken\051 will start requesting images \050frames\051) 89 488.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.05 (along both branches. These images are cached \336rst at the disk servers, then at the) 89 474.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.1 (receiving application. As soon as a branch is chosen, the predictor ceases to send requests) 89 460.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.6 (for images from the other branch. Any cached but unsent images are \337ushed as better) 89 446.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(predictions \336ll the cache.) 89 432.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.54 (For MAGIC\325) 89 410.67 P
1.54 (s T) 153.54 410.67 P
1.54 (erraV) 169.24 410.67 P
1.54 (ision, prediction is based on geometric characteristics of the path) 195.84 410.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.7 (being followed, the limitations of the mode of simulated transport \050that is, walking,) 89 396.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.49 (driving, \337ying, etc.\051, the intended destination, and so on. The prediction results in a) 89 382.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (priority ordered list of tile requests being sent to the ISS. The ISS has no knowledge of the) 89 368.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(prediction strategy \050or even if one has been used\051.) 89 354.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.47 (The client will keep asking for an image until it shows up, or until it is no longer needed) 89 332.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.95 (\050e.g. the application may have \322passed\323 the region of landscape that involves the image) 89 318.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (that was requested, but never received.\051 Applications will have dif) 89 304.67 P
0.19 (ferent strategies to deal) 408.79 304.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.64 (with images that do not arrive in time. For example, T) 89 290.67 P
2.64 (erraV) 374.53 290.67 P
2.64 (ision keeps a local low) 401.12 290.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(resolution data set to \336ll in for missing tiles.) 89 276.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.34 (Prediction is transparent to the ISS, and is manifested only in the order and priority of) 89 254.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.03 (images in the request list. The prediction algorithm is mostly a function of the client) 89 240.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (application, and typically runs on the client. Prediction could also be done by a third-party) 89 226.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.31 (application. The aforementioned interactive video database, for example, might use a) 89 212.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(third-party application for prediction.) 89 198.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(4.0  Design) 89 157.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(4.1  Goals) 89 129.17 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(The following are some guidelines we have followed in designing the ISS:) 89 107.17 T
0 0 0 1 0 0 0 K
89 72.4 521 719.6 C
94.12 510.67 515.88 719.6 C
0 0 0 1 0 0 0 K
72.78 510.93 549.45 523.6 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Figur) 221.29 515.6 T
(e 2) 249.74 515.6 T
(Application Ar) 273.07 515.6 T
(chitectur) 349.85 515.6 T
(e) 395.62 515.6 T
100.18 533.64 508.47 713.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105.61 653.28 276.31 707.39 R
7 X
0 0 0 1 0 0 0 K
V
1 H
2 Z
0 X
N
109.37 695.98 273.17 705.76 R
7 X
V
3 10 Q
0 X
(Application) 167.66 699.09 T
108.59 656.05 219.67 665.83 R
7 X
V
0 X
(Client ISS I/O library) 120.93 659.16 T
427.55 652.63 506.02 694.67 R
7 X
V
0 X
N
431.95 655.24 501.61 692.39 R
7 X
V
0 X
(ISS disk server) 436.5 685.73 T
322.99 542.89 401.44 584.94 R
7 X
V
0 X
N
327.39 545.5 397.05 582.66 R
7 X
V
0 X
(ISS disk server) 331.94 575.99 T
382.37 595.26 460.82 637.31 R
7 X
V
0 X
N
386.76 597.87 456.42 635.03 R
7 X
V
0 X
(ISS disk server) 391.32 628.36 T
118.18 611.4 118.16 602.22 113.31 610.02 115.75 610.71 4 Y
3 X
V
120.04 664.36 M
 105.35 647.23 115.78 628.44 115.75 610.71 D
 115.75 610.71 115.75 610.71 115.75 610.71 D
N
119.41 628.84 168.99 641.22 R
7 X
V
0 X
(request tiles) 120.18 634.55 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
304.68 563.15 316.18 559.74 304.62 556.54 304.65 559.84 4 Y
3 X
V
182.8 570.17 M
 218.84 561.84 262.69 560.27 304.63 559.83 D
N
372.31 616.59 383.8 613.37 372.36 610.01 372.33 613.3 4 Y
V
180.91 579.62 M
 256.67 602.74 281.1 612.28 372.34 613.29 D
N
412.46 661.05 424.41 662.08 414.82 654.88 413.64 657.96 4 Y
V
181.54 594.29 M
 254.36 620.77 342.55 631.89 413.61 657.95 D
N
104.35 560.71 182.8 602.76 R
7 X
V
0 X
N
108.74 563.32 178.4 600.48 R
7 X
V
0 X
(Name server) 118.17 593.81 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
198.72 569.17 248.18 579.72 R
7 X
V
0 X
(requests) 207.07 573.05 T
160.83 670.88 213.55 695 R
7 X
V
0.5 H
0 X
N
163.97 673.16 209.78 692.39 R
7 X
V
0 X
(user buf) 165.17 685.73 T
(fer) 197.48 685.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
227.75 658.8 211.85 672.51 232.6 669.31 230.18 664.06 4 Y
V
327.21 556.69 M
 281.05 584.36 243.54 612.26 239.87 647.3 D
 239 655.52 235.49 660.41 230.18 664.05 D
3 H
N
J
107.49 667.62 273.17 667.62 273.17 654.58 107.49 654.58 4 Y
J
107.49 663.87 107.49 667.62 111.24 667.62 3 L
0.5 H
N
[7.392 6.406] 7.392 I
111.24 667.62 269.42 667.62 2 L
N
J
269.42 667.62 273.17 667.62 273.17 663.87 3 L
N
[6.389 5.538] 6.389 I
273.17 663.87 273.17 658.33 2 L
N
J
273.17 658.33 273.17 654.58 269.42 654.58 3 L
N
[7.392 6.406] 7.392 I
269.42 654.58 111.24 654.58 2 L
N
J
111.24 654.58 107.49 654.58 107.49 658.33 3 L
N
[6.389 5.538] 6.389 I
107.49 658.33 107.49 663.87 2 L
N
J
230.95 669.79 214.8 683.2 235.6 680.39 233.27 675.09 4 Y
V
396.17 621.7 M
 334.94 626.57 271.29 630.54 248.07 663.83 D
 244.75 668.58 240.74 671.48 233.28 675.09 D
3 H
N
233.15 682.14 214.59 691.93 235.52 693.46 234.33 687.8 4 Y
V
434.46 675.29 M
 371.53 697.36 338.85 638.77 280.61 652.06 D
 272.54 653.9 264.41 677.58 234.35 687.8 D
N
297.04 673.57 361.18 686.72 R
7 X
V
0 X
(data returned) 302.87 680.05 T
94.12 510.67 515.88 719.6 C
100.18 533.64 508.47 713.72 R
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
89 72.4 521 719.6 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(\245) 103.4 711.6 T
( The ISS should be capable of being geographically distributed. In a future environ-) 113.6 711.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (ment of lar) 117.8 697.6 P
-0.31 (ge-scale, mesh-connected national networks, network-distributed storage) 169.62 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (should be capable of providing an uninterruptable stream of data, in much the same) 117.8 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(way that a power grid is resilient in the face of source failures, and tolerant of peak) 117.8 669.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(demands because of multiple sources multiply interconnected.) 117.8 655.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (\245) 103.4 635.6 P
-0.09 ( The ISS approach should be scalable in all dimensions, including data set size, num-) 113.6 635.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ber of users, number of server sites, and aggregate data delivery speed.) 117.8 621.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (\245) 103.4 601.6 P
-0.16 ( The ISS should deliver coherent image streams to an application, given that the indi-) 113.6 601.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(vidual images that make up the stream are scattered \050by design\051 all over the net-) 117.8 587.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(work. In this case, \322coherent\323 means \322in the order needed by the application.\323 No) 117.8 573.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(one disk server will ever be capable of delivering the entire stream. The network is) 117.8 559.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the) 117.8 545.6 T
2 F
(server) 135.46 545.6 T
3 F
(.) 164.79 545.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 525.6 T
( The ISS should be af) 113.6 525.6 T
(fordable. While something like a HIPPI-based RAID device) 217.04 525.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(might be able to provide the functionality of the ISS, this sort of device is very) 117.8 511.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(expensive, is not scalable, and is a single point of failure.) 117.8 497.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(4.2  Resear) 89 471.6 T
(ch Issues) 145.1 471.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(The design goals present several issues that need to be addressed. These include:) 89 449.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.24 (\245) 103.4 429.6 P
-0.24 ( How to store and retrieve image data at gigabit speeds using a storage system whose) 113.6 429.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(servers are widely distributed;) 117.8 415.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.33 (\245) 103.4 395.6 P
-0.33 ( How to place data blocks \050tiles\051 such that image data will be distributed across many) 113.6 395.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(storage servers in a way that ensures parallel operation;) 117.8 381.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 361.6 T
( How to handle high-speed IP transport over A) 113.6 361.6 T
(TM networks to provide the parallel) 336.9 361.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(data paths needed to aggregate medium-speed disk servers into a logically inte-) 117.8 347.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(grated, high-speed image storage server) 117.8 333.6 T
(. \050Although A) 308.08 333.6 T
(TM will probably become the) 373.75 333.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (Ethernet of the future, end-to-end networks will be heterogeneous for a long time to) 117.8 319.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(come, necessitating the use of an internetwork protocol, of which IP is the clear) 117.8 305.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(choice\051;) 117.8 291.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (\245) 103.4 271.6 P
-0.23 ( Assessing how an A) 113.6 271.6 P
-0.23 (TM network will behave \050or misbehave\051 under the conditions of) 212.01 271.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(multiple, coordinated, parallel data streams.) 117.8 257.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(4.3  Appr) 89 231.6 T
(oach:) 137.12 231.6 T
0 10 Q
(A Distributed, Parallel Server) 168.12 231.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
-0.26 (The ISS design is based on the use of multiple low-cost, medium-speed disk servers which) 89 209.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.83 (use the network to aggregate server output into a single high-bandwidth stream. T) 89 195.6 P
2.83 (o) 515 195.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.19 (achieve high performance we exploit all possible levels of parallelism, including that) 89 181.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (available at the level of the disks, controllers, processors/memory banks, servers, and the) 89 167.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (network. Proper data placement strategy is also key to exploiting system parallelism. For) 89 153.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.15 (placement of image tile data, an application-related program declusters tiles so that all ISS) 89 139.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (disks are evenly accessed by tile requests, but clusters tiles that are on the same disk[1].) 89 125.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.12 (This strategy is a function of both the data structure \050tiled images\051 and the geometry of the) 89 111.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.9 (access \050e.g., paths through the landscape\051. Currently we are working on extending these) 89 97.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(methods to handle video-like data.) 89 83.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
0.98 (At the individual server level, the approach is that of a collection of disk managers that) 89 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.51 (move requested data to memory cache. Depending on the nature of the data and its) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (or) 89 683.6 P
0.13 (ganization, the disk managers may have a strategy for moving other closely located and) 98.78 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (related data from disk to memory as a side ef) 89 669.6 P
0.13 (fect of a particular data request. However) 306.28 669.6 P
0.13 (, in) 505.53 669.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.09 (general, we have tried to keep the implementation of data prediction \050determining what) 89 655.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (data will be needed in the near future\051 separate from the basic data moving function of the) 89 641.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.88 (server) 89 627.6 P
0.88 (. Prediction might be done by the application, or it might be done be a third party) 117.66 627.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.91 (that understands the data usage patterns. In any event, the server sees only lists of) 89 613.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(requested blocks.) 89 599.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.86 (As explained below) 89 577.6 P
1.86 (, the dominant bottlenecks for this type of application in a typical) 187.25 577.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.48 (UNIX workstation are, \336rst, memory copy speed, and second, network access speed. For) 89 563.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.86 (these reasons, an important design criterion is to use as few memory copies as possible,) 89 549.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.36 (and to keep the network interface operating at full bandwidth all the time. Our) 89 535.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.75 (implementation uses only three copies to get data from disk to network, so maximum) 89 521.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(server throughput is about \050mem_copy_speed / 3\051.) 89 507.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.18 (Another important aspect of the design is that all components are instrumented for timing) 89 485.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (and data \337ow monitoring in order to characterize the ISS implementation and the network) 89 471.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.79 (performance. T) 89 457.6 P
0.79 (o do this, all communications between ISS components are timestamped.) 162.92 457.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.25 (W) 89 443.6 P
3.25 (e are using GPS \050Global Positioning System\051 receivers and NTP \050Network T) 99.37 443.6 P
3.25 (ime) 503 443.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.43 (Protocol\051 [8] [9] to synchronize the clocks of all ISS servers and of the client application) 89 429.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in order to accurately measure network throughput and latency) 89 415.42 T
(.) 389.48 415.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(5.0  ISS Ar) 89 374.58 T
(chitectur) 154.09 374.58 T
(e and Implementation) 207.48 374.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
1.82 (The following is a brief overview of a typical ISS operation. A data set must \336rst be) 89 349.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.76 (loaded across a given set of ISS hosts and disks, and a table containing disk/of) 89 335.92 P
2.76 (fset) 503.67 335.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (locations for each block of data is stored on each host. The application sends requests for) 89 321.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.12 (data \050images, video, sound, etc.\051 to the Name Server process on each Disk Server host,) 89 307.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (which does a lookup to determine the location \050server - disk - of) 89 293.92 P
-0.17 (fset\051 of the requested data.) 394.71 293.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.48 (If the data is not stored on that host, the request is discarded with the assumption that) 89 279.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.02 (another host will handle it; otherwise the list of locations is passed to the ISS Disk Server) 89 265.92 P
0.02 (.) 518 265.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.49 (Each Disk Server then checks to see if the data is already in its cache, and if not, fetches) 89 251.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.44 (the data from disk and transfers it to the cache. Once the data is in the cache, it is sent to) 89 237.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the requesting application.) 89 223.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.2 (In the following sections, we describe the basic software modules, their functions, how) 89 201.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (they relate to each other) 89 187.92 P
-0.14 (, and some of the terms and models that were used in the design of) 203.27 187.92 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.43 (the ISS. Figure 3) 89 173.73 P
0.43 (\050ISS Server Architecture\051 shows how the components of the ISS relate) 178.07 173.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to each other) 89 159.73 T
(.) 150.32 159.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.1  ISS Master) 89 133.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
-0.1 (The ISS Master process is responsible for application-to-ISS startup communication, Disk) 89 111.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (Server process initialization, performance monitoring, and coordination between multiple) 89 97.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.72 (ISS Disk Servers. This includes the ability to collect performance and usage statistics of) 89 83.73 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
1.4 (all ISS components. In the future, we plan to extend the functionality of the Master to) 89 389.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.23 (dynamically recon\336gure ISS Disk Server usage to avoid network or ISS Disk Server) 89 375.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(bottlenecks.) 89 361.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.2  Name Server) 89 335.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0.72 (The Name Server listens for tile request lists from the application. After receiving a list,) 89 313.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.1 (the Name Server does a table lookup to determine where the data is located \050i.e. which) 89 299.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.65 (server) 89 285.4 P
0.65 (, which disk, and the disk of) 117.84 285.4 P
0.65 (fset\051. The Name Server then passes this list to the ISS) 256.85 285.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Disk Server) 89 271.4 T
(.) 145.33 271.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.3) 89 245.4 T
(ISS Disk Server) 113 245.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
2.11 (There is one ISS Disk Server process for each ISS host. It is responsible for all ISS) 89 223.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (memory buf) 89 209.4 P
0.13 (fer and request list management on that host. The Disk Server receives image) 147.9 209.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.86 (requests from the Master process, and determines if the image is already in its buf) 89 195.4 P
1.86 (fer) 507.68 195.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.15 (cache. If it is already in the buf) 89 181.4 P
0.15 (fer cache \050which is kept entirely in available memory\051, the) 239.1 181.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (request is added to the \322to send\323 list. Otherwise, it is added to a \322to read\323 list. T) 89 167.4 P
-0.21 (ile requests) 466.89 167.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.84 (that have not been satis\336ed by the time the next list from the Master process arrives are) 89 153.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (\322\337ushed\323 \050discarded\051 from the lists. All requests that haven\325) 89 139.4 P
0.54 (t been either read of) 382.03 139.4 P
0.54 (f of disk) 479.93 139.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.22 (or written to the network interface are removed from all request lists, and any memory) 89 125.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.39 (buf) 89 111.4 P
1.39 (fers waiting to be written are returned to the hash table. Note that if a tile read has) 104.78 111.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.1 (completed, but the tile has not yet been sent to the network, the data stays in the cache, so) 89 97.4 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.2 (that if that tile is in the next request list it will be sent \336rst. Those buf) 89 83.4 P
-0.2 (fers that were waiting) 417.29 83.4 P
0 0 0 1 0 0 0 K
88.25 397.4 521.75 719.6 C
0 0 0 1 0 0 0 K
94.08 420.1 508.15 709.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
94.08 420.1 508.15 709.93 R
7 X
0 0 0 1 0 0 0 K
V
204.72 527.98 220.42 535.72 211.21 520.84 207.96 524.41 4 Y
0 X
V
207.97 524.41 188.76 506.97 2 L
7 X
V
3 H
2 Z
0 X
N
253.05 518.33 257.88 535.15 262.7 518.33 257.88 518.33 4 Y
V
257.88 506.23 257.88 518.33 2 L
7 X
V
0 X
N
332.75 518.16 336.92 535.15 342.39 518.53 337.57 518.34 4 Y
V
337.98 507.7 337.58 518.34 2 L
7 X
V
0 X
N
382.81 521.5 372.62 535.72 388.8 529.06 385.81 525.28 4 Y
V
408.94 506.97 385.81 525.27 2 L
7 X
V
0 X
N
176.75 590.65 191.69 581.53 174.19 581.35 175.47 586 4 Y
V
153.43 592.08 175.47 586 2 L
7 X
V
0 X
N
257.51 480.27 257.51 454.73 2 L
7 X
V
0 X
N
337.74 481.41 337.74 455.3 2 L
7 X
V
0 X
N
417.97 481.41 417.97 457 2 L
7 X
V
0 X
N
184.57 478.57 184.57 452.65 2 L
7 X
V
0 X
N
7 X
90 450 29.17 17.56 138.69 604.4 G
2 H
0 Z
0 X
90 450 29.17 17.56 138.69 604.4 A
7 X
90 450 29.17 17.56 417.97 492.74 G
0 X
90 450 29.17 17.56 417.97 492.74 A
7 X
90 450 29.17 17.56 337.74 492.74 G
0 X
90 450 29.17 17.56 337.74 492.74 A
7 X
90 450 29.17 17.56 257.51 492.74 G
0 X
90 450 29.17 17.56 257.51 492.74 A
7 X
90 450 29.17 17.56 184.57 492.74 G
0 X
90 450 29.17 17.56 184.57 492.74 A
7 X
90 450 21.88 6.59 184.57 438.05 G
0.5 H
0 X
90 450 21.88 6.59 184.57 438.05 A
7 X
90 450 21.88 6.34 184.57 440.73 G
0 X
90 450 21.88 6.34 184.57 440.73 A
7 X
90 450 21.88 6.59 184.57 443.41 G
0 X
90 450 21.88 6.59 184.57 443.41 A
7 X
90 450 21.88 6.59 184.57 446.34 G
0 X
90 450 21.88 6.59 184.57 446.34 A
7 X
90 450 21.88 6.59 184.57 449.75 G
0 X
90 450 21.88 6.59 184.57 449.75 A
7 X
90 450 21.88 6.59 257.51 438.05 G
0 X
90 450 21.88 6.59 257.51 438.05 A
7 X
90 450 21.88 6.34 257.51 440.73 G
0 X
90 450 21.88 6.34 257.51 440.73 A
7 X
90 450 21.88 6.59 257.51 443.41 G
0 X
90 450 21.88 6.59 257.51 443.41 A
7 X
90 450 21.88 6.59 257.51 446.34 G
0 X
90 450 21.88 6.59 257.51 446.34 A
7 X
90 450 21.88 6.59 257.51 449.75 G
0 X
90 450 21.88 6.59 257.51 449.75 A
7 X
90 450 21.88 6.59 337.74 438.05 G
0 X
90 450 21.88 6.59 337.74 438.05 A
7 X
90 450 21.88 6.34 337.74 440.73 G
0 X
90 450 21.88 6.34 337.74 440.73 A
7 X
90 450 21.88 6.59 337.74 443.41 G
0 X
90 450 21.88 6.59 337.74 443.41 A
7 X
90 450 21.88 6.59 337.74 446.34 G
0 X
90 450 21.88 6.59 337.74 446.34 A
7 X
90 450 21.88 6.59 337.74 449.75 G
0 X
90 450 21.88 6.59 337.74 449.75 A
7 X
90 450 21.88 6.59 417.97 438.05 G
0 X
90 450 21.88 6.59 417.97 438.05 A
7 X
90 450 21.88 6.34 417.97 440.73 G
0 X
90 450 21.88 6.34 417.97 440.73 A
7 X
90 450 21.88 6.59 417.97 443.41 G
0 X
90 450 21.88 6.59 417.97 443.41 A
7 X
90 450 21.88 6.59 417.97 446.34 G
0 X
90 450 21.88 6.59 417.97 446.34 A
7 X
90 450 21.88 6.59 417.97 449.75 G
0 X
90 450 21.88 6.59 417.97 449.75 A
406.95 592.07 426.92 593.21 410.59 581.67 408.77 586.87 4 Y
V
408.78 586.87 363.11 570.91 2 L
7 X
V
4 H
2 Z
0 X
N
227.64 681.91 247.8 676.06 227.6 670.34 227.62 676.13 4 Y
V
115.19 676.47 227.62 676.12 2 L
7 X
V
3 H
0 X
N
180.68 618.02 161.16 613.64 175.39 627.7 178.04 622.86 4 Y
V
280.2 678.67 178.04 622.86 2 L
7 X
V
4 H
0 X
N
447.87 654.92 454.08 673.93 458.89 654.52 453.38 654.72 4 Y
V
451.8 611.3 453.38 654.72 2 L
7 X
V
0 X
N
99.09 425.99 494.11 631.8 18 RR
2 H
0 Z
3 X
N
7 X
90 450 33.67 21.32 281.48 680.22 G
0.5 H
0 X
90 450 33.67 21.32 281.48 680.22 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10 Q
(Name) 266.95 682.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Server) 265.84 670.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 X
90 450 29.17 17.56 453.86 600.03 G
2 H
0 X
90 450 29.17 17.56 453.86 600.03 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(send) 443.38 605.47 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tiles) 444.37 591.47 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
196.33 534.49 391.63 574 18 RR
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cache) 279.89 561.2 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(read) 127.16 610.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tile list) 120.98 596.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(ISS disk server) 251.41 620.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(disk) 173.85 496.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reader) 168.87 482.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(disk) 246.98 496.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reader) 242 482.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(disk) 327.84 496.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reader) 322.86 482.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(disk) 407.51 496.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reader) 402.53 482.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
409.08 681.71 492.92 691.93 R
7 X
V
0 X
(network) 431.34 683.93 T
191.87 534.49 396.09 593.87 18 RR
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cache manager) 257.44 582.2 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tile \050image\051) 145.51 683.99 T
(requests) 153.67 661.99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
88.25 397.4 521.75 719.6 C
94.08 420.1 508.15 709.93 R
1 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(Figur) 189.27 408.5 T
(e 3) 217.73 408.5 T
(ISS Server Ar) 241.05 408.5 T
(chitectur) 312.83 408.5 T
(e) 358.59 408.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
0.6 (to be \336lled with data from the disk are put at the head of an LRU \050Least Recently Used\051) 89 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.07 (list so they may be used for requests in the newly arrived list. The Disk Server process) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(also periodically sends status information to the Master) 89 683.6 T
(.) 353.98 683.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 ( ISS buf) 89 661.6 P
-0.25 (fer management is very similar to that of the UNIX operating system, and many of) 127.61 661.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (the ideas for lists, hashing, and the format of the headers have been adopted from UNIX) 89 647.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (for use within the ISS [7]. A buf) 89 633.42 P
-0.08 (fer can be freed from the hash table in one of two ways. If) 243.51 633.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.39 (a buf) 89 619.42 P
0.39 (fer was allocated to a list \050read/send\051 and that list was \337ushed, the buf) 113.5 619.42 P
0.39 (fer is returned) 452.92 619.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.08 (to the head of the LRU list so that it is the next buf) 89 605.42 P
1.08 (fer to be reused. A buf) 346.41 605.42 P
1.08 (fer may also) 459.54 605.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.98 (naturally progress through the LRU list until it has reached the end of the list, at which) 89 591.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(time it is recycled.) 89 577.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Disk Server handles three request priority levels:) 89 555.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 535.42 T
( high: send \336rst, with an implicit priority given by order within the list.) 113.6 535.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 515.42 T
( medium: send if there is time.) 113.6 515.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 495.42 T
( low: fetch into the cache if there is time, but don\325) 113.6 495.42 T
(t send.) 353.35 495.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.62 (The priority of a particular request is set by the requesting application. The application\325) 89 473.42 P
0.62 (s) 516.33 473.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.05 (prediction algorithm should use these priority levels to keep the ISS fully utilized at all) 89 459.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.62 (times without requesting more data than the application can process. For example, the) 89 445.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.19 (application should send low priority requests to pull data into the ISS cache that the) 89 431.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.17 (application will need in the near future; this data is not sent to the application until the) 89 417.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.37 (application is ready) 89 403.42 P
1.37 (. Another example is an application that plays back a movie with a) 184.94 403.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.17 (sound track, where audio might be high priority requests, and video medium priority) 89 389.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(requests.) 89 375.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.4  ISS Reader) 89 349.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.54 (The ISS Reader process reads data of) 89 327.42 P
1.54 (f of disk and puts it into the buf) 277.3 327.42 P
1.54 (fer cache that is) 440.74 327.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.29 (managed by the Disk Server process. There is one Reader per physical disk. This process) 89 313.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (continually checks for requests in the \322to read\323 list, starts a read operation on that disk if a) 89 299.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.24 (request is pending, then waits for the data to be read. Once the data is read of) 89 285.42 P
0.24 (f of disk the) 462.61 285.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (request is moved into the list of data that is to be written out. There are two distinct lists of) 89 271.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.4 (data that are to be written out, one for each of the high and medium priority levels) 89 257.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(described above.) 89 243.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.5   ISS Sender) 89 217.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.79 (The ISS Sender process sends all data in the \322to send\323 list out to the application that) 89 195.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.01 (requested it. There is one sender per network interface. This process continually checks) 89 181.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.67 (the list of data that is ready to be written out, looking for data that is of high or medium) 89 167.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (priority \050as described above\051. Note that data of medium priority will only be sent if there is) 89 153.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.18 (no data of high priority in the cache. However) 89 139.42 P
-0.18 (, it is possible for medium priority data to be) 308.66 139.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (written out before higher priority data, as in the case where the medium priority data is in) 89 125.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the memory cache, and higher priority data is resident on disk.) 89 111.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.0  Curr) 89 710.27 T
(ent ISS Status) 143.57 710.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0.09 (All ISS software is currently tested and running on Sun workstations \050SP) 89 685.6 P
0.09 (ARCstations and) 439.23 685.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (SP) 89 671.6 P
-0.02 (ARCserver 1000\325) 101.24 671.6 P
-0.02 (s\051 running SunOS 4.1.3 and Solaris 2.3, DEC Alpha\325) 185.54 671.6 P
-0.02 (s running OSF/1,) 438.7 671.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.57 (and SGI\325) 89 657.6 P
3.57 (s running IRIX 5.x. Demonstrations of the ISS with the MAGIC T) 135.57 657.6 P
3.57 (errain) 493.02 657.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.82 (V) 89 643.6 P
0.82 (isualization application T) 96.94 643.6 P
0.82 (erraV) 219.73 643.6 P
0.82 (ision have been done using several W) 246.32 643.6 P
0.82 (AN con\336gurations) 431.19 643.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.75 (in the MAGIC testbed [1) 89 629.42 P
0.75 (1]. Using enough disks \0504-8, depending on the disk and system) 211.54 629.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (type\051, the ISS software has no dif) 89 615.42 P
0.38 (\336culty saturating current A) 251.37 615.42 P
0.38 (TM interface cards. W) 380.83 615.42 P
0.38 (e have) 489.64 615.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (worked with 100 Mbit and 140Mbit T) 89 601.42 P
0.19 (AXI S-Bus and VME cards from Fore systems, and) 271.85 601.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.59 (OC-3 cards from DEC, and in all cases ISS throughput is only slightly less than) 89 584.22 P
2 F
1.59 (ttcp) 498.2 584.22 P
3 9.6 Q
1.27 (4) 516.2 589.02 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(speeds.) 89 570.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.78 (T) 89 548.03 P
0.78 (able) 95.49 548.03 P
0.78 (1 below shows various system) 118.48 548.03 P
2 F
0.78 (ttcp) 271.36 548.03 P
3 F
0.78 ( speeds and ISS speeds. The \336rst column is the) 289.36 548.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (maximum) 89 421.03 P
2 F
0.04 (ttcp) 140.71 421.03 P
3 F
0.04 ( speeds using TCP over a A) 158.71 421.03 P
0.04 (TM LAN with a lar) 290.91 421.03 P
0.04 (ge TCP window size. In this) 384.82 421.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.89 (case,) 89 407.03 P
2 F
1.89 (ttcp) 117.54 407.03 P
3 F
1.89 ( just copies data from memory to the network. For the values in the second) 135.54 407.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (column, we ran a program that continuously reads from all ISS disks simultaneously with) 89 393.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
1.6 (ttcp) 89 379.03 P
3 F
1.6 ( operation. This gives us a much more realistic value for what network speeds the) 107 379.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.11 (system is capable or while the ISS is running. The last column is the actual throughput) 89 365.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.13 (values measured from the ISS. These speeds indicate that the ISS software adds a) 89 351.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(relatively small overhead in terms of maximum throughput.) 89 337.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(7.0  Operation System Issues) 89 302.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.1  Thr) 89 275.03 T
(eads) 129.79 275.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.04 (Currently) 89 253.03 P
1.04 (, the ISS Disk Server is implemented as a group of loosely-coordinated UNIX) 134.22 253.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (processes. W) 89 239.03 P
0.22 (e believe performance can be enhanced by transforming these processes into) 151.57 239.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.03 (threads. Most of the gains arise from bypassing the overhead of the interprocess) 89 225.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.88 (communication mechanisms needed to guarantee consistency of resources shared by the) 89 211.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.89 (processes, e.g., the semaphores needed to ensure non-simultaneous access to the to-read) 89 197.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (and to-send lists. The same functionality can be achieved using thread-based mechanisms) 89 183.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that are designed to be much faster) 89 169.03 T
(, e.g., mutual exclusion locks.) 255.81 169.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.83 (The ISS Disk Server requires separate processes to receive from the network, read from) 89 147.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (disk, and send to the network. These processes must share certain resources, namely) 89 133.03 P
0.61 (, the) 499.73 133.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.29 (to-read lists, the to-send list, and the data cache. T) 89 119.03 P
1.29 (o ensure fair access to each of these) 340.38 119.03 P
0 0 0 1 0 0 0 K
89 87.4 521 107.4 C
0 0 0 1 0 0 0 K
89 95.4 221 95.4 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
3 10 Q
0 X
0 0 0 1 0 0 0 K
(4.) 89 80.73 T
2 F
(ttcp) 101.5 80.73 T
3 F
( times the transmission and reception of data between two systems using the UDP or TCP protocols.) 116.5 80.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(T) 102.75 524.03 T
(ABLE 1.) 109.86 524.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(System) 131.32 502.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Max A) 211.78 502.37 T
(TM LAN) 240.2 502.37 T
1 F
(ttcp) 282.42 502.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ttcp) 320.62 502.37 T
0 F
( w/ disk r) 335.62 502.37 T
(ead) 375.17 502.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Max ISS speed) 424.53 502.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(Sun SS10-51) 95 486.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(70 Mbits/sec) 210.2 486.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(60 Mbits/sec) 311 486.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(55 Mbits/sec) 411.8 486.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Sun SS1000 \0502 proc\051) 95 470.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(75 Mbits/sec) 210.2 470.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(65 Mbits/sec) 311 470.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(60 Mbits/sec) 411.8 470.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SGI Challenge L) 95 454.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(82 Mbits/sec) 210.2 454.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(72 Mbits/sec) 311 454.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(65 Mbits/sec) 411.8 454.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dec Alpha) 95 438.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(127 Mbits/sec) 210.2 438.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(95 Mbits/sec) 311 438.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(88 Mbits/sec) 411.8 438.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
89 516.78 89 433.28 2 L
V
0.5 H
0 Z
N
204.2 517.28 204.2 432.78 2 L
V
N
305 517.28 305 432.78 2 L
V
N
405.8 517.28 405.8 432.78 2 L
V
N
506.6 516.78 506.6 433.28 2 L
V
N
88.75 517.03 506.85 517.03 2 L
V
N
89.25 498.28 506.35 498.28 2 L
V
N
89.25 495.78 506.35 495.78 2 L
V
N
88.75 481.03 506.85 481.03 2 L
V
N
88.75 465.03 506.85 465.03 2 L
V
N
88.75 449.03 506.85 449.03 2 L
V
N
88.75 433.03 506.85 433.03 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
2.05 (resources, we force some processes to sleep for a short time: by this mechanism, we) 89 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (guarantee that the operating system will perform a context switch. When any Disk Server) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.41 (process accesses a list or the cache, it \336rst obtains a semaphore to guarantee exclusive) 89 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (access for the duration of the time it needs to perform its task. If other processes attempt to) 89 669.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(access the data, they are rejected and must, after a sleep-induced wait, try again.) 89 655.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.38 (Instead of the expensive semaphore mechanism, multiple threads guarantee exclusive) 89 633.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.88 (access by using mutual-exclusion locks. The overhead of mutex locks is much less than) 89 619.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.39 (that of semaphores, and checking mutex locks is much faster) 89 605.6 P
2.39 (. Threads which cannot) 401.84 605.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.24 (obtain a needed resource enter into a state of conditional waiting: this state eliminates the) 89 591.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.46 (cycle of checking for the available resources, sleeping, and checking again, which) 89 577.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.56 (characterizes processes attempting to gain a shared resource. Threads in conditional wait) 89 563.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.48 (are simply put to sleep and signaled when the resource is available. Interthread) 89 549.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.34 (communication is much faster than interprocess communication and threads consume) 89 535.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fewer resources, since threads share the same text space with one another) 89 521.6 T
(.) 440.23 521.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(7.2  Real-T) 89 495.6 T
(ime Scheduling) 145.11 495.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0 (An application like the Image Server System could bene\336t from real time scheduling. The) 89 473.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.84 (ISS currently must attempt to coerce the UNIX scheduler to context-switch between the) 89 459.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 (various competing ISS processes: trying to promote such context switching wastes time) 89 445.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.17 (and reduces ef) 89 431.6 P
1.17 (\336ciency) 160.43 431.6 P
1.17 (.  A real-time operating system allows \336ne-grained control of the) 197.64 431.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.04 (scheduler by means of thread prioritization and conditional waiting. Ef) 89 417.6 P
1.04 (fectively) 438.1 417.6 P
1.04 (, threads) 479.3 417.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (can take more or less processor time as necessary instead of arbitrarily taking a \336xed slice) 89 403.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (of CPU time, and reducing competition with kernel-level or other user) 89 389.6 P
0.19 (-level threads. This) 428.3 389.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.63 (ability to vary the amount of time used by each thread is especially useful given that the) 89 375.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (ISS is driven by external events \050the requests for the images\051 and must deliver the images) 89 361.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(back to the driving application within a predetermined time.) 89 347.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(8.0  Experience) 89 312.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.1  A) 89 285.6 T
(TM Networking Issues) 117.78 285.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0 (The design of the ISS is based upon the ability to use A) 89 263.6 P
0 (TM network switches to aggregate) 354.36 263.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.45 (cells from multiple physical data streams into a single high-bandwidth stream to the) 89 249.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.82 (application. Figure 1) 89 235.42 P
0.82 (\050Data Streams Aggregated by A) 197.12 235.42 P
0.82 (TM Switches\051 shows multiple ISS) 353.04 235.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(servers being used to form a single high-speed data stream to the application.) 89 221.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (Below is a list of what we have learned from our experience using A) 89 199.42 P
0.54 (TM networks. Most) 424.26 199.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of the experience re\337ected here comes from our work in the MAGIC gigabit testbed.) 89 185.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(I\051) 99.01 165.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Hardware and Physical Layer:) 116 165.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(-) 132.2 146.08 T
3 12 Q
(delivery of most ATM hardware has been delayed;) 143.86 146.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
-0.64 (-) 132.2 126.08 P
3 12 Q
-0.55 (the \322infant mortality\323 rate has been high \050several ATM interfaces and the ATM) 143.86 126.08 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(switch died in the first 60 days\051;) 146.6 111.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
-0.53 (-) 132.2 710.27 P
3 12 Q
-0.46 (it now seems clear that the workstation vendors have adopted multimode OC-3) 143.86 710.27 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(as their preferred physical layer \050we bought several 140 Mb/s TAXI, which) 146.6 695.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(were available six months ago\051;) 146.6 681.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
-0.65 (-) 132.2 662.27 P
3 12 Q
-0.56 (several of the multimode interfaces will drive single mode equipment \050e.g., SO-) 143.86 662.27 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(NET terminals\051 by carrying the multimode fiber to the single mode interface) 146.6 647.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050all examples of this have had active elements immediately behind the single) 146.6 633.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mode interface\051;) 146.6 619.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(II\051) 95.01 599.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( Link Layer:) 116 599.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(-) 132.2 580.27 T
3 12 Q
( not all of the ATM cell definitions \050especially with respect to the Quality of) 143.86 580.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (Service \050QOS\051 field\051 are uniform among manufacturers \050QOS = 0 seems to be) 146.6 565.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the point of agreement\051;) 146.6 551.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(-) 132.2 532.27 T
3 12 Q
(there are many places where cell loss is apparent: these include switch output) 143.86 532.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ports \050next generation switches have much more buffering\051, and workstation) 146.6 517.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.7 (interfaces, which are easily overrun for reasons not yet clear \050it could be failure) 146.6 503.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of kernel code to empty buffers fast enough\051;) 146.6 489.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(-) 132.2 470.27 T
3 12 Q
(ATM device drivers are still fairly crude and buggy. This is especially true on) 143.86 470.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(multiprocessor systems, where the device drivers don\325t yet fully take advan-) 146.6 455.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tage of the multi-threading capabilities of the operating system;) 146.6 441.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(III\051) 91.02 421.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( Network:) 116 421.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
-0.68 (-) 132.2 402.27 P
3 12 Q
-0.58 (Except for homogeneous switch environments, switched virtual circuits are not) 143.86 402.27 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(yet standardized, and in a large scale environment, use of PVCs makes set up) 146.6 387.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and reconfiguration tedious and prone to errors;) 146.6 373.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IV\051) 90.34 353.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 116 353.6 T
(ransport:) 122.91 353.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(-) 132.2 334.27 T
3 12 Q
(There are many throughput anomalies that are being investigated;) 143.86 334.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
-0.07 (-) 132.2 314.27 P
3 12 Q
-0.06 (Our work with timer-driven RTP shows some promise of it being a little more) 143.86 314.27 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(immune to cell loss than TCP.) 146.6 299.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.59 (One of the things that is becoming apparent in our work with this architecture is that the) 89 277.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.06 (conventional notion of QOS is not a good method for regulating tightly coupled) 89 263.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (applications like the ISS, and \050for similar reasons\051 may not be good for distributed-parallel) 89 249.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.38 (compute server systems. Problems frequently occur when several servers that normally) 89 235.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.1 (operate asynchronously to provide data to a single source, suddenly synchronize to) 89 221.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.83 (produce a burst of data that overloads the switch and interface on the single receiver) 89 207.6 P
1.83 (,) 518 207.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.82 (thereby causing everybody to slow down and retransmit, leading to severe throughput) 89 193.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.67 (degradation. This is very similar to the problem of routing message synchronization) 89 179.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(described by Floyd and Jacobson[2].) 89 165.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(8.2  Memory Copy Speed) 89 139.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
0.61 (The main bottleneck for the ISS Disk Server is the speed of moving data into and out of) 89 117.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.88 (memory) 89 103.42 P
2.88 (.   A SP) 128.22 103.42 P
2.88 (ARCStation 10, for example, has memory copy speed of about 22) 175.62 103.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.08 (Mbytes/s \050176 Mbits/s\051. When writing to the network, the situation is even worse because) 89 89.42 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
1.59 (data is moved to the interface via UNIX \322mbufs\323 [7], adding additional overhead. W) 89 711.6 P
1.59 (e) 515.67 711.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.1 (have measured the speed of an mbuf copy as 19 Mbytes/s \050152 Mbits/s\051, and there are two) 89 697.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.79 (mbuf copies required to send a packet to the network. Along with the other overhead) 89 683.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (required to assemble packets, this limits the speed with which we can write to the network) 89 669.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to 9.2 Mbytes/s \05074 Mbits/s\051.) 89 655.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (If the network sends were faster) 89 633.6 P
-0.3 (, e.g., 19.4 Mbytes/s \050155 Mbits/s - the OC-3 rate, ignoring) 240.65 633.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.54 (A) 89 619.6 P
2.54 (TM overhead\051, the next bottleneck would be the disk reading speed, which in this) 96.33 619.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.92 (con\336guration is 9 Mbytes/s \05072 Mbits/s\051. This bottleneck is trivially removed by adding) 89 605.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.89 (more disks. This brings us back to the \322memcpy\323 limit of 22 Mbytes/s as the key) 89 591.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.28 (bottleneck. The other bottlenecks are not likely to be relevant in the near future. Increasing) 89 577.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (the speed of workstation memory is the key to increased performance for this application.) 89 563.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(9.0  Conclusions) 89 528.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
1.39 (The emer) 89 505.6 P
1.39 (gence of wide area high-speed networks enables many types of new systems,) 135.82 505.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.79 (include distributed parallel data servers. W) 89 491.6 P
1.79 (e have designed and implemented a special) 302.96 491.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.17 (purpose high-speed data server) 89 477.6 P
2.17 (, called the ISS. The ISS is designed to be distributed) 243.98 477.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (across multiple hosts with multiple disks on each host, and should be capable of scaling to) 89 463.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.66 (gigabit per second rates. Moreover) 89 449.6 P
0.66 (, we believe that the core design is \337exible enough so) 258.11 449.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.88 (that only minor modi\336cations need be made to adapt the ISS to dif) 89 435.6 P
0.88 (ferent data types and) 418.71 435.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(access patterns.) 89 421.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 ( In the process of implementing and using this system, we have learned many things about) 89 399.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (workstation and operating system bottlenecks, and using A) 89 385.6 P
0.09 (TM networks. The main things) 371.63 385.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(we discovered are:) 89 371.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 103.4 351.6 T
( memory to memory copy speed is the main I/O bottleneck on today\325) 113.6 351.6 T
(s workstations;) 444.24 351.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (\245) 103.4 331.6 P
-0.03 ( A) 113.6 331.6 P
-0.03 (TM networks still have many problems to be worked out before they are ready for) 123.9 331.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(general use.) 117.8 317.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(10.0  Refer) 89 276.77 T
(ences) 153.67 276.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
([1]) 96.61 252.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chen, L. T) 122 252.1 T
(. and Rotem, D., \322Declustering Objects for V) 173.11 252.1 T
(isualization\323, Proc. of the) 389.35 252.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19th VLDB \050V) 132.2 238.1 T
(ery Lar) 203.53 238.1 T
(ge Database\051 Conference, 1993.) 238.29 238.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([2]) 96.61 218.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Floyd, S. and Jacobson, V) 122 218.1 T
(., \322The Synchronization of Periodic Routing Messages\323,) 246.12 218.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Proceedings of SIGCOMM \32493, 1993.) 132.2 204.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([3]) 96.61 184.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ghandeharizadeh, S. and Ramos, L, \322Continuous Retrieval of Multimedia Data) 122 184.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Using Parallelism, IEEE T) 132.2 170.1 T
(ransactions on Knowledge and Data Engineering, V) 259.77 170.1 T
(ol) 507.84 170.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5, No 4, August 1993.) 132.2 156.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([4]) 96.61 136.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Hartman, J. H. and Ousterhout, J. K., \322Zebra: A Striped Network File System\323,) 122 136.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Proceedings of the USENIX W) 132.2 122.1 T
(orkshop on File Systems, May 1992.) 281.88 122.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([5]) 96.61 102.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.54 (Leclerc, Y) 122 102.1 P
-0.54 (.G. and Lau, S.Q., Jr) 170.55 102.1 P
-0.54 (.,\322T) 266.39 102.1 P
-0.54 (erraV) 284.21 102.1 P
-0.54 (ision: A T) 310.8 102.1 P
-0.54 (errain V) 357.56 102.1 P
-0.54 (isualization System\323, SRI) 395.95 102.1 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(International, T) 132.2 88.1 T
(echnical Note #540, Menlo Park, CA, 1994.) 206.01 88.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 0 0 0 0 1 1]
[ 0 1 1 0 1 0 0]
[ 1 1 0 0 0 0 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
1 0 1 0 0 1 0 K
19.5 9.17 592 784.17 R
0.5 H
0 Z
0 X
1 0 1 0 0 1 0 K
N
0 0 0 1 0 0 0 K
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-1.59 1.51 612.71 792 R
7 X
0 0 0 1 0 0 0 K
V
0 1.51 612 792 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
([6]) 96.61 711.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Langber) 122 711.6 T
(g, M., \322Silicon Graphics Lands Cable Deal with T) 161.77 711.6 T
(ime W) 402.32 711.6 T
(arner Inc.\323, San) 433.69 711.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Jose Mercury News, June 8, 1993.) 132.2 697.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([7]) 96.61 677.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.43 (Lef) 122 677.6 P
-0.43 (\337er) 138.44 677.6 P
-0.43 (, S.J., McKusick, M.K., Karels, M. J. and Quarterman, J.S., \322The Design and) 153.96 677.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implementation of the 4.3BSD UNIX Operating System\323, Addison-W) 132.2 663.6 T
(esley) 468.87 663.6 T
(,) 492.75 663.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Reading, Mass., 1989.) 132.2 649.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([8]) 96.61 629.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Mills, D., \322Network T) 122 629.6 T
(ime Protocol \050V) 228.24 629.6 T
(ersion 3\051 speci\336cation, implementation and) 304.23 629.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(analysis\323, RFC 1305, University of Delaware, March 1992.) 132.2 615.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([9]) 96.61 595.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (Mills, D., \322Simple Network T) 122 595.6 P
-0.11 (ime Protocol \050SNTP\051\323, RFC 1361, University of Del-) 264.8 595.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(aware, August 1992.) 132.2 581.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([10]) 90.61 561.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (Patterson, D., Gibson, G., and Katz, R., \322A Case for Redundant Arrays of Inexpen-) 122 561.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sive Disks \050RAID\051,\323 in Proc. 1988 SIGMOD Conf., June 1988.) 132.2 547.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([1) 91.05 527.6 T
(1]) 100.6 527.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (Richer) 122 527.6 P
-0.17 (, I. and Fuller) 153.51 527.6 P
-0.17 (, B.B., \322An Overview of the MAGIC Project,\323 M93B0000173,) 217.53 527.6 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The MITRE Corp., Bedford, MA, 1 Dec. 1993.) 132.2 513.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([12]) 90.61 493.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Rowe, L. and Smith, B.C., \322A Continuous Media Player\323, Proc. 3rd International) 122 493.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 132.2 479.6 T
(orkshop on Network and Operating System Support for Digital Audio and) 142.57 479.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 132.2 465.6 T
(ideo, San Diego, CA, Nov) 140.14 465.6 T
(. 1992.) 265.69 465.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([13]) 90.61 445.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( Schulzrinne, H. and Casner) 122 445.6 T
(, S., \322R) 256.16 445.6 T
(TP: A Real-T) 290.44 445.6 T
(ime T) 355.35 445.6 T
(ransport Protocol\323, Internet) 383.26 445.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Draft, Audio/V) 132.2 431.6 T
(ideo T) 204.8 431.6 T
(ransport W) 235.38 431.6 T
(orking Group of the IETF) 288.07 431.6 T
(, 1993.) 411.09 431.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 15
%%DocumentFonts: Times-Bold
%%+ Times-BoldItalic
%%+ Times-Italic
%%+ Times-Roman
%%EOF
