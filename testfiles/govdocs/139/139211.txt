IBM XL Fortran Enterprise Edition V10.1 for AIX (5724-M13)  Version 10.01.0000.0002 --- /gpfs/m/nco/ops/nwprod/sorc/sref_eta_etapost.fd/GENBIL.f 10/02/06 10:01:25
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODBG           ESCAPE          FULLPATH
         I4              INLGLUE         NOLIBESSL       NOLIBPOSIX
         OBJECT          SOURCE          STDFRAMEWORK    STRICT
         SWAPOMP         THREADED        UNWIND          NOZEROSIZE
  
         ==  Options Of Integer Type ==
         FIXED(72)             MAXMEM(-1)            OPTIMIZE(2)
         SPILLSIZE(2000)       STACKTEMP(0)
  
         ==  Options Of Character Type  ==
         64(LARGETYPE)         ALIAS(STD,INTPTR)     ALIGN(BINDC(POWER),STRUCT(NATURAL))
         ARCH(PWR5X)           ATTR(FULL)            AUTODBL(NONE)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(RNDSNGL,MAF,FOLD,RNGCHK)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LANGLVL(EXTENDED)     POSITION(APPENDOLD)   REALSIZE(4)
         SAVE(ALL)             TUNE(PWR5)            UNROLL(AUTO)
         XREF(FULL)            XLF77(NOLEADZERO,GEDIT77,NOBLANKPAD,OLDBOZ,INTARG,INTXOR,PERSISTENT,SOFTEOF)
         XLF90(NOSIGNEDZERO,NOAUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
          1 |      SUBROUTINE GENBIL(EGFUL,IMOT,JMOT)
          2 |C
          3 |C$$$  SUBPROGRAM DOCUMENTATION BLOCK
          4 |C                .      .    .
          5 |C SUBPROGRAM:    GENBIL      COMPUTE BILINEAR INTRP WEIGHTS
          6 |C   PRGRMMR: TREADON         ORG: W/NP2      DATE: 92-12-23
          7 |C
          8 |C ABSTRACT:
          9 |C     THIS ROUTINE IS BASED ON CODE SUBROUTINE INTERP FOUND
         10 |C     IN DAVID PLUMMER'S ETAPACKC.  GIVEN THE E-GRID AND
         11 |C     OUTPUT GRID BILINEAR INTERPOLATION WEIGHTS ARE COMPUTED
         12 |C     AND SAVED COMMON BLOCK LLGRDS ARRAYS.  THE PASSED FILLED
         13 |C     E-GRID ARRAY, EGFUL CAN CONTAIN ANY FIELD.  IT IS USED
         14 |C     TO DETERMINE THE EXTENT KNOW DATA VALUES IN THE E-GRID.
         15 |C     THOSE GRID POINTS ON THE E-GRID WHICH EQUAL OR EXCEED
         16 |C     THE SPECIAL VALUE, SPVC, ARE TREATED DIFFERENTLY IN THE
         17 |C     INTERPOLATION.  FOR MOST APPLICATIONS THIS CHECK IS NOT
         18 |C     NECESSARY.
         19 |C   .
         20 |C
         21 |C PROGRAM HISTORY LOG:
         22 |C   ??-??-??  DAVID PLUMMER - SUBROUTINE INTERP IN ETAPACKC
         23 |C   92-12-23  RUSS TREADON - EXTRACTED CODE FROM INTERP AND
         24 |C                               GENERALIZED TO HANDLE VARIOUS
         25 |C                               INPUT AND OUTPUT GRIDS
         26 |C
         27 |C USAGE:    CALL GENBIL(EGFUL,IMOT,JMOT)
         28 |C   INPUT ARGUMENT LIST:
         29 |C     EGFUL    - FILLED E-GRID DEFINING EXTENT OF E-GRID.
         30 |C     IMOT     - FIRST DIMENSION OF OUTPUT GRID.
         31 |C     JMOT     - SECOND DIMENSION OF OUTPUT GRID.
         32 |C   OUTPUT ARGUMENT LIST:
         33 |C
         34 |C   OUTPUT FILES:
         35 |C     STDOUT  - RUN TIME STANDARD OUT.
         36 |C
         37 |C   SUBPROGRAMS CALLED:
         38 |C     UTILITIES:
         39 |C       NONE
         40 |C     LIBRARY:
         41 |C       COMMON   - LLGRDS
         42 |C                  IOUNIT
         43 |C
         44 |C   ATTRIBUTES:
         45 |C     LANGUAGE: FORTRAN
         46 |C     MACHINE : CRAY C-90
         47 |C$$$
         48 |C
         49 |C
         50 |C     INCLUDE DECLARED GRID DIMENSIONS.
         51 |      INCLUDE "parmeta"
  1       1 |C-------------------------------------------------------------
  1       2 |C***  SET PRIMARY GRID DIMENSIONS AND PRESSURE OUTPUT LEVELS
  1       3 |      PARAMETER (IM=237,JM=387,LM=60,LSM=39)
  1       4 |C-------------------------------------------------------------
  1       5 |C***  SET THE NUMBER OF PEs IN THE I-DIRECTION AND J-DIRECTION
  1       6 |      PARAMETER(INPES=02,JNPES=02)
  1       7 |C-------------------------------------------------------------
  1       8 |C
  1       9 |      PARAMETER(IGSTL=-5,IGSTR=5)
  1      10 |      PARAMETER(JGSTL=-5,JGSTR=5)
  1      11 |      PARAMETER(ITAIL=IM-(INPES*(IM/INPES)))
  1      12 |      PARAMETER(JTAIL=JM-(JNPES*(JM/JNPES)))
  1      13 |C
  1      14 |      PARAMETER(IDIM1=IGSTL,IDIM2=IM/INPES+IGSTR+1)
  1      15 |      PARAMETER(JDIM1=JGSTL,JDIM2=JM/JNPES+JGSTR+1)
  1      16 |C
  1      17 |C-------------------------------------------------------------
         52 |      INCLUDE "parmout"
  2       1 |C     MAXIMUM DIMENSIONS FOR OUTPUT GRID, FIELDS, AND LEVELS.
  2       2 |C
  2       3 |      PARAMETER(IMX=IM,JMX=JM,MXFLD=250,MXLVL=LM)
         53 |      PARAMETER (IMJM=IM*JM-JM/2,IMT=2*IM-1,JMT=JM)
         54 |C
         55 |C     DECLARE VARIABLES.
         56 |      LOGICAL LM0N0,LM1N0,LM0N1,LM1N1
         57 |      INTEGER IMOT,JMOT
         58 |      REAL EGFUL(IMT,JMT)
         59 |C
         60 |C     INCLUDE COMMON.
         61 |      INCLUDE "LLGRDS.comm"
  3       1 |C
  3       2 |      COMMON /LLGRDS/
  3       3 |     & GDLAT(IMX,JMX),GDLON(IMX,JMX)
  3       4 |     &,GDTLAT(IMX,JMX),GDTLON(IMX,JMX)
  3       5 |     &,HTLAT(IM,JM),HTLON(IM,JM)
  3       6 |     &,IEGRDK(IM,JM),JEGRDK(IM,JM)
  3       7 |     &,VTLAT(IM,JM),VTLON(IM,JM),FVTLON(IMT,JMT)
  3       8 |     &,EVLAT(IMT,JMT),EVLON(IMT,JMT)
  3       9 |     &,EGRDI(IMX,JMX),EGRDJ(IMX,JMX)
  3      10 |     &,IEGRD(IMX,JMX),JEGRD(IMX,JMX)
  3      11 |     &,IWGT(IMX,JMX),WIJ(IMX,JMX),WIPJ(IMX,JMX)
  3      12 |     &,WIJP(IMX,JMX),WIPJP(IMX,JMX)
         62 |      INCLUDE "IOUNIT.comm"
  4       1 |C
  4       2 |      INTEGER STDOUT
  4       3 |C
  4       4 |      COMMON /IOUNIT/
  4       5 |     & STDOUT, LCNTRL, LUNCO, LUNLL, LUNOUT
  4       6 |C
         63 |C
         64 |C     SET TOLERANCE LIMITS.
         65 |C
         66 |      DATA SPVC,SMALL /1.E20,1.E-4/
         67 |C
         68 |C******************************************************************
         69 |C     START GENBIL HERE.
         70 |C
         71 |C     COMPUTE INTERPOLATION WEIGHTS.
         72 |C
         73 |      WRITE(STDOUT,*)'GENBIL:  GENERATE BILIN WEIGHTS'
         74 |      MAXI = IMT
         75 |      MAXJ = JMT
         76 |      DO 90 J = 1,JMOT
         77 |         DO 90 I = 1,IMOT
         78 |            XX = EGRDI(I,J)
         79 |            YY = EGRDJ(I,J)
         80 |            M = XX
         81 |            N = YY
         82 |            IEGRD(I,J) = M
         83 |            JEGRD(I,J) = N
         84 |C
         85 |            IF ( ( M.LE.0   ).OR.( N.LE.0   ) ) THEN
         86 |               WIJ(I,J)   = 0.
         87 |               WIPJ(I,J)  = 0.
         88 |               WIJP(I,J)  = 0.
         89 |               WIPJP(I,J) = 0.
         90 |               IWGT(I,J)  = 0
         91 |               GOTO 75
         92 |            ENDIF
         93 |C
         94 |            IF ( (XX.GT.MAXI).OR.(YY.GT.MAXJ) ) THEN
         95 |               WIJ(I,J)   = 0.
         96 |               WIPJ(I,J)  = 0.
         97 |               WIJP(I,J)  = 0.
         98 |               WIPJP(I,J) = 0.
         99 |               IWGT(I,J)  = 0
        100 |               GOTO 75
        101 |            ENDIF
        102 |C
        103 |            DX  = (XX - M)
        104 |            DY  = (YY - N)
        105 |            DX1 = 1.0 - DX
        106 |            DY1 = 1.0 - DY
        107 |            IF ( (ABS(DX ).LT.SMALL).AND.(ABS(DY ).LT.SMALL) ) THEN
        108 |               W00 = 1.
        109 |               W10 = 0.
        110 |               W01 = 0.
        111 |               W11 = 0.
        112 |               WIJ(I,J)   = W00
        113 |               WIPJ(I,J)  = W10
        114 |               WIJP(I,J)  = W01
        115 |               WIPJP(I,J) = W11
        116 |               IWGT(I,J)  = 1
        117 |               GOTO 75
        118 |CX               DAT = EGFUL(M,N)
        119 |            ELSEIF ( (ABS(DX ).LT.SMALL).AND.
        120 |     X              (ABS(DY1).LT.SMALL) ) THEN
        121 |               W00 = 0.
        122 |               W10 = 0.
        123 |               W01 = 1.
        124 |               W11 = 0.
        125 |               WIJ(I,J)   = W00
        126 |               WIPJ(I,J)  = W10
        127 |               WIJP(I,J)  = W01
        128 |               WIPJP(I,J) = W11
        129 |               IWGT(I,J)  = 1
        130 |               GOTO 75
        131 |CX               DAT = EGFUL(M,N+1)
        132 |            ELSEIF ( (ABS(DX1).LT.SMALL).AND.
        133 |     X              (ABS(DY ).LT.SMALL) )  THEN
        134 |               W00 = 0.
        135 |               W10 = 1.
        136 |               W01 = 0.
        137 |               W11 = 0.
        138 |               WIJ(I,J)   = W00
        139 |               WIPJ(I,J)  = W10
        140 |               WIJP(I,J)  = W01
        141 |               WIPJP(I,J) = W11
        142 |               IWGT(I,J)  = 1
        143 |               GOTO 75
        144 |CX               DAT = EGFUL(M+1,N)
        145 |            ELSEIF ( (ABS(DX1).LT.SMALL).AND.
        146 |     X              (ABS(DY1).LT.SMALL) )  THEN
        147 |               W00 = 0.
        148 |               W10 = 0.
        149 |               W01 = 0.
        150 |               W11 = 1.
        151 |               WIJ(I,J)   = W00
        152 |               WIPJ(I,J)  = W10
        153 |               WIJP(I,J)  = W01
        154 |               WIPJP(I,J) = W11
        155 |               IWGT(I,J)  = 1
        156 |               GOTO 75
        157 |CX               DAT = EGFUL(M+1,N+1)
        158 |            END IF
        159 |C
        160 |C	    DONE WITH SPECIAL CASES.  NOW FOR GENERAL CASES.
        161 |C
        162 |            LM0N0 = (EGFUL(M  ,N  ).GE.SPVC)
        163 |            LM1N0 = (EGFUL(M+1,N  ).GE.SPVC)
        164 |            LM0N1 = (EGFUL(M  ,N+1).GE.SPVC)
        165 |            LM1N1 = (EGFUL(M+1,N+1).GE.SPVC)
        166 |            IF ( (.NOT.LM0N0).AND.(.NOT.LM1N0).AND.
        167 |     X           (.NOT.LM0N1).AND.(.NOT.LM1N1) ) THEN
        168 |               W00 = (1.-DY)*(1.-DX)
        169 |               W10 = (1.-DY)*DX
        170 |               W01 = DY*(1.-DX)
        171 |               W11 = DY*DX
        172 |               WIJ(I,J)   = W00
        173 |               WIPJ(I,J)  = W10
        174 |               WIJP(I,J)  = W01
        175 |               WIPJP(I,J) = W11
        176 |               IWGT(I,J)  = 1
        177 |CX               DAT = (1.0-DY)*((1.0-DX)*EGFUL(M,N) +
        178 |CX                     DX*EGFUL(M+1,N)) +
        179 |CX                     DY*((1.0-DX)*EGFUL(M,N+1) +
        180 |CX                     DX*EGFUL(M+1,N+1))
        181 |               GOTO 75
        182 |            ELSEIF (LM0N0.AND.LM1N0.AND.LM0N1.AND.LM1N1) THEN
        183 |               WIJ(I,J)   = 0.
        184 |               WIPJ(I,J)  = 0.
        185 |               WIJP(I,J)  = 0.
        186 |               WIPJP(I,J) = 0.
        187 |               IWGT(I,J)  = 0
        188 |               GOTO 75
        189 |CX               DAT = SPVAL
        190 |            ELSE
        191 |               IM0N0 = 1
        192 |               IF (LM0N0)  IM0N0 = 0
        193 |               IM1N0 = 1
        194 |               IF (LM1N0)  IM1N0 = 0
        195 |               IM0N1 = 1
        196 |               IF (LM0N1)  IM0N1 = 0
        197 |               IM1N1 = 1
        198 |               IF (LM1N1)  IM1N1 = 0
        199 |               RXX = ((SQRT(2.0)/4.0)*(IM0N0+IM1N0+IM0N1+IM1N1))**2
        200 |               R00 = (     DX *     DX)  + (     DY *     DY)
        201 |               R10 = ((1.0-DX)*(1.0-DX)) + (     DY *     DY)
        202 |               R01 = (     DX *     DX)  + ((1.0-DY)*(1.0-DY))
        203 |               R11 = ((1.0-DX)*(1.0-DX)) + ((1.0-DY)*(1.0-DY))
        204 |               W00 = IM0N0 * MAX(0.0,(RXX - R00)) / (RXX + R00)
        205 |               W10 = IM1N0 * MAX(0.0,(RXX - R10)) / (RXX + R10)
        206 |               W01 = IM0N1 * MAX(0.0,(RXX - R01)) / (RXX + R01)
        207 |               W11 = IM1N1 * MAX(0.0,(RXX - R11)) / (RXX + R11)
        208 |               WSUM = W00 + W01 + W10 + W11
        209 |               IF (WSUM .NE. 0.0)  THEN
        210 |                  WIJ(I,J)   = W00/WSUM
        211 |                  WIPJ(I,J)  = W10/WSUM
        212 |                  WIJP(I,J)  = W01/WSUM
        213 |                  WIPJP(I,J) = W11/WSUM
        214 |                  IWGT(I,J)  = 1
        215 |                  GOTO 75
        216 |CX                DAT = (W00*EGFUL(M,N)+W10*EGFUL(M+1,N) +
        217 |CX                  W01*EGFUL(M,N+1)+W11*EGFUL(M+1,N+1)) / WSUM
        218 |               ELSE
        219 |                  WIJ(I,J)   = 0.
        220 |                  WIPJ(I,J)  = 0.
        221 |                  WIJP(I,J)  = 0.
        222 |                  WIPJP(I,J) = 0.
        223 |                  IWGT(I,J)  = 0
        224 |                  GOTO 75
        225 |CX                  DAT = SPVAL
        226 |               END IF
        227 |            END IF
        228 |            WRITE(STDOUT,*)'GENWGT:  SHOULD NOT REACH THIS LINE'
        229 | 75         CONTINUE
        230 | 90   CONTINUE
        231 |C
        232 |C     END OF ROUTINE.
        233 |C
        234 |      RETURN
        235 |      END
 
>>>>> ATTRIBUTE AND CROSS REFERENCE SECTION <<<<<
 
 
 
IDENTIFIER NAME                  CROSS REFERENCE AND ATTRIBUTES
 
abs                              Pure Intrinsic
                                 0-107.19  0-107.43  0-119.23  0-120.22  0-132.23  0-133.22  0-145.23  0-146.22
 
dx                               Static, Real(4), Offset: 0, Alignment: full word
                                 0-103.13@  0-105.25  0-107.23  0-119.27  0-168.34  0-169.30  0-170.29  0-171.25  0-200.28  0-200.37
                                 0-201.28  0-201.37  0-202.28  0-202.37  0-203.28  0-203.37
 
dx1                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-105.13@  0-132.27  0-145.27
 
dy                               Static, Real(4), Offset: 0, Alignment: full word
                                 0-104.13@  0-106.25  0-107.47  0-133.26  0-168.26  0-169.26  0-170.22  0-171.22  0-200.50  0-200.59
                                 0-201.50  0-201.59  0-202.50  0-202.59  0-203.50  0-203.59
 
dy1                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-106.13@  0-120.26  0-146.26
 
egful                            Reference argument, Real(4) (1:473, 1:387), Offset: 0, Alignment: full word
                                 0-58.12$  0-1.25  0-162.22  0-163.22  0-164.22  0-165.22
 
egrdi                            Common member, Real(4) (1:237, 1:387), Offset: 5865372, Alignment: full word
                                 3-9.8$  0-78.18
 
egrdj                            Common member, Real(4) (1:237, 1:387), Offset: 6232248, Alignment: double word
                                 3-9.23$  0-79.18
 
evlat                            Common member, Real(4) (1:473, 1:387), Offset: 4400964, Alignment: full word
                                 3-8.8$
 
evlon                            Common member, Real(4) (1:473, 1:387), Offset: 5133168, Alignment: quadruple word
                                 3-8.23$
 
fvtlon                           Common member, Real(4) (1:473, 1:387), Offset: 3668760, Alignment: double word
                                 3-7.34$
 
gdlat                            Common member, Real(4) (1:237, 1:387), Offset: 0, Alignment: quadruple word
                                 3-3.8$
 
gdlon                            Common member, Real(4) (1:237, 1:387), Offset: 366876, Alignment: full word
                                 3-3.23$
 
gdtlat                           Common member, Real(4) (1:237, 1:387), Offset: 733752, Alignment: double word
                                 3-4.8$
 
gdtlon                           Common member, Real(4) (1:237, 1:387), Offset: 1100628, Alignment: full word
                                 3-4.24$
 
genbil                           Subroutine
                                 0-1.18$
 
htlat                            Common member, Real(4) (1:237, 1:387), Offset: 1467504, Alignment: quadruple word
                                 3-5.8$
 
htlon                            Common member, Real(4) (1:237, 1:387), Offset: 1834380, Alignment: full word
                                 3-5.21$
 
i                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-77.16@  0-78.24  0-79.24  0-82.19  0-83.19  0-86.20  0-87.21  0-88.21  0-89.22  0-90.21  0-95.20
                                 0-96.21  0-97.21  0-98.22  0-99.21  0-112.20  0-113.21  0-114.21  0-115.22  0-116.21  0-125.20
                                 0-126.21  0-127.21  0-128.22  0-129.21  0-138.20  0-139.21  0-140.21  0-141.22  0-142.21  0-151.20
                                 0-152.21  0-153.21  0-154.22  0-155.21  0-172.20  0-173.21  0-174.21  0-175.22  0-176.21  0-183.20
                                 0-184.21  0-185.21  0-186.22  0-187.21  0-210.23  0-211.24  0-212.24  0-213.25  0-214.24  0-219.23
                                 0-220.24  0-221.24  0-222.25  0-223.24
 
idim1                            Parameter, Integer(4)
                                 1-14.17$
 
idim2                            Parameter, Integer(4)
                                 1-14.29$
 
iegrd                            Common member, Integer(4) (1:237, 1:387), Offset: 6599124, Alignment: full word
                                 3-10.8$  0-82.13@
 
iegrdk                           Common member, Integer(4) (1:237, 1:387), Offset: 2201256, Alignment: double word
                                 3-6.8$
 
igstl                            Parameter, Integer(4)
                                 1-9.17$  1-14.23
 
igstr                            Parameter, Integer(4)
                                 1-9.26$  1-14.44
 
im                               Parameter, Integer(4)
                                 1-3.18$  0-53.23  0-53.40  1-11.23  1-11.34  1-14.35  2-3.21  3-5.14  3-5.27  3-6.15  3-6.29
                                 3-7.14  3-7.27
 
im0n0                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-191.16@  0-192.28@  0-199.40  0-204.22
 
im0n1                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-195.16@  0-196.28@  0-199.52  0-206.22
 
im1n0                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-193.16@  0-194.28@  0-199.46  0-205.22
 
im1n1                            Static, Integer(4), Offset: 0, Alignment: full word
                                 0-197.16@  0-198.28@  0-199.58  0-207.22
 
imjm                             Parameter, Integer(4)
                                 0-53.18$
 
imot                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-57.15$  0-1.31  0-77.22
 
imt                              Parameter, Integer(4)
                                 0-53.34$  0-58.18  0-74.14  3-7.41  3-8.14  3-8.29
 
imx                              Parameter, Integer(4)
                                 2-3.17$  3-3.14  3-3.29  3-4.15  3-4.31  3-9.14  3-9.29  3-10.14  3-10.29  3-11.13  3-11.26
                                 3-11.40  3-12.13  3-12.28
 
inpes                            Parameter, Integer(4)
                                 1-6.17$  1-11.27  1-11.37  1-14.38
 
iounit                           Common Block, Alignment: double word
                                 4-4.15$
 
itail                            Parameter, Integer(4)
                                 1-11.17$
 
iwgt                             Common member, Integer(4) (1:237, 1:387), Offset: 7332876, Alignment: full word
                                 3-11.8$  0-90.16@  0-99.16@  0-116.16@  0-129.16@  0-142.16@  0-155.16@  0-176.16@  0-187.16@
                                 0-214.19@  0-223.19@
 
j                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-76.13@  0-78.26  0-79.26  0-82.21  0-83.21  0-86.22  0-87.23  0-88.23  0-89.24  0-90.23  0-95.22
                                 0-96.23  0-97.23  0-98.24  0-99.23  0-112.22  0-113.23  0-114.23  0-115.24  0-116.23  0-125.22
                                 0-126.23  0-127.23  0-128.24  0-129.23  0-138.22  0-139.23  0-140.23  0-141.24  0-142.23  0-151.22
                                 0-152.23  0-153.23  0-154.24  0-155.23  0-172.22  0-173.23  0-174.23  0-175.24  0-176.23  0-183.22
                                 0-184.23  0-185.23  0-186.24  0-187.23  0-210.25  0-211.26  0-212.26  0-213.27  0-214.26  0-219.25
                                 0-220.26  0-221.26  0-222.27  0-223.26
 
jdim1                            Parameter, Integer(4)
                                 1-15.17$
 
jdim2                            Parameter, Integer(4)
                                 1-15.29$
 
jegrd                            Common member, Integer(4) (1:237, 1:387), Offset: 6966000, Alignment: quadruple word
                                 3-10.23$  0-83.13@
 
jegrdk                           Common member, Integer(4) (1:237, 1:387), Offset: 2568132, Alignment: full word
                                 3-6.22$
 
jgstl                            Parameter, Integer(4)
                                 1-10.17$  1-15.23
 
jgstr                            Parameter, Integer(4)
                                 1-10.26$  1-15.44
 
jm                               Parameter, Integer(4)
                                 1-3.25$  0-53.26  0-53.29  0-53.49  1-12.23  1-12.34  1-15.35  2-3.28  3-5.17  3-5.30  3-6.18
                                 3-6.32  3-7.17  3-7.30
 
jmot                             Reference argument, Integer(4), Offset: 0, Alignment: full word
                                 0-57.20$  0-1.36  0-76.19
 
jmt                              Parameter, Integer(4)
                                 0-53.45$  0-58.22  0-75.14  3-7.45  3-8.18  3-8.33
 
jmx                              Parameter, Integer(4)
                                 2-3.24$  3-3.18  3-3.33  3-4.19  3-4.35  3-9.18  3-9.33  3-10.18  3-10.33  3-11.17  3-11.30
                                 3-11.44  3-12.17  3-12.32
 
jnpes                            Parameter, Integer(4)
                                 1-6.26$  1-12.27  1-12.37  1-15.38
 
jtail                            Parameter, Integer(4)
                                 1-12.17$
 
lcntrl                           Common member, Integer(4), Offset: 4, Alignment: full word
                                 4-5.16$
 
llgrds                           Common Block, Alignment: double word
                                 3-2.15$
 
lm                               Parameter, Integer(4)
                                 1-3.32$  2-3.47
 
lm0n0                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-56.15$  0-162.13@  0-166.24  0-182.21  0-192.20
 
lm0n1                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-56.27$  0-164.13@  0-167.24  0-182.41  0-196.20
 
lm1n0                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-56.21$  0-163.13@  0-166.41  0-182.31  0-194.20
 
lm1n1                            Static, Logical(4), Offset: 0, Alignment: full word
                                 0-56.33$  0-165.13@  0-167.41  0-182.51  0-198.20
 
lsm                              Parameter, Integer(4)
                                 1-3.38$
 
lunco                            Common member, Integer(4), Offset: 8, Alignment: double word
                                 4-5.24$
 
lunll                            Common member, Integer(4), Offset: 12, Alignment: full word
                                 4-5.31$
 
lunout                           Common member, Integer(4), Offset: 16, Alignment: quadruple word
                                 4-5.38$
 
m                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-80.13@  0-82.26  0-85.20  0-103.25  0-162.28  0-163.28  0-164.28  0-165.28
 
max                              Pure Intrinsic
                                 0-204.30  0-205.30  0-206.30  0-207.30
 
maxi                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-74.7@  0-94.25
 
maxj                             Static, Integer(4), Offset: 0, Alignment: full word
                                 0-75.7@  0-94.41
 
mxfld                            Parameter, Integer(4)
                                 2-3.31$
 
mxlvl                            Parameter, Integer(4)
                                 2-3.41$
 
n                                Static, Integer(4), Offset: 0, Alignment: full word
                                 0-81.13@  0-83.26  0-85.36  0-104.25  0-162.32  0-163.32  0-164.32  0-165.32
 
r00                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-200.16@  0-204.45  0-204.60
 
r01                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-202.16@  0-206.45  0-206.60
 
r10                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-201.16@  0-205.45  0-205.60
 
r11                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-203.16@  0-207.45  0-207.60
 
rxx                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-199.16@  0-204.39  0-204.54  0-205.39  0-205.54  0-206.39  0-206.54  0-207.39  0-207.54
 
small                            Static, Real(4), Offset: 0, Alignment: full word
                                 0-66.17*  0-107.31  0-107.55  0-119.35  0-120.34  0-132.35  0-133.34  0-145.35  0-146.34
 
spvc                             Static, Real(4), Offset: 0, Alignment: full word
                                 0-66.12*  0-162.40  0-163.40  0-164.40  0-165.40
 
sqrt                             Pure Intrinsic
                                 0-199.24
 
stdout                           Common member, Integer(4), Offset: 0, Alignment: quadruple word
                                 4-2.15$  4-5.8$  0-73.13  0-228.19
 
vtlat                            Common member, Real(4) (1:237, 1:387), Offset: 2935008, Alignment: quadruple word
                                 3-7.8$
 
vtlon                            Common member, Real(4) (1:237, 1:387), Offset: 3301884, Alignment: full word
                                 3-7.21$
 
w00                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-108.16@  0-112.29  0-121.16@  0-125.29  0-134.16@  0-138.29  0-147.16@  0-151.29  0-168.16@
                                 0-172.29  0-204.16@  0-208.23  0-210.32
 
w01                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-110.16@  0-114.29  0-123.16@  0-127.29  0-136.16@  0-140.29  0-149.16@  0-153.29  0-170.16@
                                 0-174.29  0-206.16@  0-208.29  0-212.32
 
w10                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-109.16@  0-113.29  0-122.16@  0-126.29  0-135.16@  0-139.29  0-148.16@  0-152.29  0-169.16@
                                 0-173.29  0-205.16@  0-208.35  0-211.32
 
w11                              Static, Real(4), Offset: 0, Alignment: full word
                                 0-111.16@  0-115.29  0-124.16@  0-128.29  0-137.16@  0-141.29  0-150.16@  0-154.29  0-171.16@
                                 0-175.29  0-207.16@  0-208.41  0-213.32
 
wij                              Common member, Real(4) (1:237, 1:387), Offset: 7699752, Alignment: double word
                                 3-11.22$  0-86.16@  0-95.16@  0-112.16@  0-125.16@  0-138.16@  0-151.16@  0-172.16@  0-183.16@
                                 0-210.19@  0-219.19@
 
wijp                             Common member, Real(4) (1:237, 1:387), Offset: 8433504, Alignment: quadruple word
                                 3-12.8$  0-88.16@  0-97.16@  0-114.16@  0-127.16@  0-140.16@  0-153.16@  0-174.16@  0-185.16@
                                 0-212.19@  0-221.19@
 
wipj                             Common member, Real(4) (1:237, 1:387), Offset: 8066628, Alignment: full word
                                 3-11.35$  0-87.16@  0-96.16@  0-113.16@  0-126.16@  0-139.16@  0-152.16@  0-173.16@  0-184.16@
                                 0-211.19@  0-220.19@
 
wipjp                            Common member, Real(4) (1:237, 1:387), Offset: 8800380, Alignment: full word
                                 3-12.22$  0-89.16@  0-98.16@  0-115.16@  0-128.16@  0-141.16@  0-154.16@  0-175.16@  0-186.16@
                                 0-213.19@  0-222.19@
 
wsum                             Static, Real(4), Offset: 0, Alignment: full word
                                 0-208.16@  0-209.20  0-210.36  0-211.36  0-212.36  0-213.36
 
xx                               Static, Real(4), Offset: 0, Alignment: full word
                                 0-78.13@  0-80.17  0-94.19  0-103.20
 
yy                               Static, Real(4), Offset: 0, Alignment: full word
                                 0-79.13@  0-81.17  0-94.35  0-104.20
 
** genbil   === End of Compilation 1 ===
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    GENBIL.f                    12/13/05   09:58:05
     1    /gpfs/m/nco/ops/nwprod/sorc/sref_eta_etapost.fd/parmeta
                                      12/13/05   09:58:06      0      51
     2    /gpfs/m/nco/ops/nwprod/sorc/sref_eta_etapost.fd/parmout
                                      12/13/05   09:58:06      0      52
     3    /gpfs/m/nco/ops/nwprod/sorc/sref_eta_etapost.fd/LLGRDS.comm
                                      12/13/05   09:58:05      0      61
     4    /gpfs/m/nco/ops/nwprod/sorc/sref_eta_etapost.fd/IOUNIT.comm
                                      12/13/05   09:58:05      0      62
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     273
1501-510  Compilation successful for file GENBIL.f.
1501-543  Object file created.
