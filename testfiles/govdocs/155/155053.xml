<project name="bda-templates-helper" default="run" basedir="." >
	<!-- helper-scripts version 0.1.0 -->
	<property file="helper.properties"/>

	<property name="project.software.dir" location="${project.root.dir}/software"/>
	<property name="project.build.dir" location="${project.software.dir}/build"/>
	<property name="project.gui-installer.dir" location="${project.build.dir}/gui-installer"/>
	<property name="project.common.dir" location="${project.software.dir}/common"/>
	<property name="project.resource.base.dir" location="${project.common.dir}/resources"/>
	<property name="project.resource.jboss.dir" location="${project.resource.base.dir}/jboss-conf"/>
	<property name="project.resource.tomcat.dir" location="${project.resource.base.dir}/tomcat"/>
	<property name="project.resource.grid.dir" location="${project.resource.base.dir}/grid"/>


	<property name="working.dir" location="${basedir}/working"/>
	<property name="lib.dir" location="${working.dir}/lib" />
	<property name="template.exploded.dir" location="${bda.template.dir}"/>
	<property name="template.working.dir" location="${working.dir}/templates-working"/>
		
	<property name="bda-utils.dir" location="${working.dir}/bda-utils" />
	<property name="bda-download.dir" location="${working.dir}/bda-download" />


	<property name="bda.version" value="${bda.template.version}"/>
	<property name="bda-download.file" value="bda-ivy-build.xml" />
	<property name="bda-download.src.url" value="http://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-download/${bda-download.file}" />

	<mkdir dir="${working.dir}"/>
	<mkdir dir="${lib.dir}"/>
	<mkdir dir="${bda-download.dir}" />
	<mkdir dir="${template.working.dir}"/>

	<get src="${bda-download.src.url}" dest="${bda-download.dir}/${bda-download.file}" />

	<ant inheritAll="false" inheritRefs="false" antfile="${bda-download.file}" target="retrieve-bda" dir="${bda-download.dir}">
		<property name="bda.version" value="${bda.version}" />
		<property name="bda-utils.dir" location="${bda-utils.dir}" />
		<property name="lib.dir" location="${lib.dir}" />
	</ant>

	<path id="bda-utils.classpath">
		<fileset dir="${bda-utils.dir}">
			<include name="**/*.jar" />
		</fileset>      
	</path> 
	<import file="${bda-utils.dir}/bda-build-utils-${bda.version}.xml" />

	<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="bda-utils.classpath"/>

	<target name="verify-project-structure">
		<if>
			<not>
				<available file="${project.root.dir}"/>
			</not>	
			<then>
				<fail message="Cannot find project.root.dir of ${project.root.dir}, please verify it exists and is properly defined in the helper.properties"/>
			</then>
		</if>
		<if>
			<not>
				<available file="${project.software.dir}"/>
			</not>
			<then>
				<fail message="projectroot/software folder not found, have you completed restructuring of your project yet? Please see https://wiki.nci.nih.gov/x/LQCG for more information"/>
			</then>
		</if>
		<if>
			<or>
				<available file="${project.build.dir}"/>
				<available file="${project.common.dir}"/>
			</or>
			<then>
				<echo message="${project.build.dir} ${project.common.dir}"/>
				<fail message="projectroot/software/(build|common) should not exist when this script is run.  Please remove these directories before running this script again"/>
			</then>
		</if>
	</target>

	<target name="get-templates">
		<get src="${bda.template.url}" dest="${working.dir}/${bda.template.file}" verbose="false"/>
		<unzip src="${working.dir}/${bda.template.file}" dest="${template.exploded.dir}"/>
	</target>

	<target name="copy-common">
		<copy todir="${project.software.dir}">
			<fileset dir="${template.exploded.dir}">
				<exclude name="common/resources/**/*"/>
				<exclude name="build/**/*"/>
			</fileset>
		</copy>
		<copy todir="${project.software.dir}">
			<fileset dir="${template.exploded.dir}">
				<include name="common/resources/security/**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="copy-conditional">
		<echo message="${use.tomcat} ${use.jboss} ${use.grid} ${use.gui-installer}"/>
		<if>
			<equals arg1="${use.tomcat}" arg2="true"/>
			<then>
				<copy todir="${project.software.dir}">
					<fileset dir="${template.exploded.dir}">
						<include name="common/resources/tomcat*/**/*"/>
					</fileset>
				</copy>
			</then>
		</if>
		<if>
			<equals arg1="${use.jboss}" arg2="true"/>
			<then>
				<copy todir="${project.software.dir}">
					<fileset dir="${template.exploded.dir}">
						<include name="common/resources/jboss*/**/*"/>
					</fileset>
				</copy>
			</then>
		</if>
		<if>
			<equals arg1="${use.grid}" arg2="true"/>
			<then>
				<copy todir="${project.software.dir}">
					<fileset dir="${template.exploded.dir}">
						<include name="common/resources/grid*/**/*"/>
					</fileset>
				</copy>
			</then>
		</if>
		<if>
			<equals arg1="${use.gui-installer}" arg2="true"/>
			<then>
				<mkdir dir="${project.build.dir}"/>
				<copy todir="${project.software.dir}">
					<fileset dir="${template.exploded.dir}">
						<include name="build/gui-installer/**/*"/>
					</fileset>
				</copy>
			</then>
		</if>
	</target>
	
	<target name="copy-filter-build">
		<!--<script language="groovy" src="bdaProjectStartHelper.groovy" classpathref="bda-utils.classpath"/>-->
		<groovy src="bdaProjectStartHelper.groovy" classpathref="bda-utils.classpath"/>
	</target>
	<target name="finalize">
		<copy file="${project.resource.jboss.dir}/bda-blueprints-ds.xml" tofile="${project.resource.jboss.dir}/${project.prefix}-ds.xml"/>
	</target>
	<target name="run"
		depends="
		verify-project-structure,
		get-templates,
		copy-common,
		copy-conditional,
		copy-filter-build,
		finalize
		" >
	</target>
</project>
