%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 11 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 744 540 756 R
7 X
0 0 0 1 0 0 0 K
V
72 32 540 44 R
V
40 697 193 733 R
V
0 10 Q
0 X
(NBSIR 88-3704) 40 726.33 T
207 621 360 657 R
7 X
V
0 X
(By:) 207 650.33 T
(Thomas R. Kramer) 207 638.33 T
(Rebecca E. Weaver) 207 626.33 T
41 621 194 657 R
7 X
V
0 X
(January 6, 1988) 41 650.33 T
207 699 502 754 R
7 X
V
0 16 Q
0 X
(THE DATA EXECUTION MODULE) 207 742 T
(OF THE VERTICAL WORKSTATION) 207 724 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "i" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 68 540 80 R
7 X
0 0 0 1 0 0 0 K
V
72 90 540 720 R
V
1 12 Q
0 X
(THE DATA EXECUTION MODULE OF THE VERTICAL WORKSTATION) 103.15 628 T
(OF THE AUTOMATED MANUFACTURING RESEARCH FACILITY) 120.17 614 T
(AT THE NATIONAL BUREAU OF STANDARDS) 174.83 600 T
2 F
(Dr. Thomas R. Kramer) 250.51 572 T
(Guest Worker, National Bureau of Standards, &) 190.36 558 T
(Research Associate, Catholic University) 209.02 544 T
(Ms. Rebecca E. Weaver) 248.19 516 T
(Summer Intern, National Bureau of Standards) 195.68 502 T
(January 6, 1988) 267.84 460 T
1.25 (Funding for the research performed by Dr. Kramer and reported in this paper was provided to) 72 320 P
0.16 (Catholic University under Grant No. 60NANB5D0522 and Grant No. 70NANB7H0716 from the) 72 306 P
(National Bureau of Standards.) 72 292 T
1.37 (Certain commercial equipment and software are identified in this paper in order to adequately) 72 264 P
3.25 (specify the experimental facility.   Such identification does not imply recommendation or) 72 250 P
2.03 (endorsement by the National Bureau of Standards, nor does it imply that the equipment and) 72 236 P
(software identified are necessarily the best available for the purpose.) 72 222 T
1.32 (This publication was prepared in part by a United States Government employee as part of her) 72 194 P
2.2 (official duties and is, therefore, a work of the United States Government and not subject to) 72 180 P
(copyright.) 72 166 T
FMENDPAGE
%%EndPage: "i" 2
%%Page: "i" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- i -) 297.34 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(CONTENTS) 272.99 685 T
2 F
(Page) 516.67 657 T
(I.  INTRODUCTION) 72 629 T
(.................................................................................................................) 177 629 T
(1) 516 629 T
(    1.  CONTENTS) 72 615 T
(......................................................................................................................) 162 615 T
(1) 516 615 T
(    2.  AUDIENCE) 72 601 T
(......................................................................................................................) 162 601 T
(1) 516 601 T
(    3.  BRIEF VWS DESCRIPTION) 72 587 T
(..........................................................................................) 246 587 T
(1) 516 587 T
(    4.  DESIGN PROTOCOL) 72 573 T
(......................................................................................................) 210 573 T
(2) 516 573 T
(    5.  PROCESS PLAN PROTOCOL) 72 559 T
(........................................................................................) 252 559 T
(3) 516 559 T
(    6.  SUMMARY OF DATA EXECUTION MODULE CAPABILITIES) 72 545 T
(..............................) 426 545 T
(4) 516 545 T
(    7.  RELATED READING) 72 531 T
(.....................................................................................................) 213 531 T
(5) 516 531 T
(II.  DATA EXECUTION MODULE OPERATION) 72 503 T
(.................................................................) 321 503 T
(7) 516 503 T
(    1. INTRODUCTION) 72 489 T
(.............................................................................................................) 189 489 T
(7) 516 489 T
(    2.  INITIALIZATION) 72 475 T
(..........................................................................................................) 192 475 T
(11) 510 475 T
(        2.1.  Overview) 72 461 T
(..................................................................................................................) 168 461 T
(11) 510 461 T
(        2.2.  Workpiece Model) 72 447 T
(.....................................................................................................) 207 447 T
(11) 510 447 T
(        2.3.  Process Plan Enhancement) 72 433 T
(......................................................................................) 252 433 T
(11) 510 433 T
(        2.4.  Process Plan Sequencing) 72 419 T
(..........................................................................................) 240 419 T
(14) 510 419 T
(        2.5.  Data Base Initialization) 72 405 T
(............................................................................................) 234 405 T
(14) 510 405 T
(    3.  STEPPING THROUGH THE PROCESS PLAN) 72 391 T
(...........................................................) 333 391 T
(14) 510 391 T
(        3.1.  Introduction) 72 377 T
(..............................................................................................................) 180 377 T
(14) 510 377 T
(        3.2.  Function Call Assembly) 72 363 T
(...........................................................................................) 237 363 T
(15) 510 363 T
(    4.  CLOSING) 72 349 T
(.......................................................................................................................) 153 349 T
(16) 510 349 T
(        4.1.  Introduction) 72 335 T
(..............................................................................................................) 180 335 T
(16) 510 335 T
(        4.2.  Printing Pseudocode) 72 321 T
(.................................................................................................) 219 321 T
(16) 510 321 T
(        4.3.  Use of Graphics for Flashing and Tool Path) 72 307 T
(............................................................) 330 307 T
(16) 510 307 T
(    5.  DATA REQUIREMENTS) 72 293 T
(..............................................................................................) 228 293 T
(19) 510 293 T
(III.  WORKPIECE MODEL) 72 265 T
(....................................................................................................) 210 265 T
(21) 510 265 T
(    1.  INITIALIZATION) 72 251 T
(..........................................................................................................) 192 251 T
(21) 510 251 T
(    2.  CONSTRUCTION) 72 237 T
(..........................................................................................................) 192 237 T
(21) 510 237 T
(    3.  USES) 72 223 T
(...............................................................................................................................) 129 223 T
(21) 510 223 T
FMENDPAGE
%%EndPage: "i" 3
%%Page: "ii" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- ii -) 295.67 72 T
72 90 540 693 R
7 X
V
0 X
(IV.  MACHINING) 72 685 T
(...................................................................................................................) 165 685 T
(23) 510 685 T
(    1.  OVERVIEW) 72 671 T
(...................................................................................................................) 165 671 T
(23) 510 671 T
(    2.  VERTICAL PASS INCREMENTS) 72 657 T
(................................................................................) 270 657 T
(23) 510 657 T
(    3.  TYPES OF METAL CUTTING) 72 643 T
(.....................................................................................) 255 643 T
(23) 510 643 T
(        3.1.  Overview) 72 629 T
(..................................................................................................................) 168 629 T
(23) 510 629 T
(        3.2.  Slot Milling) 72 615 T
(..............................................................................................................) 180 615 T
(24) 510 615 T
(            3.2.1.  Introduction) 72 601 T
(.......................................................................................................) 201 601 T
(24) 510 601 T
(            3.2.2.  Ramping) 72 587 T
(............................................................................................................) 186 587 T
(25) 510 587 T
(        3.3.  Peripheral Milling) 72 573 T
(....................................................................................................) 210 573 T
(25) 510 573 T
(            3.3.1.  Introduction) 72 559 T
(.......................................................................................................) 201 559 T
(25) 510 559 T
(            3.3.2.  Conventional vs. Climb Cutting) 72 545 T
(.......................................................................) 297 545 T
(25) 510 545 T
(            3.3.3.  Stepover) 72 531 T
(............................................................................................................) 186 531 T
(26) 510 531 T
(        3.4.  Finish Milling) 72 517 T
(..........................................................................................................) 192 517 T
(29) 510 517 T
(        3.5.  Drilling) 72 503 T
(.....................................................................................................................) 159 503 T
(29) 510 503 T
(        3.6.  Tapping) 72 489 T
(....................................................................................................................) 162 489 T
(29) 510 489 T
(        3.7.  Countersinking) 72 475 T
(.........................................................................................................) 195 475 T
(29) 510 475 T
(        3.8.  Chamfering) 72 461 T
(..............................................................................................................) 180 461 T
(29) 510 461 T
(        3.9.  Center Drilling) 72 447 T
(.........................................................................................................) 195 447 T
(30) 510 447 T
(        3.10.  Counterboring) 72 433 T
(........................................................................................................) 198 433 T
(30) 510 433 T
(        3.11.  Face Milling) 72 419 T
(...........................................................................................................) 189 419 T
(30) 510 419 T
(        3.12.  Fly Cutting) 72 405 T
(.............................................................................................................) 183 405 T
(30) 510 405 T
(    4.  SPEEDS AND FEED RATES) 72 391 T
(........................................................................................) 246 391 T
(31) 510 391 T
(    5.  ZERO FINDING) 72 377 T
(.............................................................................................................) 183 377 T
(31) 510 377 T
(        5.1.  Introduction) 72 363 T
(..............................................................................................................) 180 363 T
(31) 510 363 T
(        5.2.  Setting X-Zero and Y-Zero) 72 349 T
(......................................................................................) 252 349 T
(31) 510 349 T
(            5.2.1.  Introduction) 72 335 T
(.......................................................................................................) 201 335 T
(31) 510 335 T
(            5.2.2.  Probing a Corner) 72 321 T
(...............................................................................................) 225 321 T
(32) 510 321 T
(            5.2.3.  Probing a Hole) 72 307 T
(..................................................................................................) 216 307 T
(32) 510 307 T
(        5.3.  Setting Z-Zero) 72 293 T
(..........................................................................................................) 192 293 T
(35) 510 293 T
(            5.3.1.  W-axis Setting) 72 279 T
(...................................................................................................) 213 279 T
(35) 510 279 T
(            5.3.2.  Setting Z-zero from the Top of the Part) 72 265 T
(............................................................) 330 265 T
(36) 510 265 T
(    6.  TOOL CHANGING) 72 251 T
(........................................................................................................) 198 251 T
(36) 510 251 T
FMENDPAGE
%%EndPage: "ii" 4
%%Page: "iii" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- iii -) 294 72 T
72 90 540 693 R
7 X
V
0 X
(V.  AUTOMATIC NC-CODING) 72 685 T
(............................................................................................) 234 685 T
(37) 510 685 T
(    1.  OVERVIEW) 72 671 T
(...................................................................................................................) 165 671 T
(37) 510 671 T
(    2.  NC-CODE) 72 657 T
(.......................................................................................................................) 153 657 T
(37) 510 657 T
(        2.1.  Introduction) 72 643 T
(..............................................................................................................) 180 643 T
(37) 510 643 T
(        2.2.  An Example) 72 629 T
(.............................................................................................................) 183 629 T
(39) 510 629 T
(        2.3.  First and Last Lines of a Program) 72 615 T
(............................................................................) 282 615 T
(41) 510 615 T
(    3.  GENERAL APPROACH TO CODE-WRITING) 72 601 T
(...........................................................) 333 601 T
(41) 510 601 T
(        3.1.  Introduction) 72 587 T
(..............................................................................................................) 180 587 T
(41) 510 587 T
(        3.2.  Pseudocode and Print Routine) 72 573 T
(.................................................................................) 267 573 T
(42) 510 573 T
(        3.3.  Comments) 72 559 T
(................................................................................................................) 174 559 T
(43) 510 559 T
(        3.4.  Machine Capabilities) 72 545 T
(...............................................................................................) 225 545 T
(43) 510 545 T
(            3.4.1.  Introduction) 72 531 T
(.......................................................................................................) 201 531 T
(43) 510 531 T
(            3.4.2.  Common Capabilities) 72 517 T
(.......................................................................................) 249 517 T
(44) 510 517 T
(            3.4.3.  Less Common Capabilities) 72 503 T
(...............................................................................) 273 503 T
(44) 510 503 T
(    4.  SIMPLE ALGORITHMS) 72 489 T
(...............................................................................................) 225 489 T
(45) 510 489 T
(        4.1.  Drilling) 72 475 T
(.....................................................................................................................) 159 475 T
(45) 510 475 T
(        4.2.  Tapping) 72 461 T
(....................................................................................................................) 162 461 T
(45) 510 461 T
(        4.3.  Countersinking) 72 447 T
(.........................................................................................................) 195 447 T
(45) 510 447 T
(        4.4.  Milling a Straight_Groove) 72 433 T
(.......................................................................................) 249 433 T
(45) 510 433 T
(        4.5.  Milling a Groove) 72 419 T
(......................................................................................................) 204 419 T
(46) 510 419 T
(        4.6.  Chamfering) 72 405 T
(..............................................................................................................) 180 405 T
(46) 510 405 T
(        4.7.  Center Drilling) 72 391 T
(.........................................................................................................) 195 391 T
(46) 510 391 T
(        4.8.  Counterboring) 72 377 T
(..........................................................................................................) 192 377 T
(46) 510 377 T
(    5.  NON-TRIVIAL BUT EASY ALGORITHMS) 72 363 T
(...............................................................) 321 363 T
(46) 510 363 T
(        5.1.  Face Milling) 72 349 T
(.............................................................................................................) 183 349 T
(46) 510 349 T
(        5.2.  Fly Cutting) 72 335 T
(...............................................................................................................) 177 335 T
(47) 510 335 T
(    6. SOPHISTICATED ALGORITHMS) 72 321 T
(...............................................................................) 273 321 T
(47) 510 321 T
(        6.1.  Pocket Milling) 72 307 T
(..........................................................................................................) 192 307 T
(47) 510 307 T
(            6.1.1.  Introduction) 72 293 T
(.......................................................................................................) 201 293 T
(47) 510 293 T
(            6.1.2.  Normal Pocket Algorithm) 72 279 T
(.................................................................................) 267 279 T
(47) 510 279 T
(            6.1.3.  Very Small Pockets) 72 265 T
(...........................................................................................) 237 265 T
(47) 510 265 T
(            6.1.4.  Small Pockets) 72 251 T
(....................................................................................................) 210 251 T
(48) 510 251 T
(            6.1.5.  Making the Initial Slot) 72 237 T
(......................................................................................) 252 237 T
(48) 510 237 T
(        6.2.  Text Milling) 72 223 T
(.............................................................................................................) 183 223 T
(50) 510 223 T
(        6.3.  Milling a Contour Groove) 72 209 T
(........................................................................................) 246 209 T
(52) 510 209 T
(        6.4.  Milling a Contour Pocket) 72 195 T
(.........................................................................................) 243 195 T
(52) 510 195 T
(        6.5.  Milling a Side Contour) 72 181 T
(............................................................................................) 234 181 T
(52) 510 181 T
(VI.  DATA EXECUTION MODULE SOFTWARE) 72 153 T
(...............................................................) 321 153 T
(55) 510 153 T
(    1.  INTRODUCTION) 72 139 T
(..........................................................................................................) 192 139 T
(55) 510 139 T
(    2.  LISP FUNCTIONS) 72 125 T
(.........................................................................................................) 195 125 T
(55) 510 125 T
(REFERENCES) 72 97 T
(........................................................................................................................) 150 97 T
(57) 510 97 T
FMENDPAGE
%%EndPage: "iii" 5
%%Page: "iv" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- iv -) 294.34 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(LIST OF FIGURES) 254.32 685 T
2 F
(Page) 516.67 657 T
(Figure 1. Data Execution Drawing) 72 629 T
(..........................................................................................) 240 629 T
(17) 510 629 T
(Figure 2. Slot Milling) 72 615 T
(...............................................................................................................) 177 615 T
(24) 510 615 T
(Figure 3. Climb-Cut Peripheral Milling) 72 601 T
(..................................................................................) 264 601 T
(27) 510 601 T
(Figure 4. Conventional Peripheral Milling) 72 587 T
(..............................................................................) 276 587 T
(28) 510 587 T
(Figure 5. Setting Zero) 72 573 T
(..............................................................................................................) 180 573 T
(34) 510 573 T
(Figure 6. Pocket Cutting Tool Paths) 72 559 T
(........................................................................................) 246 559 T
(49) 510 559 T
(Figure 7. Text Tool Path) 72 545 T
(..........................................................................................................) 192 545 T
(51) 510 545 T
(Figure 8. Contour Pocket Tool Path) 72 531 T
(........................................................................................) 246 531 T
(53) 510 531 T
(Figure 9. Side Contour Tool Path) 72 517 T
(............................................................................................) 234 517 T
(54) 510 517 T
FMENDPAGE
%%EndPage: "iv" 6
%%Page: "v" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- v -) 296 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(LIST OF TABLES) 257.32 685 T
2 F
(Page) 516.67 657 T
(Table 1.  Data Execution Screen Messages) 72 629 T
(...............................................................................) 279 629 T
(8) 516 629 T
(Table 2.  Process Plan) 72 615 T
(................................................................................................................) 180 615 T
(9) 516 615 T
(Table 3.  Design and Workpiece) 72 601 T
(..............................................................................................) 228 601 T
(10) 510 601 T
(Table 4.  Enhanced Process Plan) 72 587 T
(.............................................................................................) 231 587 T
(13) 510 587 T
(Table 5.  NC-Code) 72 573 T
(...................................................................................................................) 165 573 T
(18) 510 573 T
(Table 6.  Numerical Control Codes) 72 559 T
(.........................................................................................) 243 559 T
(38) 510 559 T
(Table 7.  Data Execution LISP Functions) 72 545 T
(................................................................................) 270 545 T
(56) 510 545 T
FMENDPAGE
%%EndPage: "v" 7
%%Page: "1" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 68 540 80 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(- 1 -) 296 72 T
72 90 540 720 R
7 X
V
1 F
0 X
(THE DATA EXECUTION MODULE OF THE VERTICAL WORKSTATION) 103.15 712 T
(OF THE AUTOMATED MANUFACTURING RESEARCH FACILITY) 120.17 699 T
(AT THE NATIONAL BUREAU OF STANDARDS) 174.83 686 T
(I.) 72 647 T
193.67 645.8 97.67 645.8 2 L
V
0.6 H
0 Z
N
(INTRODUCTION) 97.67 647 T
2 F
(        1.  CONTENTS) 72 621 T
0.08 0.36 (This paper discusses the Data Execution module of the Vertical Workstation \050VWS\051 of the) 72 595 B
0.05 0.36 (Automated Manufacturing Research Facility \050AMRF\051 at the National Bureau of Standards.) 72 582 B
5.46 0.36 (The Data Execution module is where numerical control code \050NC-code\051 for the) 72 569 B
0.19 0.36 (workstation\325s vertical milling machine is prepared.  The descriptions pertain to the system) 72 556 B
0.36 (in use during the summer of 1987.) 72 543 S
0.49 0.36 (Chapter II tells what the module does in its three phases of action: initialization, stepping) 72 517 B
0.36 (through the process plan and closing.) 72 504 S
0.42 0.36 (Chapter III discusses the workpiece model used by the module:  how it is initialized, kept) 72 478 B
0.36 (up to date as steps of the process plan are executed, and used.) 72 465 S
0.4 0.36 (Chapter IV discusses machining metal and describes the machining operations used in the) 72 439 B
0.36 (system.) 72 426 S
-0.04 0.36 (Chapter V discusses automatic NC-coding in the VWS2 system:  what NC-code looks like,) 72 400 B
0.42 0.36 (how NC-code is interpreted, the general approach to NC-coding taken by the module, and) 72 387 B
0.36 (what the machining algorithms are which have been implemented.) 72 374 S
0.36 (Chapter VI discusses the LISP software which comprises the module.) 72 348 S
0.36 (        2.  AUDIENCE) 72 322 S
0.26 0.36 (The paper is intended to be useful to people interested in concepts and technical details of) 72 296 B
2.69 0.36 (the VWS, particularly AMRF personnel who are running the VWS or maintaining or) 72 283 B
1.7 0.36 (improving the software for the VWS.  The paper is intended to be useful also to other) 72 270 B
-0.51 0.36 (researchers in automated manufacturing. Knowledge of \050i\051 the computer language LISP, \050ii\051) 72 257 B
-0.6 0.36 (machining tools, and \050iii\051 NC-code language is useful but not essential to reading this paper.) 72 244 B
-0.05 0.36 (Detailed documentation of the LISP functions that are involved with the systems described) 72 231 B
0.36 (here is being prepared separately.) 72 218 S
0.36 (        3.  BRIEF VWS DESCRIPTION) 72 192 S
-0.22 0.36 (The VWS is a computer-integrated automated machining workstation.  It includes a control) 72 166 B
1.68 0.36 (system, a computer-aided design system, an automatic process planning system, and an) 72 153 B
-0.52 0.36 (automatic NC-code generator.  The principal machinery is a milling center \050Monarch VMC-) 72 140 B
0.57 0.36 (75 with a GE2000 controller\051 and a robot \050Unimate 4070 with a Val II controller\051 to tend) 72 127 B
-0.32 0.36 (the milling center. There is quite a bit of ancillary hardware.  The system is controlled from) 72 114 B
1.97 0.36 (a microcomputer \050Sun 3/160 with 6M memory, BW monitor\051.  Running in stand-alone) 72 101 B
FMENDPAGE
%%EndPage: "1" 8
%%Page: "2" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 2 -) 296 72 T
72 90 540 693 R
7 X
V
0 X
0.49 0.36 (mode, it is possible to design and machine a simple metal part within an hour.  The VWS) 72 685 B
0.53 0.36 (may also be run as an integrated part of the AMRF. The workstation is described in more) 72 672 B
0.36 (detail in [K&J1].) 72 659 S
0.9 0.36 (The software for the VWS is written in the Franz LISP dialect of the computer language) 72 633 B
2.19 0.36 (LISP.  In this paper this software is called the VWS2 system.  Six principal modules) 72 620 B
1.05 0.36 (comprise the VWS2 system:  the Production Management Operating System \050the control) 72 607 B
0 0.36 (system\051, the State Table Editor, the Equipment Program Generator, the Part Design Editor,) 72 594 B
0.36 (the Process Planner, and the Data Execution module.) 72 581 S
1.27 0.36 (The Part Design Editor, Process Planning and Data Execution modules, as well as other) 72 555 B
2.09 0.36 (system capabilities, may be accessed by the user through a small user interface called) 72 542 B
0.79 0.36 (vws_cadm.  Vws_cadm asks the user questions about what the user wants to do and then) 72 529 B
0.36 (activates the appropriate module or other capability accordingly.) 72 516 S
0.94 0.36 (To produce a part from scratch, the user sits at the Sun workstation and creates a design) 72 490 B
0.03 0.36 (using the Part Design Editor.  The Process Planner is then called to write a plan for how to) 72 477 B
-0.67 0.36 (machine a part of that design.  Next NC-code is generated automatically from the design and) 72 464 B
-0.56 0.36 (the plan by the Data Execution module.  Finally the user tells the control system to make the) 72 451 B
-0.27 0.36 (part.  The control system coordinates the activities of the workstation equipment so that the) 72 438 B
0.44 0.36 (part blank is loaded onto the milling machine, the NC-code is sent to the milling machine) 72 425 B
0.36 (and executed \050making the part\051, and the finished part is unloaded.) 72 412 S
0.36 (        4.  DESIGN PROTOCOL) 72 386 S
0.31 0.36 (The VWS2 system uses a feature-based design protocol.  The design protocol is described) 72 360 B
-0.64 0.36 (in detail in [K&J2].  The design of a part is expressed as a list of features on a piece of stock.) 72 347 B
-0.76 0.36 (The piece of stock is always a rectangular block.  The design protocol currently assumes that) 72 334 B
0.36 (all features are being made on one side of the block.) 72 321 S
1.21 0.36 (Although all the features and subfeatures are purely geometric, they were selected to be) 72 295 B
0.7 0.36 (included in the system on the basis of being features commonly found on machined parts) 72 282 B
0.44 0.36 (that could be produced in one, or at most a very few, machining operations.  Each feature) 72 269 B
0.36 (and subfeature is a removed volume.) 72 256 S
0.65 0.36 (The design of a part is a purely geometric description of the shape of a part and gives no) 72 230 B
0.36 (idea of what machining operations are required to make the part.) 72 217 S
1.29 0.36 (The primary features in the system in September, 1987 are:  chamfer_out, groove, hole,) 72 191 B
1.43 0.36 (pocket, straight_groove, text, contour_groove, contour_pocket, and side_contour.  There) 72 178 B
-0.48 0.36 (are also subfeatures which may be made on the primary features:  chamfer_out, chamfer_in,) 72 165 B
1 0.36 (countersink, and thread.  A feature is specified in the system by giving its name and the) 72 152 B
0.36 (values of several parameters which specify its location, shape, and size.) 72 139 S
FMENDPAGE
%%EndPage: "2" 9
%%Page: "3" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 3 -) 296 72 T
72 90 540 693 R
7 X
V
0 X
0.27 0.36 (The design protocol includes the use of "reference features".  If feature A is to be made at) 72 685 B
-0.16 0.36 (the bottom of feature B, then one of the parameters of feature A is "reference_feature", and) 72 672 B
2.09 0.36 (the value of that parameter is the feature number of feature B.  Normally, if B is the) 72 659 B
-0.3 0.36 (reference feature for A, the outline of feature A must fit within the outline of feature B, and) 72 646 B
0.36 (the bottom of feature B must be flat \050there are exceptions in special cases\051.) 72 633 S
0.6 0.36 (Although a design could be prepared according to the VWS2 design protocol using a text) 72 607 B
1.7 0.36 (editor, the only reasonable way to make a design is by using the VWS2 Design Editor) 72 594 B
-0.4 0.36 (module.  The Design Editor is a friendly system which runs on a Sun computer that engages) 72 581 B
2.24 0.36 (the user in a dialog to find out what the user wants to make and prepares the design) 72 568 B
0.36 (document for the user. An example design is shown in Table 3 \050page 10\051.) 72 555 S
0.36 (        5.  PROCESS PLAN PROTOCOL) 72 529 S
-0.23 0.36 (The core of a process plan which is to be executed by the Data Execution module is a set of) 72 503 B
0.14 0.36 (operations, or "steps", that must be carried out in order to make some or all of the features) 72 490 B
-0.45 0.36 (from a design on a workpiece.  In addition to a set of steps, a process plan may also have \0501\051) 72 477 B
4.54 0.36 (a list of requirements of tools and workpieces needed to carry out the plan, \0502\051) 72 464 B
1.17 0.36 (administrative information such as the name of the plan, the id_number of the design to) 72 451 B
-0.23 0.36 (which the plan is tied, the version number, etc., and \0503\051 a list of parameters used in the plan) 72 438 B
0.36 (\050if the plan is parametric\051.) 72 425 S
-0.06 0.36 (Each step in a plan describes some operation to be carried out.  The description is given by) 72 399 B
1.02 0.36 (naming the operation \050which we will call the "work element"\051 and giving the names and) 72 386 B
0.62 0.36 (values of several parameters required to describe the operation fully.  Each work element) 72 373 B
-0.2 0.36 (has its own set of parameters, but a given parameter type may be used for many or all types) 72 360 B
0.03 0.36 (of work elements.  A bare-bones step includes the work element, the number of the feature) 72 347 B
0.28 0.36 (from the design to which the work element applies, the name of the type of tool needed to) 72 334 B
0.09 0.36 (carry out the step, and a list of "precedent steps" which must be carried out before the step) 72 321 B
0.06 0.36 (under consideration. Additional information which is added at some point usually includes) 72 308 B
0.39 0.36 (a changer slot from the milling machine in which a tool of the correct type may be found,) 72 295 B
0.36 (spindle speed, and feed rate.) 72 282 S
0.31 0.36 (For steps which refer to features, most or all of the geometric information needed to carry) 72 256 B
0.48 0.36 (out the step is extracted from the design, and is not carried in the process plan.  For steps) 72 243 B
-0.05 0.36 (which do not refer to features \050such as zero-setting steps\051, geometric information is carried) 72 230 B
0.36 (in the process plan.) 72 217 S
0.3 0.36 (In the VWS2 system, a process plan may have two formats: the standard AMRF format or) 72 191 B
0.02 0.36 (a LISP-readable format.  To be executed, a plan must be in the LISP environment in LISP-) 72 178 B
0 0.36 (readable format.  A reading facility which sets up a LISP-readable plan in the environment) 72 165 B
-0.8 0.36 (from a file in standard AMRF format is part of the VWS2 system, as is a facility which prints) 72 152 B
0.36 (a standard file from a LISP-readable plan in the environment.) 72 139 S
-0.08 0.36 (A detailed explanation of process plans for the VWS milling machine, including examples,) 72 113 B
-0.14 0.12 (is given in [KRA1].  An example of a LISP-readable process plan is shown in Table 2 \050page) 72 100 B
-0.15 0.36 (9\051.) 525.92 100 B
FMENDPAGE
%%EndPage: "3" 10
%%Page: "4" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 4 -) 296 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        6.  SUMMARY OF DATA EXECUTION MODULE CAPABILITIES) 72 685 S
-0.29 0.36 (The VWS2 Data Execution Module is best known as the automatic NC-code generator used) 72 659 B
1.24 0.36 (in the VWS.  However, it does much more than generate NC-code.  The only important) 72 646 B
0.6 0.36 (action the module always takes when it runs is to build a data model of a workpiece.  An) 72 633 B
1 0.36 (example of a model is shown in the bottom half of Table 1.  In addition to building this) 72 620 B
-0.05 0.36 (model, the module has five processing and output options:  \0501\051 write NC-code, \0502\051 enhance) 72 607 B
-0.76 0.36 (a process plan, \0503\051 verify a process plan, \0504\051 graphically emulate execution of a process plan,) 72 594 B
-0.31 0.36 (and \0505\051 save the model.  The five options are independent; any combination of them may be) 72 581 B
0.36 (used simultaneously.) 72 568 S
0.76 0.36 (The enhancement of a process plan has several elements:  adding or deleting steps of the) 72 542 B
-0.7 0.36 (plan, picking a specific changer slot for each tool, and calculating spindle speeds, feed rates,) 72 529 B
0.93 0.36 (stepovers, and vertical pass depths, if necessary.  The input process plan may already be) 72 516 B
-0.36 0.36 (enhanced. Any step of the input process plan may already contain values for any of: spindle) 72 503 B
0.36 (speed, feed rate, stepover, or vertical pass depth.) 72 490 S
0.67 0.36 (The incoming workpiece may be a partly machined part, as long as the data model of the) 72 464 B
-0.33 0.36 (workpiece is correct.  The same process plan may be used to finish many differently shaped) 72 451 B
0.05 0.36 (partly machined workpieces, as long the features on the incoming workpieces are all given) 72 438 B
-0.77 0.36 (in the design which is named in the plan.  This is accomplished by simply removing the steps) 72 425 B
-0.6 0.36 (of the plan needed to produce any feature that is already present on the incoming workpiece.) 72 412 B
0.34 0.36 (Conversely, a process plan does not need to produce all the features from a design.  Thus,) 72 386 B
-0.06 0.36 (the VWS may produce partly machined parts.  The system will produce a data set correctly) 72 373 B
0.36 (representing a partly machined part.) 72 360 S
-0.35 0.36 (Once the VWS2 LISP environment is set up on a Sun computer, the Data Execution module) 72 334 B
3.3 0.36 (may be used via the "vws_cadm" friendly front end, or by a LISP function call to) 72 321 B
0.36 ("execute_plan".) 72 308 S
-0.18 0.36 (With all five options on, the Data Execution module, running in uncompiled LISP on a Sun) 72 282 B
0.47 0.36 (3/160 microcomputer with 6 megabytes of on-board memory and floating point hardware,) 72 269 B
1.17 0.36 (will write NC-code at the rate of about 200 lines per minute.  With only the NC-coding) 72 256 B
0.36 (option on the rate roughly doubles.) 72 243 S
FMENDPAGE
%%EndPage: "4" 11
%%Page: "5" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 5 -) 296 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        7.  RELATED READING) 72 685 S
4.29 0.36 (This paper is one of about a dozen papers being prepared as part of the AMRF) 72 659 B
-0.54 0.36 (documentation to describe all aspects of the VWS.  The others are [JUN], [KRA1], [KRA3],) 72 646 B
3.61 0.36 ([KRA4], [KRA5], [K&J2], [K&S2], [LOVE], [NA&J], and [RUDD].  Other papers,) 72 633 B
0.36 (prepared for professional meetings, also describe the VWS [KRA2], [K&J1], and [K&S1].) 72 620 S
0.36 0.36 (The brief descriptions of the design protocol and the process plan protocol given above in) 72 594 B
-0.82 0.36 (sections 4 and 5 are not adequate for a detailed understanding of the Data Execution Module.) 72 581 B
-0.42 0.36 (The reader who wants details is referred to [K&J1] or [K&J2] for the design protocol and to) 72 568 B
0.36 ([KRA1] or [KRA2] for the process plan protocol.) 72 555 S
-0.65 0.36 (Some of the functions of the Data Execution module are not described in detail in this paper.) 72 529 B
0.24 0.36 (In particular, process plan enhancement is dealt with in Chapter V of the process planning) 72 516 B
0.82 0.36 (paper [KRA1], and seven types of verification carried out in the module are described in) 72 503 B
0.36 (various chapters of the verification paper [K&S2].) 72 490 S
FMENDPAGE
%%EndPage: "5" 12
%%Page: "6" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 6 -) 296 72 T
72 90 540 693 R
7 X
V
FMENDPAGE
%%EndPage: "6" 13
%%Page: "7" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 7 -) 296 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(II.) 72 685 T
341.68 683.8 99.34 683.8 2 L
V
0.6 H
0 Z
N
(DATA EXECUTION MODULE OPERATION) 99.34 685 T
2 F
0.36 (        1. INTRODUCTION) 72 659 S
0.68 0.36 (The Data Execution module capabilities were summarized in section 6 of Chapter I.  The) 72 633 B
0.2 0.36 (operation of the module may be roughly divided into three phases:  initialization, stepping) 72 620 B
-0.67 0.36 (through the process plan, and termination.  The module may be used directly from LISP.  An) 72 607 B
0.36 (example of a function call to the module is:) 72 594 S
2 10 Q
( \050execute_plan  \325datex_plan  \325datex_part  \325datxnc  \325datex_plan_enhanced\325  soft  t  \325vise  \325top_of_part\051) 85.44 568 T
2 12 Q
0.17 0.36 (This function call means: run the Data Execution module on the plan named "datex_plan",) 72 542 B
0.08 0.36 (using the workpiece "datex_part".  Write NC-code to the file "datxnc".  Save the enhanced) 72 529 B
-0.72 0.36 (version of the plan in the file named "datex_plan_enhanced".  Put verification on soft.  Draw) 72 516 B
-0.79 0.36 (a picture emulating the machining process.  Assume for the purposes of verification and NC-) 72 503 B
-0.04 0.36 (code writing that the part is to be milled in the vise.  Establish z-zero by probing the top of) 72 490 B
0.36 (the part \050and, possibly, offsetting from there\051.) 72 477 S
2.49 0.36 (What happens when this function call is made is shown in several tables and figures) 72 451 B
0.49 0.36 (throughout this chapter.  The function call itself appears at the top of Table 1.  That table) 72 438 B
-0.55 0.36 (shows the messages sent back to the user during module operation.  In a test run, the module) 72 425 B
0.06 0.36 (carried out the function call in just over one minute.  The process plan "datex_plan" which) 72 412 B
1.71 0.36 (is being executed is shown in Table 2.  To illustrate the flexibility of the module, this) 72 399 B
0.13 0.36 (process plan contains non-sequential precedent steps, one speed, and one pass depth.  This) 72 386 B
-0.71 0.36 (plan is not much like the one produced by the VWS2 Process Planning module, which would) 72 373 B
0.73 0.36 (use sequential precedent steps and put speeds and pass depths in either all or none of the) 72 360 B
0.36 (steps for which they are appropriate.) 72 347 S
-0.7 0.36 (The name of the design does not appear in the function call.  The name of the design is found) 72 321 B
0.23 0.36 (in the process plan.  In the example the design is called "datex_design".  The data used by) 72 308 B
-0.22 0.36 (the system giving the design and the workpiece are shown in Table 3.  The design has three) 72 295 B
-0.1 0.36 (features in it: a countersunk hole, a chamfered pocket to the right of the hole, and the letter) 72 282 B
-0.42 0.36 ("D" at the bottom of the pocket.  The workpiece has already been partially machined.  It has) 72 269 B
-0.21 0.36 (the hole in it, but the hole is not yet countersunk.  Figure 1 \050page 17\051 shows a picture of the) 72 256 B
0.38 0.36 (part without the letter "D". The process plan is a plan for making the hole and the pocket,) 72 243 B
0.36 (but not the letter "D".) 72 230 S
0.23 0.36 (In actual use, the vws_cadm friendly front end would normally be used to run the module,) 72 204 B
-0.52 0.36 (rather than making a direct function call.  This is a great deal easier than trying to remember) 72 191 B
0.24 0.36 (what all those arguments mean and what the correct order is.  In the test run, it took about) 72 178 B
1.39 0.36 (30 seconds to answer vws_cadm\325s questions so that it could construct the function call.) 72 165 B
0.52 0.36 (Using vws_cadm has the added advantage that vws_cadm will print the description of the) 72 152 B
2.02 0.36 (finished workpiece to a file if the user wishes.  The direct function call results in the) 72 139 B
-0.54 0.36 (workpiece description being the value returned by LISP.  The last half of Table 1 is the final) 72 126 B
0.36 (workpiece description.) 72 113 S
FMENDPAGE
%%EndPage: "7" 14
%%Page: "8" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 8 -) 296 72 T
63 81 549 702 R
7 X
V
72 407 342 481 R
6 X
V
72 91 342 407 R
5 X
V
72 565 342 600 R
V
72 630 342 661 R
V
72 599 342 629 R
6 X
V
72 516 342 564 R
V
72 482 342 493 R
5 X
V
72 492 342 504 R
6 X
V
72 504 342 517 R
5 X
V
1 18 Q
0 X
(Table  1.  Data  Execution  Screen  Messages) 135.76 672 T
2 10 Q
(  \050pp_plist \050execute_plan \325datex_plan \325datex_part \325datxnc) 72 648.33 T
(               \325datex_plan_enhanced \325soft t \325vise \325top_of_part\051\051) 72 636.33 T
(  Starting design enhancement.) 72 615.33 T
(  Design enhancement completed successfully.) 72 603.33 T
(  Feature 1 hole is OK.) 72 591.33 T
(  Feature 2 pocket is OK.) 72 579.33 T
(  Feature 3 text is OK.) 72 567.33 T
(  Starting process plan enhancement, phase 1.) 72 555.33 T
(  Process plan enhancement, phase 1, completed successfully.) 72 543.33 T
(  Starting process plan enhancement, phase 2.) 72 531.33 T
(  Process plan enhancement, phase 2, completed successfully.) 72 519.33 T
(  Fixturing is OK.) 72 507.33 T
(  Step 1 initialize_plan is OK.) 72 495.33 T
(  Feature 1 hole is OK.) 72 483.33 T
(  Step 2 set0_corner is OK.) 72 471.33 T
(  Step 3 set0_z is OK.) 72 459.33 T
(  Step 5 mill_pocket is OK.) 72 447.33 T
(  Step 4 machine_chamfer_in is OK.) 72 435.33 T
(  Step 6 machine_countersink is OK.) 72 423.33 T
(  Step 7 close_plan is OK.) 72 411.33 T
(  \050workpiece) 72 390.33 T
(    features    \050features) 72 379.33 T
(            1           \0501) 72 368.33 T
(                 countersink_diameter 0.5) 72 357.33 T
(                 feature_type             hole) 72 346.33 T
(                 center_x                  1) 72 335.33 T
(                 center_y                  1) 72 324.33 T
(                 diameter                  0.316) 72 313.33 T
(                 depth                      0.6) 72 302.33 T
(                 bottom_type           conical\051) 72 291.33 T
(            2           \0502) 72 280.33 T
(                 chamfer_in_depth     0.06) 72 269.33 T
(                 feature_type            pocket_corners) 72 258.33 T
(                 upper_l_x               2) 72 247.33 T
(                 upper_l_y               2.5) 72 236.33 T
(                 lower_r_x              5) 72 225.33 T
(                 lower_r_y              0.5) 72 214.33 T
(                 depth                     0.3) 72 203.33 T
(                 corner_radius          0.4\051\051) 72 192.33 T
(     header      \050header) 72 181.33 T
(         workpiece_id    datex_part) 72 170.33 T
(         design_id   datex_design) 72 159.33 T
(         material    aluminum) 72 148.33 T
(         block_size  \050block_size) 72 137.33 T
(                  length      6.95) 72 126.33 T
(                  width       2.975) 72 115.33 T
(                  height      0.735\051) 72 104.33 T
(        description "data execution demo part"\051\051) 72 93.33 T
72 90 540 693 R
1 H
0 Z
N
72 662 540 662 2 L
0.5 H
2 Z
N
3 F
(INITIAL COMMAND FROM USER) 387 648 T
2 F
(ENHANCE THE DESIGN) 387 612 T
(VERIFY THE DESIGN) 387 578 T
(ENHANCE THE PROCESS PLAN) 387 538 T
(CHECK FIXTURING) 387 509 T
(VERIFY STEP 1 & INITIALIZE) 387 497 T
(VERIFY WORKPIECE) 387 484 T
(VERIFY & EXECUTE PLAN) 387 441 T
(PRINT OUT WORKPIECE) 387 262 T
354.46 616 351.5 616 2 L
0 Z
N
354.21 614.43 351.5 616 354.21 617.57 3 L
N
378 616 354.46 616 2 L
2 Z
N
354.46 582 351.5 582 2 L
0 Z
N
354.21 580.43 351.5 582 354.21 583.57 3 L
N
378 582 354.46 582 2 L
2 Z
N
354.46 541 351.5 541 2 L
0 Z
N
354.21 539.43 351.5 541 354.21 542.57 3 L
N
378 541 354.46 541 2 L
2 Z
N
354.46 513 351.5 513 2 L
0 Z
N
354.21 511.43 351.5 513 354.21 514.57 3 L
N
378 513 354.46 513 2 L
2 Z
N
354.46 501 351.5 501 2 L
0 Z
N
354.21 499.43 351.5 501 354.21 502.57 3 L
N
378 501 354.46 501 2 L
2 Z
N
354.46 488 351.5 488 2 L
0 Z
N
354.21 486.43 351.5 488 354.21 489.57 3 L
N
378 488 354.46 488 2 L
2 Z
N
354.46 446 351.5 446 2 L
0 Z
N
354.21 444.43 351.5 446 354.21 447.57 3 L
N
378 446 354.46 446 2 L
2 Z
N
354.46 267 351.5 267 2 L
0 Z
N
354.21 265.43 351.5 267 354.21 268.57 3 L
N
378 267 354.46 267 2 L
2 Z
N
354.46 653 351.5 653 2 L
0 Z
N
354.21 651.43 351.5 653 354.21 654.57 3 L
N
378 653 354.46 653 2 L
2 Z
N
FMENDPAGE
%%EndPage: "8" 15
%%Page: "9" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 9 -) 296 72 T
72 90 540 702 R
7 X
V
72 90 540 693 R
V
1 18 Q
0 X
(Table  2.  Process  Plan) 217.25 672 T
2 12 Q
(  This table shows the LISP-readable unenhanced process plan file for the example in) 72 656 T
(  Chapter II.) 72 642 T
(  \050setplist \325datex_plan \325\050) 72 619 T
(     header \050header) 72 605 T
(             plan_id      datex_plan) 72 591 T
(             design_id  datex_design) 72 577 T
(             material    aluminum\051) 72 563 T
(     steps  \050steps) 72 549 T
(             1   \0501   work_element       initialize_plan) 72 535 T
(                         prog_name          "data execution demo design"\051) 72 521 T
(             2   \0502   work_element      set0_corner) 72 507 T
(                         tool_type_id         probe_0.25) 72 493 T
(                         corner                   1) 72 479 T
(                         x_offset                0.0) 72 465 T
(                         y_offset                0.0) 72 451 T
(                         near_x                  16.825) 72 437 T
(                         near_y                  7.425) 72 423 T
(                         precedent_steps  \0501\051\051) 72 409 T
(             3   \0503   work_element      machine_chamfer_in) 72 395 T
(                         feature_id             2) 72 381 T
(                         tool_type_id         chamfer_0.375_3_abs) 72 367 T
(                         speed                    5103) 72 353 T
(                         precedent_steps  \0504 2\051\051) 72 339 T
(             4   \0504   work_element       mill_pocket) 72 325 T
(                         feature_id             2) 72 311 T
(                         tool_type_id         end_mill_0.625_2_ab) 72 297 T
(                         precedent_steps  \0505\051\051) 72 283 T
(             5   \0505   work_element      drill_hole) 72 269 T
(                         feature_id             1) 72 255 T
(                         tool_type_id         drill_0.316_2_abs) 72 241 T
(                         pass_depth          0.3) 72 227 T
(                         precedent_steps  \0502\051\051) 72 213 T
(             6   \0506   work_element      machine_countersink) 72 199 T
(                         feature_id             1) 72 185 T
(                         tool_type_id         countersink_0.75_1_ab) 72 171 T
(                         precedent_steps  \0503 2 4\051\051) 72 157 T
(             7   \0507   work_element      close_plan) 72 143 T
(                         precedent_steps  \0506 3\051\051\051) 72 129 T
(     tool_requirements \050probe_0.25   end_mill_0.625_2_ab  drill_0.316_2_abs) 72 115 T
(                                      chamfer_0.375_3_abs   countersink_0.75_1_ab\051\051\051) 72 101 T
72 90 540 693 R
1 H
0 Z
N
72 667 540 667 2 L
0.5 H
2 Z
N
FMENDPAGE
%%EndPage: "9" 16
%%Page: "10" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 10 -) 293 72 T
72 90 540 693 R
7 X
V
72 90 306 621 R
V
1 14 Q
0 X
(The Design) 155.36 597.67 T
2 12 Q
( \050setplist \325datex_design \325\050) 72 569 T
(  features    \050features) 72 556 T
(    1 \0501) 72 543 T
(            feature_type                   hole) 72 530 T
(            center_x                         1) 72 517 T
(            center_y                         1) 72 504 T
(            diameter                         0.316) 72 491 T
(            depth                              0.6) 72 478 T
(            bottom_type                  conical) 72 465 T
(            countersink_diameter   0.5\051) 72 452 T
(   2  \0502) 72 439 T
(            feature_type                  pocket_corners) 72 426 T
(            upper_l_x                      2) 72 413 T
(            upper_l_y                      2.5) 72 400 T
(            lower_r_x                      5) 72 387 T
(            lower_r_y                      0.5) 72 374 T
(            depth                             0.3) 72 361 T
(            corner_radius                0.4) 72 348 T
(            chamfer_in_depth         0.06\051) 72 335 T
(   3  \0503) 72 322 T
(            feature_type                  text) 72 309 T
(            text                                "d") 72 296 T
(            font                                broad) 72 283 T
(            lower_l_x                      3) 72 270 T
(            lower_l_y                      1) 72 257 T
(            height                            1) 72 244 T
(            depth                             0.02) 72 231 T
(            line_width                     0.1356466) 72 218 T
(            reference_feature         2\051\051) 72 205 T
(  header      \050header) 72 192 T
(    design_id     datex_design) 72 179 T
(    material       aluminum) 72 166 T
(    block_size  \050block_size) 72 153 T
(                             length      6.95) 72 140 T
(                             width       2.975) 72 127 T
(                             height      0.735\051) 72 114 T
(    description "data execution demo design"\051\051\051) 72 101 T
72 90 306 621 R
0.5 H
0 Z
N
306 90 540 621 R
7 X
V
1 14 Q
0 X
(The Workpiece) 376.92 597.67 T
2 12 Q
( \050setplist \325datex_part \325\050) 306 569 T
(  features    \050features) 306 555 T
(    1 \0501) 306 541 T
(             feature_type             hole) 306 527 T
(             center_x                   1) 306 513 T
(             center_y                   1) 306 499 T
(             diameter                   0.316) 306 485 T
(             depth                        0.6) 306 471 T
(             bottom_type            conical\051\051) 306 457 T
(  header      \050header) 306 443 T
(     workpiece_id  datex_part) 306 429 T
(     design_id        datex_design) 306 415 T
(     material          aluminum) 306 401 T
(     block_size      \050block_size) 306 387 T
(                                 length      6.95) 306 373 T
(                                 width       2.975) 306 359 T
(                                 height      0.735\051) 306 345 T
(     description "data execution demo part"\051\051\051) 306 331 T
306 90 540 621 R
N
72 621 540 657 R
7 X
V
0 X
(  This table shows the LISP-readable files which set up a design and a workpiece for) 72 640 T
(  the example used in Chapter II.) 72 626 T
72 621 540 657 R
N
1 18 Q
(Table  3.  Design and Workpiece) 181.24 669 T
72 90 540 693 R
1 H
N
FMENDPAGE
%%EndPage: "10" 17
%%Page: "11" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 11 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        2.  INITIALIZATION) 72 685 S
0.36 (        2.1.) 72 659 S
175.24 657.8 125.04 657.8 2 L
V
0.6 H
0 Z
N
0.36 (Overview) 125.04 659 S
0.36 (During initialization of the execution of a process plan:) 72 633 S
0.36 (A. The design is enhanced.) 90 620 S
0.36 (B. If the verification option is on, the design is verified.) 90 607 S
0.36 (C. The process plan is enhanced \050unless the input plan has been enhanced\051.) 90 594 S
0.36 (D. Step 1 of the plan \050initialize_plan\051 is carried out.) 90 581 S
1.04 0.36 (E. If the drawing option is on, the initial view of the workpiece is drawn, and, if the) 90 568 B
0.36 (verification option is also on, the workpiece is verified.) 108 555 S
0.36 (F. The workpiece model is set up.) 90 542 S
0.36 (G. The model of the fixturing, including obstacles, is set up.) 90 529 S
0.08 0.36 (H. If the NC-coding option is on, a working data base is set up and the first seven lines) 90 516 B
0.36 (of pseudocode are generated.) 108 503 S
0.66 0.36 (The verification operations carried out during initialization are quite extensive.  They are) 72 477 B
0.36 (described in Chapter IX of the verification paper [K&S2].) 72 464 S
0.31 0.36 (Design enhancement is also extensive.  It is described in Chapter II of the design protocol) 72 438 B
0.36 (paper [K&J2].) 72 425 S
0.36 (        2.2.) 72 399 S
217.41 397.8 125.04 397.8 2 L
V
N
0.36 (Workpiece Model) 125.04 399 S
-0.17 0.36 (Workpiece models are described in Chapter II, section 2.12, of [K&J2]. To make the initial) 72 373 B
0.09 0.36 (model of the workpiece, the module copies the property list of the workpiece named in the) 72 360 B
0.64 0.36 (function call.  If the workpiece is too tall, its height is changed to the height given in the) 72 347 B
0.61 0.36 (design.  If the workpiece has a "slab", the slab is removed.  These two things are done in) 72 334 B
0.36 (conjunction with adding steps to the process plan, as described next.) 72 321 S
-0.07 0.36 (When the module is used from vws_cadm, the user is asked to name a workpiece.  A check) 72 295 B
0.38 0.36 (is made of the property list of that name.  If the property list exists and is in good format,) 72 282 B
-0.57 0.36 (that model is used.  If there is no property list for the name, vws_cadm makes one, assuming) 72 269 B
0.36 (that the workpiece is a blank block the same size as the one specified in the design.) 72 256 S
0.36 (        2.3.) 72 230 S
262.99 228.8 125.04 228.8 2 L
V
N
0.36 (Process Plan Enhancement) 125.04 230 S
1.99 0.36 (Process plan enhancement takes place in two phases.  These are described in detail in) 72 204 B
1.72 0.36 (Chapter V of the process planning paper [KRA1].  In this section we will follow what) 72 191 B
-0 0.36 (happens to our example.  Table 2 and Table 4 show the "before and after" of enhancement.) 72 178 B
FMENDPAGE
%%EndPage: "11" 18
%%Page: "12" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 12 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
-0.59 0.36 (In phase 1 of enhancement, because the user has asked to have the top of the workpiece used) 72 685 B
-0.14 0.36 (for establishing z-zero, a new step, set0_z, is added as step 3.  Then the plan is renumbered) 72 672 B
0.04 0.36 (so that there are no duplicate numbers.  Precedent step numbers must be updated as part of) 72 659 B
1.32 0.36 (the renumbering.  In order that set0_z be carried out immediately after step 2 \050which is) 72 646 B
0.23 0.36 (set0_corner\051, the precedent step for step 3 is step 2, and any operation which has step 2 as) 72 633 B
0.36 (a precedent step has step 3 added to its list of precedent steps.) 72 620 S
-0.14 0.36 (If the workpiece in our example had no features and was too thick, a face milling operation) 72 594 B
2.53 0.36 (would have been added to bring the workpiece down to the proper thickness.  If the) 72 581 B
0.85 0.36 (workpiece had had the "slab" property \050see the design protocol paper [K&J2] Chapter II,) 72 568 B
-0.67 0.36 (section 2.12\051, a face milling operation to remove the slab and a set0_corner operation to find) 72 555 B
0.36 (the block below the slab would have been added.) 72 542 S
-0.41 0.36 (In phase 2 of enhancement, the module looks at the process plan and culls out any steps that) 72 516 B
0.53 0.36 (would make features or subfeatures which are already on the workpiece.  In our example,) 72 503 B
0.22 0.36 (step 5 of the process plan is a hole drilling operation to make feature 1.  Since feature 1 is) 72 490 B
0.06 0.36 (already in the part, step 5 is removed from the process plan.  After removal, any other step) 72 477 B
0.57 0.36 (which had the removed step as a precedent step \050step 4 in the example\051 has the precedent) 72 464 B
0.33 0.36 (steps for the removed step added to its list of precedent steps. Thus, step 2 is added to the) 72 451 B
0.18 0.36 (list of precedent steps of step 4 in our example.  Then the plan is renumbered so that there) 72 438 B
1.76 0.36 (are no gaps in the numbering.  Precedent step numbers must be updated as part of the) 72 425 B
0.36 (renumbering.) 72 412 S
-0.49 0.36 (Notice that the countersinking step is not culled out because the hole in the workpiece is not) 72 386 B
0.36 (yet countersunk.) 72 373 S
0.06 0.36 (Although only one step has been added and one deleted, the net effect on the step numbers) 72 347 B
0.04 0.36 (and the precedent steps is significant, as may be seen by comparing these items on Table 2) 72 334 B
0.36 (with the same items from Table 4.) 72 321 S
0.34 0.36 (Also in phase 2 of enhancement, the slot number of a changer slot on the milling machine) 72 295 B
0.01 0.36 (which has a tool of the tool_type_id given in each step is inserted in the step.  This is done) 72 282 B
-0.55 0.36 (by examining the data model of the tools currently on the milling machine.  If any necessary) 72 269 B
0.91 0.36 (tool is not on the machine, an error message is sent and the module quits work.  Also in) 72 256 B
0.1 0.36 (phase 2, any step which requires a stepover, speed, feed_rate or pass_depth, has values for) 72 243 B
1.07 0.36 (the appropriate parameters added.  If there are existing values, such as the speed for the) 72 230 B
0.36 (chamfering operation, these values are used.) 72 217 S
0.44 0.36 (Finally a new tool_requirements list is prepared from the enhanced steps. In our example,) 72 191 B
1.79 0.36 (since the hole drilling step has been deleted, the drill which appears in the list of tool) 72 178 B
0.36 (requirements for the unenhanced plan does not appear in the enhanced plan.) 72 165 S
FMENDPAGE
%%EndPage: "12" 19
%%Page: "13" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 13 -) 293 72 T
306 90 540 612 R
7 X
V
0 X
(    4   \0504) 306 590 T
(             work_element     machine_chamfer_in) 306 576 T
(             feature_id            2) 306 562 T
(             tool_type_id        chamfer_0.375_3_abs) 306 548 T
(             changer_slot       6) 306 534 T
(             speed                  5103) 306 520 T
(             feed_rate            28) 306 506 T
(             precedent_steps \0503 5 2\051\051) 306 492 T
(    5   \0505) 306 478 T
(             work_element     mill_pocket) 306 464 T
(             feature_id            2) 306 450 T
(             tool_type_id        end_mill_0.625_2_ab) 306 436 T
(             changer_slot       12) 306 422 T
(             stepover              0.3125) 306 408 T
(             speed                   2750) 306 394 T
(             feed_rate              17) 306 380 T
(             pass_depth          0.3125) 306 366 T
(             precedent_steps  \0503 2\051\051) 306 352 T
(   6   \0506) 306 338 T
(             work_element   machine_countersink) 306 324 T
(             feature_id         1) 306 310 T
(             tool_type_id     countersink_0.75_1_ab) 306 296 T
(             changer_slot    4) 306 282 T
(             stepover           0.375) 306 268 T
(             speed                2291) 306 254 T
(             feed_rate          5) 306 240 T
(             precedent_steps \0503 4 2 5\051\051) 306 226 T
(    7   \0507) 306 212 T
(             work_element      close_plan) 306 198 T
(             precedent_steps  \0506 4\051\051\051) 306 184 T
(   tool_requirements \050) 306 156 T
(           probe_0.25) 306 142 T
(           chamfer_0.375_3_abs) 306 128 T
(           end_mill_0.625_2_ab) 306 114 T
(           countersink_0.75_1_ab\051\051\051) 306 100 T
306 90 540 612 R
0.5 H
0 Z
N
72 90 306 612 R
7 X
V
0 X
(  \050setplist \325datex_plan \325\050) 72 590 T
(     header \050header) 72 576 T
(             plan_id        datex_plan) 72 562 T
(             design_id    datex_design) 72 548 T
(             material      aluminum\051) 72 534 T
(     steps  \050steps) 72 520 T
(         1   \0501) 72 506 T
(                  work_element    initialize_plan) 72 492 T
(                  prog_name) 72 478 T
(                     "data execution demo design"\051) 72 464 T
(         2   \0502) 72 450 T
(                  work_element       set0_corner) 72 436 T
(                  tool_type_id          probe_0.25) 72 422 T
(                  changer_slot         40) 72 408 T
(                  corner                    1) 72 394 T
(                  x_offset                 0.0) 72 380 T
(                  y_offset                 0.0) 72 366 T
(                  near_x                   16.825) 72 352 T
(                  near_y                   7.425) 72 338 T
(                  precedent_steps   \0501\051\051) 72 324 T
(          3   \0503) 72 310 T
(                  work_element       set0_z) 72 296 T
(                  tool_type_id          probe_0.25) 72 282 T
(                  changer_slot        40) 72 268 T
(                  x_loc                     20.3) 72 254 T
(                  y_loc                     8.9125) 72 240 T
(                  offset                    0.0) 72 226 T
(                  precedent_steps  \0502\051\051) 72 212 T
72 90 306 612 R
N
72 658 540 658 2 L
2 Z
N
1 18 Q
(TABLE 4.  Enhanced  Process  Plan) 167.99 668 T
2 12 Q
(  This table shows the LISP-readable enhanced process plan file for the example of) 72 640 T
(  Chapter II.) 72 627 T
72 90 540 693 R
1 H
0 Z
N
FMENDPAGE
%%EndPage: "13" 20
%%Page: "14" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 14 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        2.4.) 72 685 S
253.31 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Process Plan Sequencing) 125.04 685 S
1.99 0.36 (A list of step numbers giving the order in which the plan will actually be executed is) 72 659 B
-0.11 0.36 (constructed during initialization as follows.  This sequencing is done using a working copy) 72 646 B
0.36 (of the enhanced plan.) 72 633 S
0.36 (A.  It is assumed that step 1, initialize_plan, will be executed first.) 90 607 S
0.36 (B.  Step 1 is removed from the list of precedent steps of every step.) 90 594 S
0.36 0.36 (C.  All the steps which have no remaining precedent steps are found and ordered so as) 90 581 B
1.59 0.36 (to minimize tool changes.  This group of step numbers is added to the sequence) 108 568 B
-0.73 0.36 (number list, and the steps themselves are removed from the working copy of the plan.) 108 555 B
-0.37 0.36 (D.  The numbers found in C are removed from the precedent steps of the steps left in the) 90 542 B
0.36 (working copy of the plan.) 108 529 S
0.03 0.36 (Items C and D repeated until the group of steps found in C is empty.  If there are any steps) 72 503 B
1.6 0.36 (left in the working copy of the plan at this point, there must have been an error in the) 72 490 B
0.26 0.36 (assignment of precedent steps in the original process plan, so an error message is returned) 72 477 B
-0.49 0.36 (and the module stops work.  If the working copy is now empty, the sequence list is returned.) 72 464 B
-0.1 0.36 (This method of sequencing was chosen to ensure that precedent requirements are followed,) 72 438 B
-0.23 0.36 (to check the validity of the requirements, and to give an efficient sequence.  Alternatives to) 72 425 B
0.45 0.36 (steps C and D which result in even fewer tool changes are feasible but more complicated;) 72 412 B
0.36 (none has been tried.) 72 399 S
0.36 (As may be seen in Table 1 and Table 5, the order in our example is 1, 2, 3, 5, 4, 6, 7.) 72 373 S
0.36 (        2.5.) 72 347 S
246.99 345.8 125.04 345.8 2 L
V
N
0.36 (Data Base Initialization) 125.04 347 S
-0.03 0.36 (The VWS2 system includes a "world model".  This is a hierarchically arranged database of) 72 321 B
3.3 0.36 (information about the workstation.  When the Data Execution module starts up, the) 72 308 B
-0.24 0.36 ("fixturing" branch of the world model is reset by looking at the function call to see whether) 72 295 B
2.87 0.36 (the vise or the pallet area is being used, and extracting the correct description from) 72 282 B
0.17 0.36 (elsewhere in the world model.  If the vise is being used, the description of the obstacles in) 72 269 B
2 0.36 (the vicinity of the fixture is modified according to the size of the workpiece.  This is) 72 256 B
0.36 (described in detail in Chapter VI of the verification paper [K&S2].) 72 243 S
0.36 (Several large LISP property lists are set up under the following names:) 72 217 S
0.36 (A.  drawp - for use by the graphics system if the drawing option is on) 90 204 S
0.36 (B.  mockup - for use by execute_plan) 90 191 S
0.36 (C.  mtool - for use by the NC-coding system.) 90 178 S
0.36 (        3.  STEPPING THROUGH THE PROCESS PLAN) 72 152 S
0.36 (        3.1.) 72 126 S
188.69 124.8 125.04 124.8 2 L
V
N
0.36 (Introduction) 125.04 126 S
-0.03 0.36 (Once initialization is complete, the Data Execution module feeds the steps of the enhanced) 72 100 B
FMENDPAGE
%%EndPage: "14" 21
%%Page: "15" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 15 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
1.41 0.36 (process plan \050in the order specified in the sequence list\051 into the execute_step function,) 72 685 B
2.88 0.36 (which handles all but the init_plan and close_plan steps.  This section describes the) 72 672 B
0.36 (operation of the execute_step function on a single step.) 72 659 S
0.01 0.36 (First, if verification is on, the step is verified.  If verification fails while verification is "on) 72 633 B
2.29 0.36 (hard", or if verification fails while verification is "on soft" and the user elects not to) 72 620 B
0.36 (continue, the module quits.) 72 607 S
2.99 0.36 (Second, if the NC-coding option is on, an NC-coding function is called on to write) 72 581 B
0.36 (pseudocode.) 72 568 S
1.45 0.36 (Third, if the drawing option is on, and the step requires drawing, a drawing function is) 72 542 B
0.36 (called.) 72 529 S
-0.5 0.36 (Fourth, the workpiece model is updated.  If the update fails, an error message is sent and the) 72 503 B
1.43 0.36 (module quits.  Note that workpiece updating is the only thing that always happens.  Of) 72 490 B
0.05 0.36 (course, some steps have no effect on the model, but that is not determined by execute_step) 72 477 B
0.36 (itself.) 72 464 S
0.36 (        3.2.) 72 438 S
249.63 436.8 125.04 436.8 2 L
V
0.6 H
0 Z
N
0.36 (Function Call Assembly) 125.04 438 S
1.12 0.36 (A somewhat intricate method of constructing function calls is used for verification, NC-) 72 412 B
0.36 (coding and drawing.  Each function call is built from four parts.) 72 399 S
0.36 (The first part is the name of the function.  It is obtained from the "machine_ops" database.) 72 373 S
1.12 0.36 (The second part is the values of parameters present in the step.  The names of these are) 72 347 B
-0.81 0.36 (obtained from the "machine_ops" database, and then their values are extracted from the step.) 72 334 B
1.18 0.36 (The third part is the values of parameters present in the feature named in the step.  The) 72 308 B
1.49 0.36 (names of these are obtained from the "machine_ops" database and then their values are) 72 295 B
0.36 (extracted from the enhanced design.) 72 282 S
0.55 0.36 (The fourth part is the values of some local variables present in the execute_step function.) 72 256 B
0.34 0.36 (The names of these are obtained from the "machine_ops" database and then the names are) 72 243 B
-0.53 0.36 (simply evaluated to get the current local value.  The drawing system does not use this fourth) 72 230 B
-0.04 0.36 (part. The fourth part used by the drawing system is the number of the changer slot given in) 72 217 B
0.36 (the step.) 72 204 S
0.05 0.36 (To carry out a function, parts two, three, and four are joined together into a single list, and) 72 178 B
0.36 (the chosen function is applied to the list \050by the LISP "apply" function\051.) 72 165 S
0.54 0.36 (There are 19 machine operations that may be carried out by execute_step. Each one has a) 72 139 B
1.48 0.36 (verification function and an nc-coding function.  Most of them have drawing functions.) 72 126 B
0.95 0.36 (Thus, over 50 different functions for verification, NC-coding and drawing may be called) 72 113 B
0.36 (through this function call assembly process.) 72 100 S
FMENDPAGE
%%EndPage: "15" 22
%%Page: "16" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 16 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        4.  CLOSING) 72 685 S
0.36 (        4.1.) 72 659 S
188.69 657.8 125.04 657.8 2 L
V
0.6 H
0 Z
N
0.36 (Introduction) 125.04 659 S
-0.65 0.36 (Stepping through the process plan stops with the next-to-last step on the sequenced list.  The) 72 633 B
-0.07 0.36 (last step on the list must be close_plan or execution of the plan would have aborted earlier.) 72 620 B
-0.27 0.36 (If verification is on, this step is verified.  If drawing is on, the drawing is remasked.  If NC-) 72 607 B
0.48 0.36 (coding is on the last six lines of pseudocode are written, and the pseudocode is printed as) 72 594 B
0.15 0.36 (real code to a file.  The features on the part model, which may have been added in random) 72 581 B
0.87 0.36 (order, are sorted into numerical order.  The property list of "mockup" is wiped out.  The) 72 568 B
0.3 0.36 (drawing is not wiped out but is left on the screen for further use.  If drawing is on, a copy) 72 555 B
0.36 (of the pseudocode will be given to the drawing system.) 72 542 S
0.36 (        4.2.) 72 516 S
230.88 514.8 125.04 514.8 2 L
V
N
0.36 (Printing Pseudocode) 125.04 516 S
0.34 0.36 (If execution of the enhanced process plan has continued to completion and the NC-coding) 72 490 B
1.57 0.36 (option is on, pseudocode which was assembled while stepping through the plan will be) 72 477 B
0.27 0.36 (printed to the file named in the function call.  In our example the file is "datxnc".  A copy) 72 464 B
-0.25 0.36 (of the file is shown in Table 5.  Blocks of code in the table have been shaded and numbered) 72 451 B
0.78 0.36 (with the number of the step from the enhanced process plan which caused the code to be) 72 438 B
-0.11 0.36 (written.  Note that the order of the blocks of code is the order shown in Table 1, which was) 72 425 B
0.36 (established the by the module\325s plan sequencer.) 72 412 S
0.36 (        4.3.) 72 386 S
349.8 384.8 125.04 384.8 2 L
V
N
0.36 (Use of Graphics for Flashing and Tool Path) 125.04 386 S
0.89 0.36 (After the end of module execution, three graphics facilities may be used to help the user) 72 360 B
-0.8 0.36 (understand the machining process better: flash_step, flash_feature, and draw_tool_path.  All) 72 347 B
2.41 0.36 (three of these are available to the expert user from LISP, but only draw_tool_path is) 72 334 B
0.36 (available through vws_cadm.) 72 321 S
0 0.36 (The LISP command \050flash_step 5\051 will cause the part of the drawing that was generated by) 72 295 B
0.74 0.36 (execution of step 5 in the enhanced plan to flash off and on a few times.  Any other step) 72 282 B
-0.45 0.36 (number can be used in place of 5.  If nothing was drawn as a result of step 5, the system will) 72 269 B
0.36 (print a message that says as much.) 72 256 S
-0.27 0.36 (The LISP command \050flash_feature 2\051 will cause the drawing of feature 2 to flash off and on) 72 230 B
0.36 (a few times.  If feature 2 has not been drawn, the system will print a message that says so.) 72 217 S
-0.16 0.36 (The tool path drawer will draw a picture of the path of the center of the tip of the tool.  The) 72 191 B
0.52 0.36 (drawing is done from the pseudocode.  A full description of tool path drawing is given in) 72 178 B
0.47 0.36 (Chapter XII of the verification paper [K&S2].  Magnified examples of tool path drawings) 72 165 B
0.36 (\050top view only\051 are shown in Figure 8 \050page 53\051 and Figure 9 \050page 54\051.) 72 152 S
FMENDPAGE
%%EndPage: "16" 23
%%Page: "17" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 17 -) 293 72 T
63 81 549 702 R
7 X
V
72 90 540 693 R
V
1 18 Q
0 X
(Figure  1.  Data  Execution  Drawing) 165.26 681 T
%%BeginBinary:  43899    
746 673 470 423 0 70 225 BEGINBITMAPBWc
"J%
27O/9FFFDFDFj"
P!3F
8"<"
2030?"
488"<"
0040.
0108E0F20800F108B1F0E0F0F08,
210A08010908C841110908#8)
009048010108804011019%9$
FA4800F1F101F89"8"8%
0209411101007(9#
60210A4801091809088,
20F1B000F0E88040E8F0F07g


:#
03F8:#
0000
"Z#
27OMF93F
















































J"?"
O&FCF0;5;"?"
JC0187C401F8187C400F03F879FC7FFF87C01FFFC03807F87F81C01F00F00FFFC03C3FFCF9FC7FFF03807F8FC;58';"8"
BE7DCFEE7DF7CCFEDCEFCFF71CFEFFFF71E7DFFFE79CF3F71F7CE7DE7CE7CFFFE79E7CFEFFFFCFCF1FCDF<-8#9+8"8#:"
DE7DE7DEFECFEFCFFCFEF9C7EF9E7CCF9EF9EFEE7DCFECFE7CA7C7F9<&;#9#;%?":">"
FE3BE7FEFFFCC3CE7FFCEFFE7FC3FC9F<"8";$8"<$8$;#;":+8$
FFFCFCFCD3CF9CFCCFC7FC7FB7D3F984F83C01F878387FF88383EC3F<%=":"8$9%8"8#;"9,8$
BF97E7BCD97B79CFBC7BE1FE1F7973D9F0FE70F39F9FE79C7DFFFC7139C31F;&=":"8$9%8"9"@#8$8"8$
E03FCFE03CDC0343C07C03F0FF0F43DCF8F7CFCE3BF879E79F;&>"9"8$9%8"8$:"9%8#8"8"
E7BFCFE7BC6F7B7FC1FC7BFC3FC37F7BDC6FF9FCFCFE1FCF17FCE1<%=":"9":%:$;";';"
FFA7E7FCDE7FC87FFF1FF1FE01DEFFF19F9FC00F8F19="?#=#;#;$@"8$:#
73DF2FCC7C8FF8F9DF2FE7CFFFC7FE79=$;(:%8$;$:"@"
71E7FEFEFDDF8FFFEFDECE3EFDEFDFCDFCFDDF8FF9A3<(9"9";'=#;#:"8%8"
EEF9E7EE7EC7DF7DE7CF1E7DE7EE7EEDFCFDF0789EE7FF71FD<(8(;)="9":)8"8"
EDFCE7EF3DE01FFF3BDFCFFFF3BE8F3BF3DE7ECF9CF9CFF3FE34E31F8DF3CEF87B31;591
KC008F8400F83F03F03F03F878FE7FFF87C3FFFFC3F87C787F83C00C03C03FFFC3FC008F80FE7FFF0380FF9FF0C708FC3F838707FFC07F03F08C30F;Z:S"Q
KFCJ#
O-8004
J#
O-FFFCJ#
O.F87FJ#
O.FFFF
J">"
EFCFC;5;">"9"
;C01807F878FC7FFC00878401FFF807C01F00F03F819FC7FFF03807F8F8FC;5;"8";"
;E7DCF3F71CF8FFFDCECFCE7DFFFCF1E7DE7CFCFF7CCFEFFFFCFCF1FCDFFC=(;):"H"
F9EF9C78FFFFCFF9E7DCFEFCFEFEC7F9FF<"8"<"8$9#:">"
FCCC7FFCE7FCFFC3FC9F>"C&;":3
CF7FFCFCFFD3F984F83C01F878387FFF84F87F01F0FF06EC3F<&;":#9";"94
BCFBCFCD347BBE1FD9F0FE70F39F9FE79C7DFFFE70E79E79FCFE70C31F;$<$9$9"@#8$8*
E03C07C00E03E03F0FDCF8F7CFCE3BF8CFCE7DFCFCF9E79F;$<$9$:":"9%8&8"
E7BC1FCFCE7BE7BFC36FF9FCFCFE1FCF17FFFCFC3F<#8";":#8#;";'9$
FC8F947FFFF1F05EFFF19F9FC00F8FC00F0F="8"A"8$@"8$9'
C78CF8FCDF2FE7CFFFC7CFFFC3FCFE73=$A%8":"@";"8"
E3EFDDFDFCFCFE8FF9A3F107=%;"8$9";#:"8%8(
F1E7DDDC7EFDE7ED7CFDF0789EE7FF7178E7FEF9FCFCFF=$?*9":/8"
F8F3BDF3E7ECF9FCFF3CDFCFF3FE34E31F8DF3CEF8FFFE34F3CE7901;594
<C3F87C7878D87FFF03878400FFF80FC00C03F03F838FE7FFF0380FF9FF0C708FC3F838707FFF0C783E03F03E00C30F;Z:Y%
<FEFCFFFFJ#;#
L8007FDFE
J#;#
LFFFFFC01J#
O%FE03J#
O%FFFF
J"
KFC;5;"
A87C700F039FC781FFFC00878401FFF808787807878C03F03C01F81C01FFFF03807F8;5;"8"?"
ACFEE7CFCFCFEF7CFFFDCECFCE7DFFFCCEF71CF3CF3E79FCFE7DF7CE7DFFFFCFCF1FCDFFD<#8';(8#;"
ECFE7EEFEFFFFCFCEEF9CF9CE7E7CFDEFEF9@$;"9"8":%9">"?"
3EEFFFFFFCCFFEFFE7FFFC9FF9=&>#9":"=":0
7FFCFD3ECFC4EC9FFCF984F83C01F878387FF883F83C63C01F<#8"="8"8%8"8":"91
EE1F9EBF5CBC3FE79FBCBFF0FE70F39F9FE79C7DFFFC71F39E59F9FF<#8";&8,?#8$8%
EF0FCE00E03FFFE6C07C3FE43FCFE03CFFE03FF8F7CFCE3BF8F79E39="8";&8,:"9%8#8%
C3C6FCE7BFFFE4C1FC1FE7FFCFE7BCFFE7BFF9FCFCFE1FCF17FCFE1E7F="8$;):"8":";'9#
F1E6CF07FFFFE21CFCC8FC8FFCFFFFF19F9FC00F8FF19E="8$>&H"8$9"
F8F2CFCF3CFCCC7CC7E7CFFFC7E7<#8#>':"="@"
EDFCF8EFF33EFDCE3CE3FEF9A3;#:"<"9%:%9#:"8%8":"
C7DDE7EF7DCF1CF1EE7EE7EFFDF0789EE7FF71FDEF;$8#?&:#;":)8'
E01CF9FCF33F3BCF8CF8EF3DF3FE34E31F8DF3CEF87BE31E7FF8DF;/9291
F03C03F038FE783FFFF03878400F8787C07C43FF03C00F83C00FFFF0380FF9FF0C708FC3F838707FFC07F08C3FFC3F;Z:S"Q
BFCJ#
O$8004
J#
O$FFFCJ#
O%F87FJ#
O%FFFF
J"
O%8F;(848$C"
C03C3FFCF9FC7F8F8C01807F03C01F03F81FCFC00F03F879FC7FF03F0067;(848$D"
E79E7FFCFCFEFFCFDE7DCF3FCFE7DFCFF7CFCFDCEFCFF71CFEFFFCFE7CF7<&9#8":*:#B#
CE7FFA7C7EE7BE9FEFEFA7FCFFCFEF9C7EFCFEFE7F@";":"8";#J"
3E7FFFFFCC3E4E7>#C$9#<#:(8#
FB7DCFFFB7CFCD7FF9E0FB0FFFFC07E0007F<&9&8"9";":$:,
9E7FF73D9EF37E7BCFBFBF739EFE1FF0DC70C7FFF9E7DC7E7FE7FF;#9";'?":#;$8%
E43ECE03C07FCFE03FCEFF0FBE39E7F7BE3C0F;#8#;'9";";#:"9&
E7FEBDC67BC1FFCFE7BF7BC6C3F93FF8FF3F3E7F>$9%9"8#;";#>#
E01DE6F9FE7FC8FFFE01E6F1FFFC3F>$9"8#<";";"?#
EF9DF2F8CC7FF9F2F8FF0F?#<#:$9$:$?"
DDF8CE3FEFFEFDEFDDF8FDFCF9C7=$:&:$9">":#8%8"
7EDFCDFDFE7ECF1FE7EDFCE7F01F79FBE71F7EBF@"=":#:$:#;#8(
FC8FF3DDF3BDFCFCF98EF9F9E78EFE7FE37F;(938%:,
C3FC008F80FE7FFC0087C703C3FF03F838F8703F03F878FE7FF03C03F9C1F0C3FFF80FC1FC3FF0FF;R8Z8%:U
3FFFFFFFF





J"
MCF;083;"
808007F03C00F039FC781FFF9FC78181F87807C01FFFC00F87FFFC01F03C3FC01F8F;083;$
CCECF3FCFDCEFCFCFEF7CFFFCFEF7C7CF71CF1E7DFFFDCEF71FFFE7DFCFE7FE7DFCFFFFD=%8.9$
F9FCFFCF7EEFEFFFC7EEFEFFFEFEEF9CF9FCFEF9C(8'9"8":"="
3EEFFFFFC3EEFFFFEFCCFCE7FFFC7FFFF9;"<$8#8$<"?"9*
C4FD3ECFD3ECFCFFCFFC9FF84F83C018386C3F03<#;"9"?"<":#9*
5CFB9ED9BF7BBF0FE70F39F9FC7DC31E71;$;"9">#<"9#:*
E65C07CEDCE03F03E03FEF8F79F9FE3BE79EF9;$;":"=#<"9$9*
E45C1FC66CE7BF7BE7BF9FCFCFE1F9FF17E79CFF;$;&8#;"<":#;"8"
E21C8FE6CF07FFDEC00CFF7FFFFF198F<#;'J#8"
3CC7F2CFCFFFDF2C:CE79C7;$;#9(;#>">"9"
F33CE3F8EF8EFFFFFEFFEFDCFEFD9FA3F9="<":"8'9";%9#8#8#
F1E77E7EE7DCFDE7EF7D7EE7EF0FC78EEF717DF0=";#9):#B*
F8FCF3CF3DFFFF3DF3BCF3FF3BE34E31F8DEF8E79E79</849+
387C703F03F038FE783FFF8FE78383F8780FC00FFFF03F87FFFC3FF03C00C00F9FF0C708FC3870430F03F9;Z8Z9U
/3


"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555410514105141450414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAA28A0A2820A2820A2828A0828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A0AAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"zY"z#
226AAEAO(AAA93F5D5
72555410514105141450414504145051450514105141451O+D4504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141555555593F"z?":"z#
226AA9FEAO(AAA93F"z#B"z#
25655FFFBD5O(55593F5?":5
722AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAFFO+EAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5B5
92555455555551555555455555551555155555545555555FFF3O+D5155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAFF803F07107FFF0F8E1FF0F008FFEAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z0z#
25655FFF3FEE38E3FFF9FDF9FCF399DFFD5O(55593F"z8+8"z#
226AAFDF19F1FFFCFBF9F9F99EAO(AAA93F"z8%>"z#
25655F9F99F9FD5O(55593F5=5
722AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAO2E77F9F801C8BFFEAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5@5
72555455555551555555455555551555155555545555555O/9FFC4BFFD5155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5=#;5
722AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAF2FFO+EAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F58%:5
72555455555551555555455555551555155555545555555D8FB9FBFO/CFFE67FFD5155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z)8#8"z#
226AAFFF1BC778F7FFFF9E79EEAO(AAA93F"z'8%8"z#
25655FFF87E0F80FFFE07F07ED5O(55593F58R5
<22AAA28A0A2820A2820A2828A0828A0828A0A28A0A2820FFFFFFFF9FO+E828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A0AAAAAAA93F5D5
72555455555551555555455555551555155555545555555O+D5155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5D5
722AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAO+EAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5D5
72555455555551555555455555551555155555545555555O+D5155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5:"?5
722AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAA0FO+EAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z:"?"z#
25655FFD5O(55593F"zD"z#
226AAEAO(AAA93F"zD"z#
25655D5O(55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555410514101141450414504141051050514105141451014504145051450114105141451414104145041450514105141441414504145051440514105141451414504145051410514104141451414504144051450514105140555555593F&j5
22AAAAAAC0O%F02AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
2555455500O%F005555555155555555554555555515555554555555515555554555555515555554555555593F&J"z)
22AAAAAA80O%02=AAABAAAAAAAAAAA93F&Z"z)
255555550FO%E1=55575555555555593F&J"z)
22AAAAAA8FO%E2=AAAEAAAAAAAAAAA93F&J"z)
255555550FO%E1=555D5555555555593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAABA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555555515555554555555515755554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAEA2AAAAAAAAAA93F&Z"z)
255555550FO%E1=55D55555555555593F&J"z*
22AAAAAA8FO%E2<AAABAAAAAAAAAAAAA93F&J"z*
255555550FO%E1<5557555555555555593F&J"z*
22AAAAAA8FO%E2<AAAEAAAAAAAAAAAAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE0555555515555555555455555551555555455555551555555455555551D555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAABAAA2AAAAAAAAAA93F5
P"255541050E3831E3470E3C78E1C38F1878F1E38F1E1C71A3C70E3C78F1C78B1E30F1E3C71E3C38E3478E1C78F1E38F163C61E3C78E3C7871C00514105141451414504145051410514104141451414504144051450574105140555555593F&Z"z*
22AAAAAA8FO%E2<AAEAAAAAAAAAAAAAA93F&J"z*
255555550FO%E1<55D5555555555555593F&J"z"r#
22AAAAAA8FO%E2;AAABAAA93F&J"z"r#
255555550FO%E1;555755593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAEAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555555515555554555555D15555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8ABAAAAA2AAAAAAAAAA93F&Z"z"r#
255555550FO%E1;557555593F&J"z"r#
22AAAAAA8FO%E2;AAEAAAA93F&F"j"F"z"r#
255555550FF8107E1;55D555593F5G5
622AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFF80O)003FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8BAAAAAA2AAAAAAAAAA93F&E#Z#E5
255545550FFC031F80FFE05555555155555555554555555515555554555555515555554555575515555554555555593F&E#G#E5
22AAAAAA8FF83DFF83FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8EAAAAAA2AAAAAAAAAA93F&E$j#E5
255545550FF0CFE00FF60FE055555551555555555545555555155555545555555155555545555D5515555554555555593F5F5
722AAA28A0E3871E3C70E3C78E1C78F1C78F1E38F013000O)01900F1C78F1E38F1E3C71E3C78E3C78F1C28A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0B28A0A28A0A0AAAAAAA93F&Z#G$Y"z"s#
255555550F/0FC0007E3FE1:557555593F&D$Z$D"z"s#
22AAAAAA8FFE1E071F8091FE2:AAEAAAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEC3C1FFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF0686FFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555554555555515555554555D55515555554555555593F&D$H#D5
22AAAAAA8FE8705F4142FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAB8AAAAAAA2AAAAAAAAAA93F&D$H#D5
255545550FE0E3DF70E2FE05555555155555555554555555515555554555555515555554557555515555554555555593F&Y#Z#Y"z"t#
22AAAAAA8FE1C33F871E29AAAEAAA93F&D#I#D"z"t#
255555550FE287FC29E19555D55593F&D#I#D"z"t#
22AAAAAA8FC50FFE18E29AABAAAA93F&D#I$C"z"t#
255555550FCE1FFF1C7FE19557555593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FF8A7FDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7F8A3FFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAEA8AAAAAAA2AAAAAAAAAA93F&D#J"D5
255545550F14FF4C6FE055555551555555555545555555155555545555555155555545D5555515555554555555593F&D"J"D5
22AAAAAA8F185C7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAABAA8AAAAAAA2AAAAAAAAAA93F&Y"Z#X"z"u#
255555550F385E33FE18555755593F&C#J"C"z"u#
22AAAAAA8FFE3169FE28AAAEAAA93F5
P"255541050E3871E3C70E3C78E1C78F1C78F1E2511E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C7828C78F1E38F1E3C71E3C78E3C78F1C10514105141451414504145051450514105141451414504145851450514105141555555593F&X#Z#X"z"u#
22AAAAAA8FFE535F18FE28AABAAAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FE63FFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FF9CFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555554555555515555556555555515555554555555593F&C#J"D5
22AAAAAA8FFC675F8FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAEAAA8AAAAAAA2AAAAAAAAAA93F&D"J"D5
255545550FA75FCFE0555555515555555555455555551555555455555551555555C555555515555554555555593F&X#Z8X"z"v#
22AAAAAA8FFCE75E27AAABAAA93F&J"C"z"v#
255555550FEC7E17555755593F&J"C"z"v#
22AAAAAA8FEA7E27AAAEAAA93F&D"J"C"z"v#
255555550FC76E7E17555D55593F39585
22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2BAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555555515555754555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2EAAAAA8AAAAAAA2AAAAAAAAAA93F&X9Z8X"z"v#
255555550F4E1755D555593F&J"z"w#
22AAAAAA8FO%E26AAABAAA93F&J"z"w#
255555550FO%E16555755593F5
P"22AAA28A0E3871E3C70E3C78E1C78F1C78F1E0C71E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78CA478F1E38F1E3C71E3C78E3C78F1C28A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828E2828A0828A0A28A0A0AAAAAAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FCC7FFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFCE7FDFFFBFFF7FFEFFFDFFFBFFF7FE0555555515555555555455555551555555455555551555D554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAB2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555555515575554555555515555554555555593F&X9Z8X"z"w#
22AAAAAA8F4E26AAEAAAA93F&J"z"w#
255555550FO%E1655D555593F&J"z"x#
22AAAAAA8FO%E25AAABAAA93F39585
255545550FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555554555555515755554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAEA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555555515D55554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAABAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&X9Z8X"z"x#
255555550F4E15557555593F&J"z"x#
22AAAAAA8FO%E25AAEAAAA93F&J"z"x#
255555550FO%E1555D555593F39585
22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAABAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"255541050E3831E3470E3C78E1C38F1878F1E0C71E1C71A3C70E3C78F1C78B1E30F1E3C71E3C38E3478CA478F1E38F163C61E3C78E3C7871C00514105141451414504145051410514104141451474504144051450514105140555555593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FCC7FFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFCE7FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAEAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&X9Z8X"z"y#
255555550F4E14555D55593F&J"z"y#
22AAAAAA8FO%E24AABAAAA93F&J"z"y#
255555550FO%E14557555593F&J"z"y#
22AAAAAA8FO%E24AAEAAAA93F39585
255545550FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555554555555D15555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8ABAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554555557515555554555555515555554555555593F&X9Z8X"z"z#
22AAAAAA8F4E23AAAE/AAA93F&J"z"z#
255555550FO%E13555D/55593F&J"z"z#
22AAAAAA8FO%E23AABA/AAA93F&J"z"z#
255555550FO%E135575/55593F39585
22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8EAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE055555551555555555545555555155555545555D5515555554555555515555554555555593F5
P"22AAA28A0E3831E3470E3C78E1C38F1878F1E0C71E1C71A3C70E3C78F1C78B1E30F1E3C71E3C38E3478CA478F1E38F163C61E3C78E3C7871C28A0828A0A2820A2028A2828A0828A0228A0A2B20A282822828A0828A0A2820A0AAAAAAA93F&X#Z#X"z"z#
255555550FFCC75FCE7E125557055593F&J"z"z#
22AAAAAA8FO%E22AAAE0AAA93F&J"z"z#
255555550FO%E12555D055593F&J"z"z#
22AAAAAA8FO%E22AABA0AAA93F39585
255545550FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555554557555515555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAE8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE0555555515555555555455555551555555455D555515555554555555515555554555555593F&X9Z8X"z"z#
22AAAAAA8F4E21AAAB1AAA93F&J"z"z#
255555550FO%E115557155593F&J"z"z#
22AAAAAA8FO%E21AAAE1AAA93F&J"z"z#
255555550FO%E11555D155593F39585
22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAABAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554555555515555554755555515555554555555515555554555555593F&<#J5
22AAAAAA8F8007KFE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAEAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"255541050E3871E3C70E3C0001C78F1C78F1E0C71E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78CA478F1E38F1E3C71E3C78E3C78F1C10514105141451414504145051450514105941451414504145051450514105141555555593F&P$P#Z#X"z"z#
22AAAAAA8FFC1FE0FCC75FCE7E20AAAB2AAA93F&;%J"z"z#
255555550FF07FF87FJE105557255593F39585
22AAAAAA8FFFBFFF7FFEE1FDFE1BFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAEAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&;%J5
255545550FC7FFFF8BJFE0555555515555555555455555551555555C555555515555554555555515555554555555593F&;%J5
22AAAAAA8F87F07F83JFE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2ABAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&;%J5
255545550F9FC00FE3JFE05555555155555555554555555515555574555555515555554555555515555554555555593F&P$8$9Z8X"z"z#
22AAAAAA8F1F0307FFFFFF4E20AAEA2AAA93F&;%J"z"z#
255555550F3E1FE3D3JE1055D5255593F&:&J"z"z#
22AAAAAA8FFE3C3FF1F1JE2/AAAB3AAA93F.8$9585
255545550FFFBFFF7FFE7C7DF8FBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515555754555555515555554555555515555554555555593F&;%J5
22AAAAAA8F78FDFCB9JFE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2EAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&:"9"J5
255545550FFC79JFE05555555155555555554555555515555D54555555515555554555555515555554555555593F&;$J5
22AAAAAA8F79FDFEKFE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAA3AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F*8"9$9Z8X"z"z#
255555550FFFFFFFFFFFFFFFFF4E1/5575355593F5
P"22AAA28A0E3871E3C70CB878E0498F1C78F1E0C71E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78CA478F1E38F1E3C71E3C78E3C78F1C28A0A28A0A2820A2828A2828A0828A0E28A0A2820A2828A2828A0828A0A28A0A0AAAAAAA93F5Z#X"z"z#
4255555550FFFFFFFFFFC79FFFE79FFFFFFFFFCC75FCE7E1/55D5355593F.8$9585
22AAAAAA8FFFBFFF7FFC78FDFCFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAB2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&:"J5
255545550FFEO FE05555555155555555554555555515575554555555515555554555555515555554555555593F&;%J5
22AAAAAA8F7CFDF8E9JFE2AAA8AAAAAAA2AAA2AAAAAA8AAAAAAE2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F39Z8X"y"z#
255555550FFFFFFFFFFE5C7FF8F1FFFFFFFF4E1555D455593F&;%J"y"z#
22AAAAAA8F3E3FF1F3JE2AABA4AAA93F&:&;"J"y"z#
255555550FFF1F0FC2E3E7DE15575455593F&<$J"C"y"z#
22AAAAAA8F8005E7<CFE2AAEA4AAA93F39585
255545550FFFBFFF7FFE8FE01F43FFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FO%FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555555515D55554555555515555554555555515555554555555593F&;%J5
22AAAAAA8FC5DFFE8BJFE2AAA8AAAAAAA2AAA2AAAAAA8AAAABAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&;%;"J"D5
255545550FE2FDFD1B675F8FE05555555155555555554555555517555554555555515555554555555515555554555555593F&P+Z#X"x"z#
22AAAAAA8FF1FFFE3FFFFFFFFFFE635F94FE2AAAE5AAA93F&;%J"D"x"z#
255555550FF83FF07F;F1E1555D555593F&;%;"J"C"x"z#
22AAAAAA8FFC0F80FF7368FE2AABA5AAA93F5
P"255541050E3871E3C70E3C0001C78F1C78F1E2331E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C7839C78F1E38F1E3C71E3C78E3C78F1C10514105141451414504145051470514105141451414504145051450514105141555555593F5
P"22AAAAAA8FFFBFFF7FFEFFE01FFBFFFBFFF7FF29FFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE31FFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAA8AAAEAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&<#<"J"D5
255545550FFDFF285E5FE05555555155555555554555555595555554555555515555554555555515555554555555593F&D"J#C5
22AAAAAA8F145C73FFE2AAA8AAAAAAA2AAA2AAAAAA8AABAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&Y#Z#X"w"z#
255555550F8C7F48A7FE15557655593F&D#J"D"w"z#
22AAAAAA8FCA3F48CE2AAAE6AAA93F&D#J"D"w"z#
255555550FC61F418E1555D655593F&D#I$C"w"z#
22AAAAAA8FC50FFE18FFE2AABA6AAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFE287DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7C28FFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555557515555554555555515555554555555515555554555555593F&D#I#D5
22AAAAAA8FE1437052FE2AAA8AAAAAAA2AAA2AAAAAA8AEAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&D#I#D5
255545550FE8B061A2FE0555555515555555555455555D515555554555555515555554555555515555554555555593F&Y$Z#Y"v"z#
22AAAAAA8FFC683F282C7E2AAAB7AAA93F&D$H#D"v"z#
255555550FFE1C0F051FE15557755593F&D$G$D"v"z#
22AAAAAA8FFF0B00E03E3FE2AAAE7AAA93F5j5
6255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEF87E02O(D87EFFFDFFFBFFF7FFEFFFDFFFBFFF7FE055555551555555555545555D5515555554555555515555554555555515555554555555593F5G5
622AAA28A0E3831E3470E3C78E1C38F1878F1E38F009EO)0F208E1C78F1E38F163C61E3C78E3C7871C28A0828A0A2820A2028A282BA0828A0228A0A2820A282822828A0828A0A2820A0AAAAAAA93F5Z5
6255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFF07D1O)F7C1FEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554555755515555554555555515555554555555515555554555555593F&E#G#E5
22AAAAAA8FFC07FC0FFE2AAA8AAAAAAA2AAA2AAAAAACAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&Z"j"Z"v"z#
255555550F08021F/E155D5755593F&F"H"E"u"z#
22AAAAAA8FC0FFE2AAAB8AAA93F&FZF"u"z#
255555550F3E15557855593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2AAAAAE8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE0555555515555555555455D555515555554555555515555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAABA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555554575555515555554555555515555554555555515555554555555593F&Z"u"z#
22AAAAAA8FO%E2AAEA8AAA93F&J"u"z#
255555550FO%E155D5855593F&J"t"z#
22AAAAAA8FO%E2AAAB9AAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555554755555515555554555555515555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AAAEAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"255541050E3831E3470E3C78E1C38F1878F1E38F1E1C71A3C70E3C78F1C78B1E30F1E3C71E3C38E3478E1C78F1E38F163C61E3C78E3C7871C00514105141451414505945051410514104141451414504144051450514105140555555593F&Z"t"z#
22AAAAAA8FO%E2AABA9AAA93F&J"t"z#
255555550FO%E15575955593F&J"t"z#
22AAAAAA8FO%E2AAEA9AAA93F&J"t"z#
255555550FO%E155D5955593F5
P"22AAAAAA8FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA2ABAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&J5
255545550FO%FE05555555155555555574555555515555554555555515555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA2AEAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F&Z"s"z#
255555550FO%E1555D:55593F&J"s"z#
22AAAAAA8FO%E2AABA:AAA93F&J"s"z#
255555550FO%E15575:55593F&J"s"z#
22AAAAAA8FO%E2AAEA:AAA93F5
P"255545550FFFBFFF7FFEFFFDFFFBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555555D54555555515555554555555515555554555555515555554555555593F&J5
22AAAAAA8FO%FE2AAA8AAAAAAA2AAA3AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F%j5
25554555O'E5555555155555557554555555515555554555555515555554555555515555554555555593F%J5
22AAA28AO&F028A0A28A0A2820A2C28A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A0AAAAAAA93F&J"z#
2555555540O%05C55593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"S5
27OG5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F>5
OHFEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F>5
OHFF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F>"z#
FEOEAAA93F75
P!FCFE3FFFFE3F3FFF0414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141451414504145051450514105141555555593F7)z#
F9FC1FFFFC1F9FFEOEAAA93F75
P!F1FB9FFFFB9F8FFF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F7$85
F3FBCFOJCFCFFEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F7#85
E3F3OKF3CFC7FF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F7";5
E7OIE7FEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F>"z#
FFOE55593F>"z#
FEOEAAA93F>"z#
FFOE55593F>5
OHFEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F7";5
E3OIC7FF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F7$85
F3F3DFOJDFCFFEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F7)z#
F1F9DFCFF9DF8FFFOE55593F7)z#
F9F83F87F83F9FFEOEAAA93F7)z#
FCFC7F87FC7F3FFFOE55593F75
P!FFFFFFE7FFFFFFFE0A2828A0828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A2820A2828A2828A0828A0A28A0A0AAAAAAA93F>5
OHFF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F:"95
CFOHFEAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F:"95
9FOHFF5455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555410514101141450414504141051050514105141451014504145051450114105141451414104145041450514105141441414504145051440514105141451414504145051410514104141451414504144051450514105140555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F%j*j(
22AAA28AO&028A0828A0A2820A30620A0AAAAAAA93F%J*J(
25554555O&00555555515555556065554555555593F&;"8"J"r";"8"C(
22AAAAAA800480J02AAA00240AAAAAAAAAAA93F5Z#X"r+T,
4255555550FFFFFFFFFFE0FFFFF83FFFFFFFFFE075FC0FE15563FFFFFC0FFF87FFFFE081FFFFF85555555555593F&:#8":"J"C"r"8"8"8"?"9(
22AAAAAA8FFF0787FF71FE2AAA3FEC3C183AAAAAAAAAAA93F585
O6255545550FFFBFFF7FFE83FDFF0BFFFBFFF7FF87FFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFC3FFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555563FFEFFF881FF7F82FFFDFFFBFFF7FFEFFF87FFBFF85554555555593F&;$<"J"C*9$8"?"9(
22AAAAAA8FC1FDFEC767FE2AAA8AAAAAAA2AAA38FFFA0068F2AAAAAAAAAA93F&;"8"J*;"8"C(
255545550FE11BJE05555555155555563B00E5554555555593F&P)9Z8X"r$9%S9*
22AAAAAA8FF1FFFE3FFFFFFFFF4E2AAA3FFFFF8FFFF1FFFF8AAAAAAAAAAA93F&J"r"J(
255555550FO%E1556365555555555593F&J"r"J(
22AAAAAA8FO%E2AAA36AAAAAAAAAAA93F&J"r"J(
255555550FO%E1556365555555555593F395859-9*
22AAAAAA8FFFBFFF7FFEF1FDFE3BFFFBFFF74DFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7F8FDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA3FFEFB8FF7F1EFFFDFFFBFFF7FFEFBFF82AAAAAAAAAA93F&J*J(
255545550FO%E0555555515555556365554555555593F&J*J(
22AAAAAA8FO%E2AAA8AAAAAAA2AAA362AAAAAAAAAA93F5
P"255541050E3871E3C70E3078E0078F1C78F1E3871E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78C1C78F1E38F1E3C71E3C78E3C78F1C1051410514145142078E3C78F1C78F1E30F1E3C71E3C78E3C78F1878F1E385141555555593F&P%P"Z#X"r+T,
22AAAAAA8FF1FFFE3FC75FC7FE2AAA3FFFFFF8FFFF8FFFF1F8FFFFFF8AAAAAAAAAAA93F&J"r"J(
255555550FO%E1556365555555555593F&D"jD"r"9"i"9(
22AAAAAA8FC06E2AAA3800FAAAAAAAAAAA93F3J5H*
255545550FFFBFFF7FFEF1FDFE3BFFFBFFF798FDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555563FFEFBFF85554555555593F&D"J"C*9"D"9(
22AAAAAA8FE06FFE2AAA8AAAAAAA2AAA3C01F2AAAAAAAAAA93F&D5D*919(
255545550F7EFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEE05555555155555563DFFFB8FF7F1EFFFDFFFBFFF7FFEFFFDF5554555555593F&P%Z"r"P%W)
22AAAAAA8FF1FFFE3FJE2AAA3F8FFFF1FF8AAAAAAAAAAA93F&J"r"J(
255555550FO%E1556365555555555593F&J"r"J(
22AAAAAA8FO%E2AAA36AAAAAAAAAAA93F&J"r"J(
255555550FO%E1556365555555555593F5
P"22AAAAAA8FFFBFFF7FFEF1FDFE3BFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE2AAA8AAAAAAA2AAA3FFEFFFDFFFB8FF7F1EFFFDFFFBFFF7FFEFFFDFFFBFF82AAAAAAAAAA93F&J*J(
255545550FO%E0555555515555556365554555555593F&J*J(
22AAAAAA8FO%E2AAA8AAAAAAA2AAA362AAAAAAAAAA93F&P%Z"r"P%W)
255555550FF1FFFE3FJE15563F8FFFF1FF85555555555593F5
P"22AAA28A0E3871E3C70E3078E0078F1C78F1E38F1E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78F1C78F1E38F1E3C71E3C78E3C78F1C28A0A28A0A2820A2078E3C78F1C78F1E30F1E3C71E3C78E3C78F1C78F1E38A0A0AAAAAAA93F&P%Z"r"P%W)
255555550FF0FFFC3FJE15563F87FFE1FF85555555555593F&;%J"r";%C(
22AAAAAA8FF87FF07FJE2AAA3FC1FFC3FAAAAAAAAAAA93F5
P"255545550FFFBFFF7FFEFC1DE0FBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555563FFEFFFDFFFBE0F707EFFFDFFFBFFF7FFEFFFDFFFBFF85554555555593F&;$J*;%C(
22AAAAAA8FFF0D83KE2AAA8AAAAAAA2AAA3BF8361FE2AAAAAAAAAA93F&<#J*<#D(
255545550F800FKE05555555155555563E0035554555555593F&Q#Z"r"Q#X)
22AAAAAA8FE01FKE2AAA3F00FF8AAAAAAAAAAA93F&<#J"r"<#D(
255555550FF07FKE15563FC1F5555555555593F&<#J"r"<#D(
22AAAAAA8FFDFFKE2AAA3FF7FAAAAAAAAAAA93F+9585
255545550FFFBFFF7FFEO,FBFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FFEFFFDFFFBFFF7FE05555555155555563FFEFFFDFFFBF5FEFFFDFFFBFFF7FFEFFFDFFFBFF85554555555593F&J*J(
22AAAAAA8FO%E2AAA8AAAAAAA2AAA362AAAAAAAAAA93F&J*J(
255545550FO%E0555555515555556365554555555593F&J*J(
22AAAAAA8FO%E2AAA8AAAAAAA2AAA362AAAAAAAAAA93F&Z"r"Z)
255555550FO%E155635F85555555555593F&j"r"j(
22AAAAAA80O%02AAA06AAAAAAAAAAA93F&J*J(
2555410500O%01051410514145142065141555555593F&J*J(
22AAAAAA80O%02AAA8AAAAAAA2AAA062AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z"Z"z"Z"s#
25455571D5;5557/F555593F"z"Gz"E"s#
224AAAF<AAABFAAAA93F"z"G"z"E"s#
2545557D5;5557F555593F5E5:#?,
822AAA28A0A2820A2020A2828A0828A0828A0A28A0A0FFFE3=A2028A0828A0A28A022820A2828A282820828A0828A0A2820A2028A283FE7FF28A0A2820A0AAAAAAA93F5?";58$;":,
825554555555515555554555555515551555555455557FFD9FC=D555545555555155555545555555155555545555555155555555554557FE7FFCE7F55515555554555555593F5="?5:"@,
622AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8FDF=AA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAABFEFAAAAAAA2AAAAAAAAAA93F"z$?";"z"8#<":"s#
2545557FF9FFFD5;5557FFFFFFF555593F"z"="?z"E"s#
224AAAF9F<AAABFAAAA93F"z"81z2s#
2545557C63F83EC3C01FFF87C70FF878047FFD5;5557FF80F87FC27C3FFFC3E387FC3C023FF555593F"z"80z2s#
224AAAFE59F71C31F9FFFFCFEFCFE79CCEFFF<AAABFF3CFE7F3873CFFFE7F7E7F3CE677FFAAAA93F58&958*8,
=25554555555515555554555555515551555555455557FF03E39EF8E79FFE7DFCFCFC?D555545555555155555545555555155555545555555155555555554557FF3E7C67E7FFF3EFE7E7E6F55515555554555555593F5B5@,
;22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8FFF9FE7FCFCBAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAABFF1FFE7E7EFAAAAAAA2AAAAAAAAAA93F5?#8595
625554555555515555554555555515551555555455557FF3BC00E45FFFD555545555555155555545555555155555545555555155555555554557FF8756007FFF9DFE7E00722FFF55515555554555555593F"z"C#8z$9#:&s#
224AAAFFFE2<AAABFFE167FFE7FF12FFFAAAA93F"z"@"<"z$<#;"s#
254555797D5;5557FFF8FCBFF555593F"z":"8":&z$8#;&s#
224AAAF7D9EFE7FF33FFF<AAABFF7C3C73F3FF99FFFAAAA93F"z"9#8"8%9"z/8"s#
2545557FE3B8DCFFCFF3CD5;5557FF3CFE7F1A79E7FFFE7FE7F9E7F555593F59$959$8,
>22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8FFF0FC3FF07C30FC3F03F83DAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAABFF01F81F863C1F81FC1FFAAAAAAA2AAAAAAAAAA93F5S8R5Z,
625554105141011414504145041410510505141051417=C145041450514105141441414504145051440514105141451414504147/F50514105140555555593F5G5E,
622AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8F=AA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAABFAAAAAAA2AAAAAAAAAA93F"z"G"z"E"s#
2545557D5;5557F555593F"z"Gz"E"s#
224AAAF<AAABFAAAA93F"z"G"z"E"s#
2545557D5;5557F555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAAAAA8AAAAAAA2AAAAAA8AAAAAAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAA8AAAAAAA2AAAAAAAAAA93F5
P"2555455555551555555455555551555155555545555555155555545555555155555545555555155555545555555155555545555555155555545555555155555555554555555515555554555555515555554555555515555554555555593F5
P"22AAA28A0A2820A2020A2828A0828A0828A0A28A0A0820A2820A2828A0828A0A20A0A2820A2828A2028A0828A0A28A022820A2828A282820828A0828A0A2820A2028A2828A0828A0228A0A2820A282822828A0828A0A2820A0AAAAAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"z#
22OMAAA93F"z#
25OM55593F"Z#
27OMF93F

@"F"H"9&<"
0FCF0FFEFFFCFF3F7F@";">$H"9%8"9"
CF87CFFF8FCFFCFFF9FEFCFEF"@"J"?"
71CF6F8FCE#>"J%8"9"
FEF9FF8F0FFF3FDFFFEF"J"
FCAE4;0818/8'
F01F03F83FCFF87F9FFFFCFCEC3F8706C63F0FF84FFFF01F86C30F83C63F8787F86C30F83FCFF01FFFFCFFE7FBF0FEC3F03E43;*95='
E79E71F39FCFE79F0F@C31E79FFFE70E59FCFE70FFFE79F70E79F39E59E79FFFE79F70E79F39FCFE79FFCFC31E71E31<$8#:(8#8#8,9"9#9&
DEF9F7CFCFE79CFCFFFCF9E3EF8FDEF879E39CFCFFFCFCEF8E79F7DFCFF7FE79EF9E79;&9"?*8$:)9"<#
E3FCFFFE1F9FE7FFCFCFCFFFE3FCFCE1E7FCCFCE79FE1FCFE3FF9FCFFE;"8';"?":"8"8"9%;"
F0F19FCFC00FFF00F0190000F19FCFF0EF;%8#<%<#8#8"8"9"8#9$
FC3CFFE7CFFFFFFFFE73FC3C9E79FFFFE7FC3F3FE00F;#<%;"<#F#:">"
FF1C9FFFFEFD07FF1CFF1FC0F9;$9$8(9':';#8%:%
EF9C7DE7FF0F7DE79E7FFFFCFFC78FFFEF9C7CFE7FFFFE7FC7EF9FFE7FFF3FC7DE79F0;)8&8"95A#
E79E79E31FCFF3CFFF3BE79F3C016E34FFFE79E38E31E31E7FF3CFFFF3CE38E31E31FCFE7E79E;*858.9(
E03F03F08F03F83F9F687C30F83FFFE00C3FF03F0C7FFE03F00F0CF08C3FF8383F00F0CF08F03E03FFFE01CFFF03C30F03C30F9;T8%8"S"Q8$T8T
FFFFFFFFFCFCFFFFCFJ#
5FDFE
J#
5FC01J#>#?"
5FE03F87F87J#>#?"
5FFFFFFFFFF




























































"j#
20OM013F
"Z"
3FP 3Fj"
P!3F
%Z%Sz"
251E3FBFO,9FFFDFDF3DDFF$JZ
24EFBFO94
ENDBITMAP
%%EndBinary
72 90 540 207 R
7 X
V
2 12 Q
0 X
(This figure shows the drawing made during operation of the data execution module.) 104.53 199 T
FMENDPAGE
%%EndPage: "17" 24
%%Page: "18" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 18 -) 293 72 T
1 18 Q
(Table  5.  NC-Code) 232.25 672 T
72 90 540 693 R
1 H
0 Z
N
297 92 531 451.67 R
6 X
V
297 408.5 531 656 R
5 X
V
81 333 292 656 R
6 X
V
81 477.5 292 589.17 R
5 X
V
81 91 292 365.33 R
V
297 151.5 531 237.67 R
V
72 662 540 662 2 L
0.5 H
2 Z
0 X
N
1 14 Q
(1) 270 621 T
(2) 270 486 T
(3) 270 378 T
(5) 270 99 T
(5) 504 459 T
2 12 Q
(\050cont.\051) 486 441 T
1 14 Q
(4) 504 261 T
(6) 504 162 T
(7) 504 108 T
2 8 Q
(n0001 \050ID,PROG,datxnc,data execution demo design,1\051) 90 648.67 T
(n0002 g53) 90 639.34 T
(n0003 p69 = +0.735) 90 630.02 T
(n0004 p68 = +0.0) 90 620.7 T
(n0005 g90 g0 w\050p69+\050p68-10.5\051\051 m6) 90 611.38 T
(n0006 p91 = 1.5) 90 602.06 T
(n0007 p12 = 91 m950) 90 592.73 T
(n0008 p90=50 p88=-.25 p89=40) 90 583.41 T
(n0009 p83=+16.825 p84=+7.425 p85=1) 90 574.09 T
(n0010 p70=0) 90 564.77 T
(n0011 g53 m9) 90 555.45 T
(n0012 g0 g90 m5 m6) 90 546.12 T
(n0013 g90 g0 x+36.5 y+15.0) 90 536.8 T
(n0014 ! Changing tool to probe for setting x_zero and y_zero) 90 527.48 T
(n0015 t\050p89\051 m28 m67 m6) 90 518.16 T
(n0016 x\050p83\051 y\050p84\051) 90 508.84 T
(n0017 \050GSUB,OUTVWS\051) 90 499.52 T
(n0018 p66=\050p97+0.0\051 p67=\050p98+0.0\051) 90 490.19 T
(n0019 g56 g90 x\050p66\051 y\050p67\051) 90 480.87 T
(n0020 p90=50 p89=40) 90 471.55 T
(n0021 p77=+20.3 p78=+8.9125) 90 462.23 T
(n0022 g53 m9) 90 452.91 T
(n0023 g0 g90 m5 m6) 90 443.58 T
(n0024 g90 g0 x+36.5 y+15.0) 90 434.26 T
(n0025 g90 t\050p89\051 m28 m67 m6) 90 424.94 T
(n0026 ! Changing tool to probe for setting z_zero) 90 415.62 T
(n0027 p70=0 x\050p77\051 y\050p78\051) 90 406.3 T
(n0028 \050GSUB,INTVWS\051) 90 396.97 T
(n0029 p91 = \050p92+4.424+0.0\051) 90 387.65 T
(n0030 p12 = 91 m950) 90 378.33 T
(n0031 g56 g90 x\050p66\051 y\050p67\051) 90 369.01 T
(n0032 ! 0.3 by 3 by 2.0 pocket) 90 359.69 T
(n0033 ! Changing tool to 0.625 inch diameter end_mill) 90 350.36 T
(n0034 g90 g0 m6 m9) 90 341.04 T
(n0035 g53) 90 331.72 T
(n0036 g90 g0 x+36.5 y+15.0) 90 322.4 T
(n0037 g90 g0 s2750 t12 d12 m3 m6) 90 313.08 T
(n0038 g56 g90 x\050p66\051 y\050p67\051) 90 303.75 T
(n0039 m8) 90 294.43 T
(n0040 x+4.0 y+1.5) 90 285.11 T
(n0041 g0 z+0.1) 90 275.79 T
(n0042 g1 z+0.0 f5) 90 266.47 T
(n0043 x+3.0 y+1.5 z-0.2679) 90 257.14 T
(n0044 x+4.0 y+1.5 z-0.3) 90 247.82 T
(n0045 x+3.0 y+1.5) 90 238.5 T
(n0046 g0 z+1.0) 90 229.18 T
(n0047 x+4.0 y+1.5) 90 219.86 T
(n0048 z+0.1) 90 210.53 T
(n0049 g1 z-0.3 f40 m8 m72) 90 201.21 T
(n0050 f17) 90 191.89 T
(n0051 x+4.3125 y+1.1875) 90 182.57 T
(n0052 x+2.6875) 90 173.25 T
(n0053 y+1.8125) 90 163.92 T
(n0054 x+4.3125) 90 154.6 T
(n0055 y+1.1875) 90 145.28 T
(n0056 g1 x+4.6 y+0.875) 90 135.96 T
(n0057 g1 x+2.4) 90 126.64 T
(n0058 g2 x+2.375 y+0.9 r+0.025) 90 117.32 T
(n0059 g1 y+2.1) 90 107.99 T
(n0060 g2 x+2.4 y+2.125 r+0.025) 90 98.67 T
(n0061 g1 x+4.6) 306 648.67 T
(n0062 g2 x+4.625 y+2.1 r+0.025) 306 639.18 T
(n0063 g1 y+0.9) 306 629.7 T
(n0064 g2 x+4.6 y+0.875 r+0.025) 306 620.22 T
(n0065 g1 x+4.6 y+0.8225) 306 610.74 T
(n0066 g1 x+2.4) 306 601.25 T
(n0067 g2 x+2.3225 y+0.9 r+0.0775) 306 591.77 T
(n0068 g1 y+2.1) 306 582.29 T
(n0069 g2 x+2.4 y+2.1775 r+0.0775) 306 572.8 T
(n0070 g1 x+4.6) 306 563.32 T
(n0071 g2 x+4.6775 y+2.1 r+0.0775) 306 553.84 T
(n0072 g1 y+0.9) 306 544.36 T
(n0073 g2 x+4.6 y+0.8225 r+0.0775) 306 534.87 T
(n0074 g0 z+1.0) 306 525.39 T
(n0075 x+4.6 y+0.8125) 306 515.91 T
(n0076 z+0.1) 306 506.43 T
(n0077 g1 z-0.3 f8) 306 496.94 T
(n0078 f17) 306 487.46 T
(n0079 g3 x+4.6875 y+0.9 r+0.0875) 306 477.98 T
(n0080 g1 y+2.1) 306 468.49 T
(n0081 g3 x+4.6 y+2.1875 r+0.0875) 306 459.01 T
(n0082 g1 x+2.4) 306 449.53 T
(n0083 g3 x+2.3125 y+2.1 r+0.0875) 306 440.05 T
(n0084 g1 y+0.9) 306 430.56 T
(n0085 g3 x+2.4 y+0.8125 r+0.0875) 306 421.08 T
(n0086 g1 x+4.6) 306 411.6 T
(n0087 ! Changing tool to 0.375 inch diameter chamfer) 306 402.12 T
(n0088 g90 g0 m6 m9) 306 392.63 T
(n0089 g53) 306 383.15 T
(n0090 g90 g0 x+36.5 y+15.0) 306 373.67 T
(n0091 g90 g0 s5103 f28 t6 d6 m3 m6) 306 364.18 T
(n0092 g56 g90 x\050p66\051 y\050p67\051) 306 354.7 T
(n0093 x+2.4 y+0.5938) 306 345.22 T
(n0094 m8) 306 335.74 T
(n0095 g0 z+0.1 ! 0.06 wide chamfer) 306 326.25 T
(n0096 g1 z-0.1538) 306 316.77 T
(n0097 g1 x+4.6) 306 307.29 T
(n0098 g3 x+4.9062 y+0.9 r+0.3062) 306 297.81 T
(n0099 g1 y+2.1) 306 288.32 T
(n0100 g3 x+4.6 y+2.4062 r+0.3062) 306 278.84 T
(n0101 g1 x+2.4) 306 269.36 T
(n0102 g3 x+2.0938 y+2.1 r+0.3062) 306 259.88 T
(n0103 g1 y+0.9) 306 250.39 T
(n0104 g3 x+2.4 y+0.5938 r+0.3062) 306 240.91 T
(n0105 ! Changing tool to 0.75 inch diameter countersink) 306 231.43 T
(n0106 g90 g0 m6 m9) 306 221.94 T
(n0107 g53) 306 212.46 T
(n0108 g90 g0 x+36.5 y+15.0) 306 202.98 T
(n0109 g90 g0 s2291 f5 t4 d4 m3 m6) 306 193.5 T
(n0110 g56 g90 x\050p66\051 y\050p67\051) 306 184.01 T
(n0111 x+1.0 y+1.0) 306 174.53 T
(n0112 m8) 306 165.05 T
(n0113 g82 r+0.1 z-0.2744 d4 p3=.5 ! 0.5 dia) 306 155.57 T
(n0114 g53 m9 m5) 306 146.08 T
(n0115 g90 g0 w-9.0 m6) 306 136.6 T
(n0116 p91 = 0.0) 306 127.12 T
(n0117 p12 = 91 m950) 306 117.63 T
(n0118 g90 g0 x+0.5 y+19.5) 306 108.15 T
(n0119 \050END,PROG\051) 306 98.67 T
FMENDPAGE
%%EndPage: "18" 25
%%Page: "19" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 19 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        5.  DATA REQUIREMENTS) 72 685 S
0.7 0.36 (This section briefly describes data requirements of the Data Execution module.  The data) 72 659 B
0.72 0.36 (requirements of the VWS2 system and the proper formats for data structures are given in) 72 646 B
0.36 (detail in [KRA4].) 72 633 S
0.36 0.36 (Two portions of the VWS2 world model are particularly important:  the description of the) 72 607 B
-0.18 0.12 (tools currently in the milling machine, and the description of the geometry of the fixturing area.) 72 594 B
1.17 0.36 (For each tool in the machine, the following items \050and others not being used\051 are in the) 72 568 B
5.23 0.36 (world model:  id, changer_slot, type, tool_type_id, cutting_depth, exposed_length,) 72 555 B
0.26 0.36 (cutting_diameter, shank_diameter, tip description, number of flutes, materials the tool can) 72 542 B
1.02 0.36 (cut, and material the tool is made of.  As long as a process plan uses only tools that are) 72 529 B
0.69 0.36 (already in the tool magazine of the milling machine, the tooling information in the world) 72 516 B
-0.72 0.36 (model can be regarded as fixed, and once the model is set up, the user does not need to worry) 72 503 B
0.36 (about it.) 72 490 S
4.88 0.36 (The fixturing geometry information includes: obstacles, maximum run-offs in five) 72 464 B
0.36 (directions, and a safe_z_plane.  It is described in detail in [K&S2], Chapter VI, section 2.) 72 451 S
1.06 0.36 (The module requires a process plan, a design, and a workpiece description. Examples of) 72 425 B
1.58 0.36 (these have already been shown in Table 2 and Table 3.  An enhanced process plan \050an) 72 412 B
0.36 (example is shown in Table 4\051 may be either input to the module or output from it.) 72 399 S
0.36 (The module makes heavy use of the "machine_ops" database, as described in section 3.) 72 373 S
2.04 0.36 (If verification is used, the "features" database must be set up.  This database includes) 72 347 B
0.48 0.36 (information about tests for parameters, names of feature verifiers, and names of reference) 72 334 B
0.36 (feature fit functions.) 72 321 S
FMENDPAGE
%%EndPage: "19" 26
%%Page: "20" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 20 -) 293 72 T
72 90 540 693 R
7 X
V
FMENDPAGE
%%EndPage: "20" 27
%%Page: "21" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 21 -) 293 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(III.) 72 685 T
225.35 683.8 101 683.8 2 L
V
0.6 H
0 Z
N
(WORKPIECE MODEL) 101 685 T
2 F
0.36 (        1.  INITIALIZATION) 72 659 S
0.58 0.36 (The workpiece model, construction of which is the core of the Data Execution module, is) 72 633 B
-0.05 0.36 (initialized simply by copying the workpiece description of the workpiece named in the call) 72 620 B
0.55 0.36 (to execute_plan.  The module checks that the workpiece features are all features from the) 72 607 B
-0.24 0.36 (design \050possibly missing subfeatures\051.  The module prints an error message and halts if this) 72 594 B
-0.52 0.36 (is not so.  The design and the material named in the workpiece description must match those) 72 581 B
0.36 (in the process plan.  If verification is on, the workpiece is verified.) 72 568 S
0.36 (        2.  CONSTRUCTION) 72 542 S
0.36 0.36 (As a step of the enhanced process plan is executed, any feature or subfeature produced by) 72 516 B
1.19 0.36 (the step is copied from the unenhanced design onto the workpiece model.  If the step is) 72 503 B
-0.35 0.36 (making a primary feature \050such as a pocket\051 which has a subfeature \050such as a chamfer\051, the) 72 490 B
-0.15 0.24 (subfeature is not copied to the model until the step which makes the subfeature is carried out.) 72 477 B
0.36 (        3.  USES) 72 451 S
0.6 0.36 (When execution is completed, the model may be saved as a description of the workpiece.) 72 425 B
0.36 (Also, the model is used to check that a step is reasonable to execute, as follows.) 72 412 S
0 0.36 (If a step makes a feature which has a reference feature, the model is checked to be sure the) 72 386 B
0.59 0.36 (reference feature already exists.  If a step makes a subfeature, the model is checked to be) 72 373 B
0.5 0.36 (sure the parent feature already exists.  In either case, if the required feature is not present) 72 360 B
0.36 (on the model, an error message is sent and the module quits work.) 72 347 S
0.39 0.36 (If a step makes a feature or subfeature that is already present on the model, once again an) 72 321 B
0.36 (error message is sent and the module quits work.) 72 308 S
1.63 0.36 (If the step is a counterbore, the hole being counterbored must already exist or an error) 72 282 B
0.36 (message is sent and the module quits work.) 72 269 S
FMENDPAGE
%%EndPage: "21" 28
%%Page: "22" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 22 -) 293 72 T
72 90 540 693 R
7 X
V
FMENDPAGE
%%EndPage: "22" 29
%%Page: "23" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 23 -) 293 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(IV.) 72 685 T
177.32 683.8 103.33 683.8 2 L
V
0.6 H
0 Z
N
(MACHINING) 103.33 685 T
2 F
0.36 (        1.  OVERVIEW) 72 659 S
0.15 0.36 (The approach to machining embodied in the VWS2 system is partly the result of evolution) 72 633 B
-0.18 0.36 (and testing, and partly the application of the advice of expert machinists by the authors and) 72 620 B
-0.74 0.36 (their predecessor, Mr.  Alton Quist of General Dynamics.  The authors consulted with expert) 72 607 B
1.08 0.36 (machinists Mr. Robert Lach of NBS, and Mr.  Ken Woodall of Texas Instruments.  Any) 72 594 B
-0.73 0.36 (misapplication of their advice is due to the authors.  Mr.  Quist also used the advice of expert) 72 581 B
0.36 (machinists.) 72 568 S
2.2 0.36 (Most data for surface speeds and amount cut per tooth were extracted from published) 72 542 B
1.75 0.36 (handbooks, as noted below.  On the advice of both machinists, however, the published) 72 529 B
0.36 (values for pass depths and stepovers were not used.) 72 516 S
0.36 (        2.  VERTICAL PASS INCREMENTS) 72 490 S
0.15 0.36 (If a feature is fairly deep, it will be unsafe to try to machine the entire depth of the feature) 72 464 B
-0.46 0.36 (at once.  Instead, the feature is machined in several passes, with a small amount removed by) 72 451 B
-0.26 0.36 (each pass.  The depth which can be milled on each pass is dependent upon the size and type) 72 438 B
-0.36 0.36 (of tool.  For drills, the pass depth is one tool diameter, whereas for end mills and ball-nosed) 72 425 B
1.11 0.36 (end mills the pass depth is half the tool diameter.  For fly cutters the pass depth is 0.01) 72 412 B
-0.03 0.36 (inches or the cutting depth of the tool, whichever is smaller.  For face mills, the pass depth) 72 399 B
0.36 (is 0.1 inches or the cutting depth of the tool, whichever is smaller.) 72 386 S
2.76 0.36 (Vertical pass increments are used for the following types of machining: slot milling,) 72 360 B
0.31 0.36 (peripheral milling, drilling, face milling, and fly cutting.  The name of the parameter used) 72 347 B
0.36 (to indicate the vertical pass increment is "pass_depth".) 72 334 S
0.36 (        3.  TYPES OF METAL CUTTING) 72 308 S
0.36 (        3.1.) 72 282 S
175.24 280.8 125.04 280.8 2 L
V
N
0.36 (Overview) 125.04 282 S
-0.02 0.36 (This subsection discusses types of metal cutting used in the VWS2 system. There are other) 72 256 B
-0.58 0.36 (types which may be performed by a milling machine but are not used in the system \050reaming) 72 243 B
0.36 (and rough milling, for example\051.  These are not discussed here.) 72 230 S
0.74 0.36 (All but three of the machining operations specified in process plans require only a single) 72 204 B
0.41 0.36 (type of cutting.  Mill_pocket, mill_contour_pocket, and mill_side_contour, however, each) 72 191 B
0.58 0.36 (require three types of cutting \050slot milling, peripheral milling, and finish milling\051 in most) 72 178 B
0.36 (circumstances.) 72 165 S
FMENDPAGE
%%EndPage: "23" 30
%%Page: "24" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 24 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.2.) 72 685 S
187.72 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Slot Milling) 125.04 685 S
0.36 (        3.2.1.  Introduction) 72 659 S
-0.13 0.36 (Slot milling is a material removal operation performed with an end mill or a ball nosed end) 72 633 B
-0.12 0.36 (mill in which the tool is cutting across the entire width of the tool.  In other words, the tool) 72 620 B
0.36 (is cutting a slot.) 72 607 S
0.69 0.36 (Figure 2 shows a cross-sectional view of a milling tool with four teeth which is cutting a) 72 581 B
0.55 0.36 (slot.  The figure describes the meaning of four basic milling terms: inches per tooth, feed) 72 568 B
0.36 (rate, spindle speed, and surface speed.  These four terms also apply to peripheral milling.) 72 555 S
1 18 Q
(Figure  2.  Slot  Milling) 217.24 528 T
72 486 72 513 540 513 540 207 72 207 72 234 243 234
 261 486 8 Y
4 X
V
0.5 H
7 X
N
113.54 450 116 450 2 L
1 H
0 X
N
114.04 451.13 116 450 114.04 448.87 3 L
N
72 450 113.54 450 2 L
2 Z
N
113.54 360 116 360 2 L
0 Z
N
114.04 361.13 116 360 114.04 358.87 3 L
N
72 360 113.54 360 2 L
2 Z
N
113.54 270 116 270 2 L
0 Z
N
114.04 271.13 116 270 114.04 268.87 3 L
N
72 270 113.54 270 2 L
2 Z
N
113.54 405 116 405 2 L
0 Z
N
114.04 406.13 116 405 114.04 403.87 3 L
N
72 405 113.54 405 2 L
2 Z
N
113.54 315 116 315 2 L
0 Z
N
114.04 316.13 116 315 114.04 313.87 3 L
N
72 315 113.54 315 2 L
2 Z
N
2 12 Q
-0.77 0.36 (This figure is a cross-sectional view of a milling tool with four teeth cutting a slot.  The) 86 190 B
-0.65 0.36 (tool, shown in light gray, is moving from left to right and rotating clockwise.  The dark) 86 177 B
-0.14 0.36 (gray patch is the material that will be removed by the rightmost tooth as it rotates one) 86 164 B
-0.15 0.36 (more quarter turn.  The length of the flat side of that patch is the thickness of the chip) 86 151 B
-0.23 0.36 (being removed \050the "inches per tooth" parameter used in most machining handbooks\051.) 86 138 B
0.24 0.36 (The rate at which the tool moves from left to right is called the "feed rate".  The rate) 86 125 B
-0.21 0.36 (of revolution of the tool \050usually expressed in rpm\051 is the spindle speed.  The speed at) 86 112 B
0.36 (which the tip of a tooth is moving is called "surface speed", or simply the "speed".) 86 99 S
3 X
270 360 135 117 243 351 G
7 X
270 360 117 117 243 351 G
0.5 H
270 360 117 117 243 351 A
0 90 117 135 261 351 G
0 90 117 135 261 351 A
6 X
0 90 117 108 261 351 G
0 X
0 90 117 108 261 351 A
6 X
90 270 108 112.5 261 373.5 G
0 X
90 270 108 112.5 261 373.5 A
6 X
180 270 117 108 243 369 G
0 X
180 270 117 108 243 369 A
6 X
270 360 108 117 243 351 G
0 X
270 360 108 117 243 351 A
351 351 378 351 2 L
N
261 486 261 459 2 L
N
126 369 153 369 2 L
N
243 261 243 234 2 L
N
1 H
270 540 45 45 261 360 A
270 324 261 315 270 306 3 Y
V
0 Z
N
72 90 540 513 R
N
FMENDPAGE
%%EndPage: "24" 31
%%Page: "25" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 25 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.2.2.  Ramping) 72 685 S
-0.3 0.36 (When a slot milling operation is performed, the first step must necessarily be to get the tool) 72 659 B
-0.34 0.36 (into the material at a certain depth.  Since end mills do not cut effectively with the center of) 72 646 B
-0.01 0.36 (the tool, simply plunging the end mill into the material vertically is usually unsafe.  In soft) 72 633 B
0.1 0.36 (materials like aluminum, it will work, but the result is that the material under the center of) 72 620 B
-0.48 0.36 (the tool is not cut, but simply pushed out of the way.  In order to solve this problem, the tool) 72 607 B
-0.4 0.36 (is moved diagonally into the material, creating a ramp.  This allows more cutting to be done) 72 594 B
0.04 0.36 (with the side of the tool.  The maximum angle at which this ramping may be done depends) 72 581 B
0.26 0.36 (on the hardness of the material.  For the VWS2 system, the values used are 15 degrees for) 72 568 B
2.89 0.36 (aluminum and brass, and 5 degrees for steel and monel.  In some cases where it is) 72 555 B
0.36 (convenient, a smaller angle is used.) 72 542 S
1 0.36 (Ramping is used for the slot milling phase of making pockets, contour pockets, and side) 72 516 B
1.74 0.36 (contours.  Ramping is also used for all types of grooves \050which are made by pure slot) 72 503 B
0.2 0.36 (milling\051.  In principle, ramping is not needed when the slot to be milled intersects the side) 72 490 B
-0.26 0.36 (of the part, since in that case the tool does not need to move vertically into the material -- it) 72 477 B
1.69 0.36 (can move to the correct depth outside the part.  In practice, since changing the cutting) 72 464 B
0.26 0.36 (algorithms to suit the circumstances is difficult, ramping is used even if the feature passes) 72 451 B
0.36 (outside the part.) 72 438 S
0.36 (        3.3.) 72 412 S
219.85 410.8 125.04 410.8 2 L
V
0.6 H
0 Z
N
0.36 (Peripheral Milling) 125.04 412 S
0.36 (        3.3.1.  Introduction) 72 386 S
-0.83 0.36 (Peripheral milling is a material removal operation performed with an end mill or a ball nosed) 72 360 B
0.59 0.36 (end mill in which the tool is cutting more material away from an existing edge.  The tool) 72 347 B
3.05 0.36 (follows a path around the periphery of the material being removed, hence the name) 72 334 B
0.36 ("peripheral milling".) 72 321 S
0.36 (        3.3.2.  Conventional vs. Climb Cutting) 72 295 S
0.58 0.36 (Peripheral milling may be done with either conventional or climb cutting. The distinction) 72 269 B
0.36 (between conventional cutting and climb cutting is illustrated in Figure 3 and Figure 4.) 72 256 S
0.43 0.36 (In climb cutting the material being cut is to the right of the path of the tool \050for tools that) 72 230 B
-0.25 0.36 (turn clockwise, which is the norm\051 and the teeth of the tool first contact the part at the wide) 72 217 B
-0.21 0.36 (end of the chip being removed. Climb cutting may lead to tool chatter.  Climb cutting tends) 72 204 B
0.36 (to force the tool away from the material being cut.) 72 191 S
0.62 0.36 (In conventional cutting the material being cut is to the left of the path of the tool and the) 72 165 B
2.74 0.36 (teeth of the tool first contact the part at the narrow end of the chip being removed.) 72 152 B
0.36 (Conventional cutting tends to pull the tool into the material being cut.) 72 139 S
1.75 0.36 (The distinction between these two types of cutting also applies to chamfering and face) 72 113 B
0.36 (milling.) 72 100 S
FMENDPAGE
%%EndPage: "25" 32
%%Page: "26" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 26 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.3.3.  Stepover) 72 685 S
-0.22 0.36 (When a lot of material is to be removed by peripheral milling, a number of passes are made) 72 659 B
0.31 0.36 (with the tool.  Between each pass the tool is moved horizontally so that the same size bite) 72 646 B
2.57 0.36 (is taken by the tool on each pass. The horizontal distance between the tool paths on) 72 633 B
-0.64 0.36 (successive passes is called the "stepover".  The size of the stepover is determined by the tool) 72 620 B
0.29 0.36 (size and the material being milled.  For aluminum, brass and steel, the stepover is half the) 72 607 B
-0.79 0.36 (tool diameter.  For monel it is one fourth of the tool diameter.  Stepovers are shown in Figure) 72 594 B
0.36 (3 and Figure 4.) 72 581 S
0.25 0.36 (According to our expert machinists, a larger stepover is feasible with conventional cutting) 72 555 B
-0.25 0.36 (than with climb cutting because of the possibility of chatter in climb cutting.  This led us to) 72 542 B
0.36 (structure our cutting algorithms so than only conventional peripheral milling is done.) 72 529 S
0.36 (Stepover applies to face milling as well as to peripheral milling.) 72 503 S
FMENDPAGE
%%EndPage: "26" 33
%%Page: "27" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 27 -) 293 72 T
540 495 540 333 72 333 72 396 288 396 288 495 6 Y
4 X
V
0.5 H
0 Z
7 X
N
1 18 Q
0 X
(Figure  3.  Climb-Cut  Peripheral  Milling) 145.25 681 T
3 X
270 351 135 117 288 513 G
7 X
270 351 117 117 288 513 G
2 Z
270 351 117 117 288 513 A
396 495 423 513 R
V
2 14 Q
0 X
0.54 (This figure is a cross-sectional view of a milling tool with four teeth which is) 86 287.67 P
0.92 (doing climb-cut peripheral milling.  The tool, shown in light gray, is moving) 86 271.67 P
0.74 (from left to right and rotating clockwise.  The dark gray patch is the material) 86 255.67 P
0.07 (that will be removed by the rightmost tooth as it rotates one more quarter turn.) 86 239.67 P
(The double-headed arrow at the right shows the stepover of this cut.) 86 223.67 T
0.21 (Notice that the rightmost tooth is going to contact the material at the wide end) 86 191.67 P
-0.25 (of the patch.  This is the hallmark of climb cutting and may lead to tool chatter.) 86 175.67 P
6 X
0 90 117 108 306 513 G
0 X
0 90 117 108 306 513 A
6 X
90 270 108 112.5 306 535.5 G
0 X
90 270 108 112.5 306 535.5 A
6 X
180 270 117 108 288 531 G
0 X
180 270 117 108 288 531 A
6 X
270 360 108 117 288 513 G
0 X
270 360 108 117 288 513 A
396 513 423 513 2 L
N
306 648 306 621 2 L
N
171 531 198 531 2 L
N
288 423 288 396 2 L
N
122.54 576 125 576 2 L
1 H
0 Z
N
123.04 577.13 125 576 123.04 574.87 3 L
N
81 576 122.54 576 2 L
2 Z
N
122.54 468 125 468 2 L
0 Z
N
123.04 469.13 125 468 123.04 466.87 3 L
N
81 468 122.54 468 2 L
2 Z
N
122.54 630 125 630 2 L
0 Z
N
123.04 631.13 125 630 123.04 628.87 3 L
N
81 630 122.54 630 2 L
2 Z
N
122.54 522 125 522 2 L
0 Z
N
123.04 523.13 125 522 123.04 520.87 3 L
N
81 522 122.54 522 2 L
2 Z
N
122.54 414 125 414 2 L
0 Z
N
123.04 415.13 125 414 123.04 412.87 3 L
N
81 414 122.54 414 2 L
2 Z
N
441 495 513 495 2 L
8 X
N
468 399.46 468 396.5 2 L
0.5 H
0 Z
0 X
N
469.57 399.21 468 396.5 466.43 399.21 3 L
N
468 495 468 399.46 2 L
2 Z
N
468 495 459 486 477 486 3 Y
V
0 Z
N
468 396 459 405 477 405 3 Y
V
N
1 H
2 Z
270 540 45 45 297 513 A
306 477 297 468 306 459 3 Y
V
0 Z
N
342 396 513 396 2 L
2 Z
8 X
N
72 90 540 666 R
0 Z
0 X
N
FMENDPAGE
%%EndPage: "27" 34
%%Page: "28" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 28 -) 293 72 T
1 18 Q
(Figure  4.  Conventional  Peripheral  Milling) 135.24 681 T
2 14 Q
0.54 (This figure is a cross-sectional view of a milling tool with four teeth which is) 86 233.67 P
0.66 (doing conventional peripheral milling.  The tool, shown in light gray,  moves) 86 217.67 P
-0.53 (from left to right and rotates clockwise.  The dark gray patch is the material that) 86 201.67 P
0.35 (will be removed by the topmost tooth as it rotates one more quarter turn.  The) 86 185.67 P
(double-headed arrow at the right shows the stepover of this cut.) 86 169.67 T
-0.07 (Notice that the topmost tooth is going to contact the material at the narrow end) 86 137.67 P
(of the patch.  This is the hallmark of conventional cutting.) 86 121.67 T
306 441 306 539 72 539 72 621 540 621 540 441 6 Y
4 X
V
0.5 H
0 Z
7 X
N
3 X
0 90 126 117 315 423 G
7 X
0 90 117 135 306 405 G
2 Z
0 90 117 135 306 405 A
122.54 361 125 361 2 L
1 H
0 Z
0 X
N
123.04 362.13 125 361 123.04 359.87 3 L
N
81 361 122.54 361 2 L
2 Z
N
122.54 468 125 468 2 L
0 Z
N
123.04 469.13 125 468 123.04 466.87 3 L
N
81 468 122.54 468 2 L
2 Z
N
122.54 307 125 307 2 L
0 Z
N
123.04 308.13 125 307 123.04 305.87 3 L
N
81 307 122.54 307 2 L
2 Z
N
122.54 522 125 522 2 L
0 Z
N
123.04 523.13 125 522 123.04 520.87 3 L
N
81 522 122.54 522 2 L
2 Z
N
122.54 414 125 414 2 L
0 Z
N
123.04 415.13 125 414 123.04 412.87 3 L
N
81 414 122.54 414 2 L
2 Z
N
450 441 513 441 2 L
8 X
N
360 540 513 540 2 L
N
486 444.46 486 441.5 2 L
0.5 H
0 Z
0 X
N
487.57 444.21 486 441.5 484.43 444.21 3 L
N
486 540 486 444.46 2 L
2 Z
N
486 540 477 531 495 531 3 Y
V
0 Z
N
486 441 477 450 495 450 3 Y
V
N
423 423 414 441 441 441 441 423 4 Y
7 X
V
6 X
0 90 117 108 306 405 G
2 Z
0 X
0 90 117 108 306 405 A
6 X
90 270 108 112.5 306 427.5 G
0 X
90 270 108 112.5 306 427.5 A
6 X
180 270 117 108 288 423 G
0 X
180 270 117 108 288 423 A
6 X
270 360 108 117 288 405 G
0 X
270 360 108 117 288 405 A
396 405 423 405 2 L
N
306 540 306 513 2 L
N
171 423 198 423 2 L
N
288 315 288 288 2 L
N
1 H
270 540 45 45 297 414 A
306 378 297 369 306 360 3 Y
V
0 Z
N
72 90 540 666 R
N
FMENDPAGE
%%EndPage: "28" 35
%%Page: "29" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 29 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.4.) 72 685 S
199.1 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Finish Milling) 125.04 685 S
0.16 0.36 (Finish milling is a type of peripheral milling in which an end mill is used to make one last) 72 659 B
-0.25 0.36 (light cut at full depth on a pocket, contour pocket, or side contour.  The size of the stepover) 72 646 B
1.16 0.36 (is normally 0.01 inch in the VWS2 system.  Finish milling is normally preceded by slot) 72 633 B
0.36 (milling and peripheral milling.) 72 620 S
0.16 0.36 (Without finish milling, features made in several vertical passes often have horizontal lines) 72 594 B
0.36 (on the walls of the feature, one line at the bottom of each pass.) 72 581 S
0.36 (        3.5.) 72 555 S
165.92 553.8 125.04 553.8 2 L
V
N
0.36 (Drilling) 125.04 555 S
0.21 0.36 (In drilling \050sometimes called twist drilling by other authors\051, a drill with a conical tip cuts) 72 529 B
0.26 0.36 (a round hole in the material.  The actual cutting is done by the tip of the drill only.  In the) 72 516 B
-0.4 0.36 (VWS2 system, all drills are assumed to have an included angle of 118 degrees at the tip, the) 72 503 B
0.36 (standard angle.) 72 490 S
-0.41 0.36 (A pass depth is used in drilling.  The drill is retracted for a moment between passes to allow) 72 464 B
-0.01 0.36 (cutting fluid to re-enter the hole.  Otherwise, the drill tip would not be properly lubricated.) 72 451 B
0.36 (        3.6.) 72 425 S
167.56 423.8 125.04 423.8 2 L
V
N
0.36 (Tapping) 125.04 425 S
-0.23 0.36 (In tapping, a tool with a screw thread on the outside is used to form threads on the inside of) 72 399 B
-0.24 0.36 (a hole.  The tool is always called a tap, but it may work either by cutting material out of the) 72 386 B
0.12 0.36 (hole or by deforming the material inside the hole.  In the former case, the tool has grooves) 72 373 B
-0.06 0.36 (on its outside parallel to the axis of the tool.  In the latter case there are no grooves and the) 72 360 B
0.36 (tool is called a "roll form tap".  The VWS2 system is set up for right-handed threads only.) 72 347 S
-0.66 0.36 (On the Monarch vertical milling machine used in the VWS, tapping is performed by pushing) 72 321 B
0.9 0.36 (the tool lightly down into the hole with air pressure while turning the spindle clockwise.) 72 308 B
-0.09 0.36 (The tool literally screws itself down into the hole.  When the tap reaches the desired depth,) 72 295 B
0.36 (the spindle reverses and screws the tool out of the hole.) 72 282 S
0.36 (        3.7.) 72 256 S
204.08 254.8 125.04 254.8 2 L
V
N
0.36 (Countersinking) 125.04 256 S
-0.56 0.36 (In a countersinking operation, a tool with a conical tip is inserted in the center of an existing) 72 230 B
-0.04 0.36 (hole so that the edge of the hole is cut away. In the VWS2 system the included angle at the) 72 217 B
-0.08 0.36 (tip of the countersink is always 82 degrees, since that is the included angle of the head of a) 72 204 B
0.36 (standard machine bolt.) 72 191 S
0.36 (        3.8.) 72 165 S
185.96 163.8 125.04 163.8 2 L
V
N
0.36 (Chamfering) 125.04 165 S
-0.22 0.36 (In a chamfering operation a sharp edge on a part is blunted by milling a little of it away.  In) 72 139 B
0.17 0.36 (the VWS2 system, the edge is always the 90 degree angle between a vertical surface and a) 72 126 B
1.26 0.36 (horizontal surface -- the edge between the walls of a pocket and the top of the part, for) 72 113 B
0.42 0.36 (example.  In the VWS2 system, a conical chamfer tool with a 90 degree included angle at) 72 100 B
FMENDPAGE
%%EndPage: "29" 36
%%Page: "30" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 30 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
-0.43 0.36 (the tip is passed around the edge to mill it flat at a 45 degree angle to both existing surfaces.) 72 685 B
1.99 0.36 (In principle, any other angle might be used, or the edge might be rounded rather than) 72 672 B
0.36 (flattened, but only the flat 45 degree chamfer has been implemented.) 72 659 S
0.36 (        3.9.) 72 633 S
203.44 631.8 125.04 631.8 2 L
V
0.6 H
0 Z
N
0.36 (Center Drilling) 125.04 633 S
-0.21 0.36 (A center drilling operation is performed to make a small starting hole for a drill.  It is made) 72 607 B
0.09 0.36 (with a center drill, which is a rigid tool with a conical tip.  The tip angle of the center drill) 72 594 B
-0.55 0.36 (should be smaller than the tip angle of the drill.  In the VWS these angles are 90 degrees and) 72 581 B
0.36 (118 degrees, respectively.) 72 568 S
0.22 0.36 (Since drills usually have a high length to diameter ratio, they are usually flexible and tend) 72 542 B
0.14 0.36 (to wander across the surface of a part before the cut starts.  When the entry point of a hole) 72 529 B
-0.01 0.36 (is off center, the entire drill bends during cutting, and the axis of the hole is tilted from the) 72 516 B
0.93 0.36 (original axis of the drill.  The bending may break the drill.  Center drilling prevents this) 72 503 B
-0.54 0.36 (wandering.  Thus, center drilling improves the accuracy of the location of a hole, helps keep) 72 490 B
0.36 (the axis of the hole aligned correctly, and helps prevent drill breakage.) 72 477 S
0.36 (        3.10.) 72 451 S
206.08 449.8 131.4 449.8 2 L
V
N
0.36 (Counterboring) 131.4 451 S
-0.78 0.36 (A counterboring operation is performed to finish up an existing hole.  An end mill is plunged) 72 425 B
0.76 0.36 (into the hole as deeply as desired \050but not deeper than the existing hole\051.  As used in the) 72 412 B
0.54 0.36 (VWS2 system, the existing hole must be the same diameter as the end mill.  This is not a) 72 399 B
-0.36 0.36 (requirement for counterboring in principle and is imposed to keep life simple for the VWS2) 72 386 B
0.36 (modeling system.) 72 373 S
0.36 (        3.11.) 72 347 S
197.39 345.8 131.4 345.8 2 L
V
N
0.36 (Face Milling) 131.4 347 S
-0.58 0.36 (Face milling is a bulk material removal operation which leaves a good finish.  Normally, the) 72 321 B
2.3 0.36 (entire top surface of a part will be removed in a face milling operation, but the only) 72 308 B
-0.54 0.36 (requirement is that the material to be removed must be accessible from the side \050since a face) 72 295 B
-0.75 0.36 (mill will not cut vertically\051.  A single face milling cut may remove up to 0.1 inch of material.) 72 282 B
-0.53 0.36 (Typical size for a face mill is one to three inches in diameter. A face mill will typically have) 72 269 B
0.36 (four to eight cutting teeth.) 72 256 S
0.36 (        3.12.) 72 230 S
190.38 228.8 131.4 228.8 2 L
V
N
0.36 (Fly Cutting) 131.4 230 S
-0.01 0.36 (Fly cutting is a surfacing operation.  It is performed to give a high quality surface finish or) 72 204 B
1.46 0.36 (to remove small irregularities, not to remove a lot of material.  Normally a fly cut will) 72 191 B
-0.22 0.36 (remove 0.005 to 0.01 inch of material from the entire top surface of a part.  A fly cutter is a) 72 178 B
0.64 0.36 (tool with one tooth at the end of an arm.  The fly cutter used in the VWS has a four inch) 72 165 B
0.36 (diameter.) 72 152 S
FMENDPAGE
%%EndPage: "30" 37
%%Page: "31" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 31 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        4.  SPEEDS AND FEED RATES) 72 685 S
0.28 0.36 (Spindle speeds for the different operations were calculated using data from the Machining) 72 659 B
-0.72 0.36 (Data Handbook, [METC], published by Metcut Research Associates, Inc., along with advice) 72 646 B
0.76 0.36 (from experienced machinists.  A range of values for surface speed are given in the book,) 72 633 B
2.06 0.36 (depending on the hardness of the material being machined.  Since the hardness of the) 72 620 B
-0.65 0.36 (material is not known in the system, the value used for surface speed was slightly lower than) 72 607 B
-0.71 0.36 (the value given for the hardest material of the given type in the relevant hardness range.  The) 72 594 B
1.34 0.36 (spindle speed in revolutions per minute is then calculated as the surface speed \050feet per) 72 581 B
-0.15 0.36 (minute\051 times 12 \050inches per foot\051 divided by the circumference \050inches per revolution = pi) 72 568 B
-0.2 0.36 (times cutter_diameter in inches\051.  The cutter_diameter is halved for chamfers, since cutting) 72 555 B
-0.36 0.36 (is done starting at the middle of the tool, where the diameter is half the diameter of the tool.) 72 542 B
0.36 (The maximum spindle speed allowed is 5200 rpm.) 72 529 S
0.38 0.36 (Feed rates were calculated using data from the same sources.  The values for feed rates in) 72 503 B
-0.37 0.36 (inches per tooth were chosen in the same way as the values for surface speed.  The feed rate) 72 490 B
0.65 0.36 (in inches per minute is then calculated as the feed \050inches per tooth\051 times the number of) 72 477 B
-0.66 0.36 (flutes \050teeth per revolution\051 times the spindle speed \050revolutions per minute\051.  For drills, end) 72 464 B
-0.09 0.36 (mills, and chamfers, the feed was also multiplied by a scaling factor of the tool diameter in) 72 451 B
0.27 0.36 (inches.  This reduces the feed rate for smaller tools.  For taps, the feed rate is always 300,) 72 438 B
0.36 (since this is required by the canned cycle used to do the tapping.) 72 425 S
-0.55 0.36 (Both spindle speeds and feed rates depend upon the type of material being milled, so in both) 72 399 B
-0.24 0.36 (cases, the top-level function for calculating the values calls a subordinate function which is) 72 386 B
0.36 (appropriate for the given type of material.) 72 373 S
0.36 (        5.  ZERO FINDING) 72 347 S
0.36 (        5.1.) 72 321 S
188.69 319.8 125.04 319.8 2 L
V
0.6 H
0 Z
N
0.36 (Introduction) 125.04 321 S
-0.6 0.36 (The origin of coordinates for machining is at the front left top corner of the workpiece.  This) 72 295 B
0.55 0.36 (is the same xy-location as in the coordinates for the design protocol, but the z-location in) 72 282 B
-0.06 0.36 (the design protocol is at the bottom of the workpiece.  The setting of the xy-zero is done in) 72 269 B
0.36 (one step. Setting z-zero is a another, very different operation.) 72 256 S
0.36 (        5.2.) 72 230 S
265.01 228.8 125.04 228.8 2 L
V
N
0.36 (Setting X-Zero and Y-Zero) 125.04 230 S
0.36 (        5.2.1.  Introduction) 72 204 S
0.07 0.36 (When a workpiece is placed in the vise on the milling machine, it is centered in the vise to) 72 178 B
1.45 0.36 (within plus or minus roughly an eighth of an inch. The probe is used to locate the part) 72 165 B
-0.2 0.36 (exactly.  There are two geometric configurations that may be probed: corners and holes.  In) 72 152 B
0.36 (both cases the surface of the workpiece in the vicinity must be roughly flat.) 72 139 S
FMENDPAGE
%%EndPage: "31" 38
%%Page: "32" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 32 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        5.2.2.  Probing a Corner) 72 685 S
-0.55 0.36 (A corner to be probed must be a convex corner formed by the intersection of a plane parallel) 72 659 B
-0.76 0.36 (to the xz-plane with a plane parallel to the yz-plane.  As shown in Figure 5a \050page 34\051, which) 72 646 B
-0.47 0.36 (is a top view of a part, this is your garden variety corner.  There are four types of corner that) 72 633 B
-0.29 0.36 (may be formed this way, corresponding to the four corners of a block.  The corner types are) 72 620 B
-0.02 0.36 (numbered 1, 2, 3, and 4.  On the figure there are three corners of type 1, two of type 2, one) 72 607 B
-0.44 0.36 (of type 3, and one of type 4.  The corner being probed does not have to be an exterior corner) 72 594 B
1.4 0.36 (of the workpiece.  It may be a configuration appearing inside.  Any of the three type 1) 72 581 B
0.36 (corners on the figure could be probed.) 72 568 S
-0.75 0.36 (To probe a corner, the user must give the approximate location and the type of corner.  When) 72 542 B
-0.38 0.36 (a rectangular block is placed in the vise, the approximate location of any of the four corners) 72 529 B
0.26 0.36 (may be determined automatically.  At the lower left-hand corner, for example, the y-value) 72 516 B
0.4 0.36 (is the y-value of the fixed side of the vise \050which would be at the top of Figure 5a\051 minus) 72 503 B
0.63 0.36 (the width of the part.  The x-value is the x-value of the middle of the vise minus half the) 72 490 B
-0.16 0.36 (length of the part.  This is the corner that is usually probed.  The automatic process planner) 72 477 B
0.36 (uses this corner.) 72 464 S
0.24 0.36 (The method of probing is illustrated by the schematically drawn tool path at the lower left) 72 438 B
1.28 0.36 (corner of the part in Figure 5a.  The real tool path overlaps itself and would be hard to) 72 425 B
0.36 (understand.) 72 412 S
0.49 0.36 (The probe comes down vertically at a location offset towards the interior of the part from) 72 386 B
0.47 0.36 (the given approximate location of the corner until it hits the part.  This is only to find the) 72 373 B
-0.03 0.36 (top of the part, not to set z-zero. Then the probe lifts up a little and moves outside the part,) 72 360 B
1.04 0.36 (comes down below the top of the part and approaches the part again slowly until it hits.) 72 347 B
-0.62 0.36 (When it hits, the x-value of the contact point is recorded; that will be x-zero.  Next the probe) 72 334 B
0.08 0.36 (backs off, moves over to the other side of the corner, and approaches the part again slowly) 72 321 B
0.36 (until it hits.  When it hits, the y-value of the contact point is recorded; that will be y-zero.) 72 308 S
0.27 0.36 (If some corner other than the lower left-hand corner is probed, the values of x-zero and y-) 72 282 B
-0.19 0.36 (zero are changed by an x-offset and a y-offset provided in the process plan.  Inserting these) 72 269 B
0.36 (offsets in the plan must be done manually and requires knowing the geometry of the part.) 72 256 S
0.36 (        5.2.3.  Probing a Hole) 72 230 S
0.18 0.36 (The hole to be probed should be circular.  The user must provide the approximate location) 72 204 B
0.36 (and diameter of the hole.) 72 191 S
0.69 0.36 (A simplified drawing of the hole probing routine is shown by the three lines crossing the) 72 165 B
0.61 0.36 (hole in Figure 5a.  The probe routine starts by finding the top of the part \050that is why the) 72 152 B
-0.37 0.36 (approximate diameter is needed - so that the system knows when the probe may be assumed) 72 139 B
0.15 0.36 (to be outside the hole\051; this is not shown on the figure.  Then the probe is inserted into the) 72 126 B
2.96 0.36 (hole at the given approximate center \050where the vertical line on the left crosses the) 72 113 B
-0.54 0.36 (horizontal line on the figure\051.  The probe moves back and forth to find y-values where it hits) 72 100 B
FMENDPAGE
%%EndPage: "32" 39
%%Page: "33" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 33 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
-0.16 0.36 (the side of the hole.  The average of these two values is used as a first approximation to the) 72 685 B
-0.35 0.36 (y-value of the center of the hole.  The probe moves to this y-value and then moves back and) 72 672 B
0.53 0.36 (forth in the x-direction to find x-values where it hits the side of the hole.  The average of) 72 659 B
1.96 0.36 (these x-values is the x-value of the center of the hole, and their difference is the first) 72 646 B
0.53 0.36 (approximation to the diameter. Finally the probe moves to the center of the hole and then) 72 633 B
0.71 0.36 (moves back and forth in the y-direction to find two more y-values.  The average of these) 72 620 B
0.51 0.36 (new y-values is the final y-value of the center of the hole and their difference is a second) 72 607 B
0.57 0.36 (approximation to the diameter.  The average of the two approximations to the diameter is) 72 594 B
0.36 (returned as the diameter \050but this value is not being used for anything\051.) 72 581 S
0.36 (Offsets may be used with hole probing exactly as with corner probing.) 72 555 S
FMENDPAGE
%%EndPage: "33" 40
%%Page: "34" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 34 -) 293 72 T
63 81 549 702 R
7 X
V
1 18 Q
0 X
(b. setting the W-axis) 195 94 T
81 171 531 189 R
3 X
V
0.5 H
0 Z
0 X
N
126 189 234 216 R
6 X
V
0 X
N
135 216 135 234 144 234 144 225 153 225 153 216 6 Y
6 X
V
0 X
N
225 216 225 234 216 234 216 225 207 225 207 216 6 Y
6 X
V
0 X
N
144 225 216 243 R
4 X
V
0 X
N
270 189 396 198 R
6 X
V
0 X
N
216 243 414 243 2 L
2 Z
10 X
N
216 225 414 225 2 L
N
270 199 234 199 2 L
N
108 378 171 378 171 351 153 333 126 333 108 351 6 Y
6 X
V
0 Z
0 X
N
198 342 261 342 261 315 243 297 216 297 198 315 6 Y
6 X
V
0 X
N
288 360 351 360 351 333 333 315 306 315 288 333 6 Y
6 X
V
0 X
N
378 306 441 306 441 279 423 261 396 261 378 279 6 Y
6 X
V
0 X
N
171 108 495 162 R
7 X
V
2 12 Q
0 X
(1. Head set at W= -9.0 for setting tool length offsets.) 171 154 T
(2. Head moved 1.5 inches closer to workpiece.) 171 140 T
(3. Head moved up by thickness of workpiece.) 171 126 T
(4. Head moved down three inches for milling in pallet area.) 171 112 T
1 18 Q
(1) 135 351 T
(2) 225 319 T
(3) 315 337 T
(4) 405 279 T
2 12 Q
( top of workpiece) 419 237 T
(bottom of vise jaws) 423 219 T
(top of pallet area) 423 198 T
260 221.54 260 224.5 2 L
N
258.43 221.79 260 224.5 261.57 221.79 3 L
N
260 198 260 221.54 2 L
2 Z
N
(3.0) 261 207 T
252 239.54 252 242.5 2 L
0 Z
N
250.43 239.79 252 242.5 253.57 239.79 3 L
N
252 225 252 239.54 2 L
2 Z
N
(workpiece thickness) 258 231 T
1 18 Q
(Figure  5.  Setting  Zero) 214.76 681 T
126 655 126 457 180 457 180 583 234 583 234 538 279 538
 279 457 495 457 495 664 126 664 11 Y
5 X
V
1 H
0 Z
0 X
N
7 X
90 450 40.5 40.5 373.5 552.5 G
0 X
90 450 40.5 40.5 373.5 552.5 A
1 14 Q
(1) 119 451 T
(2) 504 448 T
(3) 504 664 T
(4) 108 664 T
(2) 189 448 T
(1) 218 536 T
361 592 361 514 2 L
0.5 H
2 Z
N
373 592 373 513 2 L
N
333 552 414 552 2 L
N
153 484 72 475 126 475 72 466 144 421 144 457 6 L
N
(1) 267 449 T
1 18 Q
(a. setting x-zero and y-zero) 207 409 T
103.42 484.57 100.49 484.08 2 L
0 Z
N
103.43 482.98 100.49 484.08 102.91 486.07 3 L
N
118 487 103.42 484.57 2 L
2 Z
N
80.54 471 83.5 471 2 L
0 Z
N
80.79 472.57 83.5 471 80.79 469.43 3 L
N
73 471 80.54 471 2 L
2 Z
N
95.4 464.68 92.49 464.1 2 L
0 Z
N
95.46 463.09 92.49 464.1 94.84 466.17 3 L
N
112 468 95.4 464.68 2 L
2 Z
N
114.09 433.88 116.58 432.27 2 L
0 Z
N
115.15 435.06 116.58 432.27 113.45 432.43 3 L
N
100 443 114.09 433.88 2 L
2 Z
N
150 447.54 150 450.5 2 L
0 Z
N
148.43 447.79 150 450.5 151.57 447.79 3 L
N
150 434 150 447.54 2 L
2 Z
N
396 198 414 198 2 L
10 X
N
260 202.46 260 199.5 2 L
0 Z
0 X
N
261.57 202.21 260 199.5 258.43 202.21 3 L
N
260 224 260 202.46 2 L
2 Z
N
252 228.46 252 225.5 2 L
0 Z
N
253.57 228.21 252 225.5 250.43 228.21 3 L
N
252 242 252 228.46 2 L
2 Z
N
72 388 540 388 2 L
3 H
N
FMENDPAGE
%%EndPage: "34" 41
%%Page: "35" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 35 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        5.3.) 72 685 S
201.07 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Setting Z-Zero) 125.04 685 S
0.36 (        5.3.1.  W-axis Setting) 72 659 S
1.25 0.36 (The entire head of the milling machine moves vertically with respect to the table of the) 72 633 B
-0.02 0.36 (machine.  Setting z-zero is complicated by location of the head of the machine \050the W-axis) 72 620 B
0.57 0.36 (setting\051.  There is no absolute zero in the vertical direction on the milling machine which) 72 607 B
1.76 0.36 (can be used by the machine tool controller.  The quill of the machine \050the large metal) 72 594 B
-0.09 0.36 (cylinder that holds the spindle\051 has an absolute zero, and the position of the quill is what is) 72 581 B
-0.32 0.36 (controlled by changing a z-value, but the quill\325s motion is relative to the current position of) 72 568 B
0.35 0.36 (the head of the machine.  If the W-axis is set at -8.0 and a program is run that expects the) 72 555 B
-0.23 0.36 (W-axis to be set at -9.5, all the motions of the tools will be 1.5 inches above where they are) 72 542 B
0.36 (expected to be.) 72 529 S
-0.54 0.36 (A second complicating factor is that tool offsets are provided to compensate for the fact that) 72 503 B
1.53 0.36 (different tools are different lengths. The tool offsets are set with the W-axis in a given) 72 490 B
0.36 (position, and if the location of the W-axis is changed, the tool offsets must be changed.) 72 477 S
-0.44 0.36 (In the VWS, tool offsets are taken where W=-9.0 and are measured to the bottom of the vise) 72 451 B
-0.56 0.36 (jaws, where the workpiece sits.  However, to be sure that the tools will be able to go through) 72 438 B
0.04 0.36 (the bottom of the workpiece without exceeding the limits of quill travel, during cutting the) 72 425 B
0.02 0.36 (W-axis is positioned 1.5 inches closer to the top of the workpiece.  Thus the W-axis would) 72 412 B
-0.21 0.36 (be set at W=-10.5 if the top of the workpiece were at the bottom of the vise jaws.  This also) 72 399 B
0.36 (means that all tool length offsets must be adjusted by 1.5 inches.) 72 386 S
0.31 0.36 (To compensate for the thickness of the workpiece, since NC-programs expect z=0 to be at) 72 360 B
0.59 0.36 (the top of the workpiece, the head of the machine is moved upwards along the W-axis by) 72 347 B
-0.5 0.36 (the design thickness of the workpiece.  If the workpiece is thicker than the design thickness,) 72 334 B
0.43 0.36 (it will be face milled down to the correct height before any other milling is done.  During) 72 321 B
0.36 (this face milling, z-values will be positive.) 72 308 S
0.12 0.36 (If machining is to be done in the pallet area, the head of the machine is moved downwards) 72 282 B
0.4 0.36 (3.0 inches along the W-axis, since the difference in height between the bottom of the vise) 72 269 B
0.36 (jaws and the top of the pallet holder is 3.0 inches.) 72 256 S
0.78 0.36 (The three adjustments of the W-axis and the one adjustment of the tool length offset just) 72 230 B
-0.41 0.36 (described suffice to set z-zero when z-zero is to be set with respect to the fixture.  Figure 5b) 72 217 B
0.27 0.36 (shows a side view of the pallet and the vise along with four positions of the spindle as the) 72 204 B
0.36 (head of the machine is moved.) 72 191 S
FMENDPAGE
%%EndPage: "35" 42
%%Page: "36" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 36 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        5.3.2.  Setting Z-zero from the Top of the Part) 72 685 S
-0.02 0.36 (In some cases it will be desirable to set z-zero at the top of the part or some distance offset) 72 659 B
0.42 0.36 (from the top of the part.  To do this the probe is moved to an xy-location specified by the) 72 646 B
-0.58 0.36 (user and brought down slowly until it hits the part.  Then the z-value of the quill is recorded.) 72 633 B
-0.02 0.36 (The difference between this z-value and the corresponding z-value that was recorded when) 72 620 B
0.09 0.36 (tool offsets were measured \050plus any additional offset the user may have specified\051 is used) 72 607 B
0.36 (to adjust all the tool length offsets.) 72 594 S
0.36 (        6.  TOOL CHANGING) 72 568 S
0.07 0.36 (All tool changing is done at a fixed xy location on the milling machine that is known to be) 72 555 B
0.39 0.36 (free of obstacles.  If tools were changed near a part being milled, there would be a risk of) 72 542 B
-0.61 0.36 (knocking into the part or fixturing. The height of the machine head above the table is always) 72 529 B
0.36 (set to be sufficient to allow for changing the longest tools at the preset xy location.) 72 516 S
1.13 0.36 (When a tool change is required, the x and y values of the current origin are temporarily) 72 490 B
1.62 0.36 (cancelled, so that absolute coordinates are in effect. The spindle is retracted, and flood) 72 477 B
0.72 0.36 (coolant is turned off.  The spindle is moved to the tool changing location, and the tool is) 72 464 B
0.43 0.36 (changed.  The Monarch VMC-75 vertical milling center holds 40 tools in its changer, and) 72 451 B
-0.66 0.36 (any of these may be used.  After the new tool is inserted, the origin is restored to its previous) 72 438 B
-0.6 0.36 (location.  For any of the 15 metal cutting operations the flood coolant is turned back on.  For) 72 425 B
-0.37 0.36 (the three zero-setting operations it is left off.  Also for the metal cutting operations, the tool) 72 412 B
0.36 (change command may include a move to a new xy location after the change is completed.) 72 399 S
FMENDPAGE
%%EndPage: "36" 43
%%Page: "37" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 37 -) 293 72 T
72 90 540 693 R
7 X
V
1 F
0 X
(V.) 72 685 T
251.32 683.8 101.66 683.8 2 L
V
0.6 H
0 Z
N
(AUTOMATIC NC-CODING) 101.66 685 T
2 F
0.36 (        1.  OVERVIEW) 72 659 S
0.68 0.36 (In the VWS2 system numerical control code \050NC-code\051 is generated automatically by the) 72 633 B
0.2 0.36 (Data Execution Module.  The code that is generated is executable by the GE2000 machine) 72 620 B
-0.31 0.36 (tool controller that controls the Monarch VMC-75 Vertical Machining Center.  This code is) 72 607 B
0.36 (not a standard language, but it is very similar to many other NC-code languages.) 72 594 S
-0.06 0.36 (The description of NC-code given in section 2 of this chapter is intended to give the reader) 72 568 B
1.23 0.36 (an understanding of basic concepts and how they are applied in the VWS2 system.  For) 72 555 B
0.36 (details of the exact meaning of the codes, refer to [MONA].) 72 542 S
0.36 (        2.  NC-CODE) 72 516 S
0.36 (        2.1.) 72 490 S
188.69 488.8 125.04 488.8 2 L
V
N
0.36 (Introduction) 125.04 490 S
0.24 0.36 (NC-code is a series of lines of alphanumeric characters.  The lines are interpreted line-by-) 72 464 B
-0.39 0.36 (line by the controller.  On each line there are one or more entries separated by spaces.  Each) 72 451 B
-0.71 0.36 (entry is usually a letter followed by a number, possibly with a plus or minus sign in between.) 72 438 B
-0.27 0.36 (In some cases \050as on the second line in the example below\051, the number may be replaced by) 72 425 B
0.17 0.36 (an expression in parentheses.  This expression will be evaluated at the appropriate time by) 72 412 B
0.36 (the controller, and the value will be a number.) 72 399 S
2.89 0.36 (The order of the entries on a line should be according to the following alphabetical) 72 373 B
0.65 0.36 (sequence:  n g x y r z w f s t d m.  There may be two "g" entries on a line and three "m") 72 360 B
0.36 (entries, but there should not be more than one of any other type of entry.) 72 347 S
-0.56 0.36 (The meanings of NC-codes used in the VWS2 system are given in Table 6.  The table covers) 72 321 B
0.12 0.36 (all NC-codes used except for the codes used on the first and last lines of a program, which) 72 308 B
-0.43 0.36 (are unique.  There are many other NC-codes available for use on the Monarch which are not) 72 295 B
0.36 (used in the VWS2 system.) 72 282 S
1.19 0.36 (The controller is smart enough to execute the codes on a single line in a sensible order,) 72 256 B
1.26 0.36 (which may be different from the order on the line. However, all of one line is executed) 72 243 B
0.36 (before the controller proceeds to the next line.) 72 230 S
-0.83 0.36 (The controller keeps track of the current position of the tip of the tool which is in the spindle.) 72 204 B
0.55 0.36 (Thus, to control the tool, it is sufficient to tell the controller where to move the tip of the) 72 191 B
0.36 (tool next.) 72 178 S
FMENDPAGE
%%EndPage: "37" 44
%%Page: "38" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 38 -) 293 72 T
72 90 540 693 R
7 X
V
1 18 Q
0 X
(Table  6.  Numerical  Control  Codes) 165.26 669 T
1 12 Q
(  CODE                                WHAT  IT  MEANS                            WHERE USED) 72 644 T
72 639 540 639 2 L
0.5 H
2 Z
N
72 657 540 657 2 L
1 H
N
117 657 117 90 2 L
0.5 H
N
405 657 405 90 2 L
N
2 F
(d) 81 622 T
(f) 81 609 T
(goto) 81 596 T
(gsub) 81 583 T
(g0) 81 570 T
(g1) 81 557 T
(g2) 81 544 T
(g3) 81 505 T
(g53) 81 492 T
(g56) 81 479 T
(g81) 81 466 T
(g82) 81 453 T
(g83) 81 427 T
(g84) 81 414 T
(g90) 81 401 T
(if) 81 375 T
(m3) 81 362 T
(m5) 81 349 T
(m6) 81 336 T
(m8) 81 323 T
(m9) 81 310 T
(m28) 81 297 T
(m67) 81 284 T
(m72) 81 271 T
(m950) 81 258 T
(n) 81 245 T
(p) 81 232 T
(r) 81 206 T
(s) 81 180 T
(t) 81 167 T
(w) 81 154 T
(x) 81 141 T
(y) 81 128 T
(z) 81 115 T
(!) 81 102 T
126 90 396 630 R
7 X
V
0 X
(Use the tool offset value of tool in the following slot.) 126 622 T
(Set the feed rate to the following value.) 126 609 T
(Go to the line number indicated.) 126 596 T
(Run the following subroutine.) 126 583 T
(Ignore feed rate and move at traverse speed \050fast\051.) 126 570 T
(Move in a straight line to the specified point.) 126 557 T
1.74 (Make a clockwise arc of less than a semicircle to the) 126 544 P
(point given by x and y, using the radius given by r.) 126 531 T
(If z-value is given, move linearly in z, making a helix.) 126 518 T
(Like g2, except counterclockwise.) 126 505 T
(Cancel the x and y zero settings.) 126 492 T
(Set x and y zero.) 126 479 T
(Traverse to r-plane, feed to z-value, retract.) 126 466 T
(Traverse to r-plane, feed to z-value, hesitate, retract.) 126 453 T
(Traverse to r-plane, peck feed to z-value, retract.) 126 427 T
(Run an air-pressure driven tapping cycle.) 126 414 T
-0.47 (Interpret x, y, and z values as coordinates measured from) 126 401 P
(the current origin.) 126 388 T
(Check the truth of an expression. Do something if true) 126 375 T
(Start the spindle clockwise) 126 362 T
(Stop the spindle.) 126 349 T
(Retract the spindle.) 126 336 T
(Turn flood coolant on.) 126 323 T
(Turn flood coolant off.) 126 310 T
(Unknown - not documented.) 126 297 T
(Unknown - not documented) 126 284 T
(Lock the quill against motion in the z-direction.) 126 271 T
(Set the z-axis offset parameter.) 126 258 T
(Starts line number, has no effect except as goto label.) 126 245 T
(Denotes a parameter.  Used in a variety of ways.) 126 232 T
(If used with g2 or g3, the following number is a radius.) 126 206 T
(Otherwise, following number is a z-value above part.) 126 193 T
(Set the spindle speed to the following number.) 126 180 T
(Change to the tool whose slot number follows.) 126 167 T
(The following number is a w-axis value.) 126 154 T
(The following number is an x-value.) 126 141 T
(The following number is a y-value.) 126 128 T
(The following number is a z-value.) 126 115 T
(What follows on this line is only a comment.) 126 102 T
414 90 531 630 R
7 X
V
0 X
(many functions) 414 622 T
(many functions) 414 609 T
(depth_loop, version 2) 414 596 T
(3 set0\325s) 414 583 T
(many functions) 414 570 T
(many functions) 414 557 T
(many functions) 414 544 T
(many functions) 414 505 T
(many functions) 414 492 T
(change_tool, 3 set0\325s) 414 479 T
(center_drill_nc) 414 466 T
(cbore_hole_nc) 414 453 T
(csink_hole_nc) 414 440 T
(hole_nc) 414 427 T
(tap_hole_nc) 414 414 T
(many functions) 414 401 T
(depth_loop, version 2) 414 375 T
(change_tool) 414 362 T
(close_nc, 3 set0\325s) 414 349 T
(many functions) 414 336 T
(many functions) 414 323 T
(many functions) 414 310 T
(2 set0\325s) 414 297 T
(2 set0\325s) 414 284 T
(pocket_chunk) 414 271 T
(close_nc, init_nc, set0z) 414 258 T
(print_nc_line) 414 245 T
(depth_loop, version 2) 414 232 T
(3 set0\325s) 414 219 T
(many functions) 414 206 T
(many functions) 414 180 T
(change_tool) 414 167 T
(init_nc, close_nc) 414 154 T
(many functions) 414 141 T
(many functions) 414 128 T
(many functions) 414 115 T
(many functions) 414 102 T
72 90 540 693 R
1 H
0 Z
N
FMENDPAGE
%%EndPage: "38" 45
%%Page: "39" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 39 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        2.2.) 72 685 S
188.96 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (An Example) 125.04 685 S
-0.77 0.36 (To understand how NC-code is interpreted, it is useful to look at an example.  Here are seven) 72 659 B
0.36 (typical lines taken from a program written by the VWS2 system.) 72 646 S
0.36 (      n0025 g90 g0 s3437 t2 d2 m3 m6) 72 620 S
0.36 (      n0026 g56 g90 x\050p66\051 y\050p67\051) 72 607 S
0.36 (      n0027 m8) 72 594 S
0.36 (      n0028 x+0.3816 y-0.26) 72 581 S
0.36 (      n0029 g90 g0 z+0.1) 72 568 S
0.36 (      n0030 g1 z+0.0 f5) 72 555 S
0.36 (      n0031 g2 x+0.0473 y+0.2094 r+0.3538 z-0.0121) 72 542 S
0.36 (By referring to Table 6, we can interpret the seven lines of code as follows.) 72 516 S
0.31 0.36 (To begin with, the first entry on each line is simply a line number.  The alphabetic part of) 72 490 B
0.36 (the line number is "n", and the numeric parts are in numerical order.) 72 477 S
0.36 (The entries on line n0025 mean:) 72 451 S
0.36 (      g90 = use absolute positioning with respect to the current origin) 72 438 S
0.36 (      g0  = move at traverse rate when a move is indicated) 72 425 S
0.36 (      s3437 = set the spindle speed to 3437 rpm) 72 412 S
0.36 (      t2 = put the tool in changer slot 2 into the spindle) 72 399 S
0.36 (      d2 = use the tool offset value stored for the tool in slot 2) 72 386 S
0.36 (      m3 = start the spindle clockwise at the new spindle speed) 72 373 S
0.36 (      m6 = retract the spindle) 72 360 S
0.82 0.36 (In executing this line, the controller retracts the spindle first, then stops it if it is turning) 72 334 B
-0.38 0.36 (\050even though there is no m5 command\051, finds tool 2, puts it into the spindle, and restarts the) 72 321 B
1.18 0.36 (spindle at 3437 rpm.  Notice that the g90 and g0 commands have no effect on this line.) 72 308 B
-0.8 0.36 (These commands continue in effect until countermanded by some other g code and may have) 72 295 B
0.36 (an effect on following lines.) 72 282 S
0.36 (The entries on line n0026 mean:) 72 256 S
0.36 (      g56 = Set the x and y values of the origin at the values given on this line) 72 243 S
0.36 (                \050in absolute coordinates\051) 72 230 S
0.36 (      g90 = use absolute positioning with respect to the current origin) 72 217 S
0.36 (      x\050p66\051 = the x value is the value of parameter 66 \050which must have been set earlier\051) 72 204 S
0.36 (      y\050p67\051 = the y value is the value of parameter 67 \050which must have been set earlier\051) 72 191 S
0.36 (The machine does not move when this line is executed, it just changes internal variables.) 72 165 S
0.36 (The entry on line n0027 means:) 72 139 S
0.36 (      m8 = turn on flood coolant) 72 126 S
FMENDPAGE
%%EndPage: "39" 46
%%Page: "40" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 40 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (The entries on line n0028 mean:) 72 685 S
0.36 (      x+0.3816 = move to where x equals 0.3816) 72 672 S
0.36 (      y-0.26 = move to where y equals -0.26) 72 659 S
1.02 0.36 (The spindle moves in a straight line at traverse speed \050as set on line n0025\051 to the point) 72 633 B
-0.47 0.36 (whose x and y values are given on this line.  The x and y values are measured as coordinates) 72 620 B
0.36 (with respect to the new origin set on line n0026.) 72 607 S
0.36 (The entries on line n0029 mean:) 72 581 S
0.36 (      g90 = use absolute positioning with respect to the current origin) 72 568 S
0.36 (      g0  = move at traverse rate) 72 555 S
0.36 (      z+0.1 = move to where z equals 0.1) 72 542 S
-0.42 0.36 (Neither the g90 nor the g0 is really essential on this line, since both are already in force, but) 72 516 B
1.11 0.36 (they do no harm, either.  There are many instances in the VWS2 system of reiterating g) 72 503 B
3.3 0.36 (codes that are already in force.  This programming practice is recommended in the) 72 490 B
0.36 (programming manual [MONA]. Codes other than g codes are not reiterated.) 72 477 S
0.36 (The entries on line n0030 mean:) 72 451 S
0.36 (      g1 = move in a straight line at the current feed rate) 72 438 S
0.36 (      z+0.0 = move to where z equals 0.0) 72 425 S
0.36 (      f5 = set the feed rate to 5 inches per minute) 72 412 S
0.36 (The feed rate will be reset before the move starts.) 72 386 S
0.36 (The entries on line n0031 mean:) 72 360 S
0.36 (      g2 = make a clockwise arc in the xy-plane) 72 347 S
0.36 (      x+0.0473 = the arc should end where x equals 0.0473) 72 334 S
0.36 (      y+0.2094 = the arc should end where y equals 0.2094) 72 321 S
0.36 (      r+0.3538 = the radius of the arc should be 0.3538) 72 308 S
0.36 (      z-0.0121 = at the same time, move the tool to where z equals -0.0121) 72 295 S
-0.17 0.36 (The z move is linear, so that the actual tool path is a portion of a helix. The feed rate which) 72 269 B
-0.4 0.36 (was set on the preceding line is still in effect, as is the g90 command on the line before that.) 72 256 B
-0.21 0.36 (Two clockwise arcs are possible. The one that is less than a semicircle is used.  If the given) 72 243 B
0.36 (radius is too small, the controller will come to a halt and post an error message.) 72 230 S
FMENDPAGE
%%EndPage: "40" 47
%%Page: "41" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 41 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        2.3.) 72 685 S
298.23 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (First and Last Lines of a Program) 125.04 685 S
0.36 (The first line of an NC program always has the following format:) 72 659 S
0.36 (      n0001 \050ID,PROG,lok1nc,locking clevis first cut,1\051) 72 633 S
0.12 0.36 (The term "lok1nc" on the above line is the program identifier, and may be replaced by any) 72 607 B
-0.45 0.36 (other sequence of not more than six alphanumeric characters.  The term "locking clevis first) 72 594 B
-0.61 0.36 (cut" on the above line is a brief description of the program and may be replaced by any other) 72 581 B
1.28 0.36 (sequence of not more than 30 alphanumeric characters and spaces.  No other spaces are) 72 568 B
0.36 (allowed within the parentheses.) 72 555 S
0.36 (The last line always has the format:) 72 529 S
0.36 (      n0160 \050END,PROG\051) 72 503 S
0.36 (where "0160" may be replaced by any other four digits.) 72 477 S
0.36 (        3.  GENERAL APPROACH TO CODE-WRITING) 72 451 S
0.36 (        3.1.) 72 425 S
188.69 423.8 125.04 423.8 2 L
V
N
0.36 (Introduction) 125.04 425 S
-0.25 0.36 (As noted earlier, if the NC-code writing option of the Data Execution module is on, a block) 72 399 B
0.59 0.36 (of code is written for each step in the enhanced process plan.  Since there are twenty-one) 72 386 B
-0.5 0.36 (different work elements in the VWS2 system, and two of them \050face_mill and fly_cut\051 share) 72 373 B
1.03 0.36 (an NC-coding function, there are twenty coding functions which may be called.  Five of) 72 360 B
0.17 0.36 (these \050init_nc, close_nc, and the three zero-setting functions\051 do not write code for cutting) 72 347 B
0.36 (metal; the other 15 do.) 72 334 S
0.16 0.36 (The 15 coders for metal cutting always check first if a tool change is required, and make a) 72 308 B
-0.27 0.36 (change if needed.  In order to do this, the module keeps track at all times of which tool is in) 72 295 B
0.12 0.36 (the spindle.  The module also keeps track of the current spindle speed, and changes it only) 72 282 B
0.56 0.36 (when necessary.  Earlier versions of the system kept track of other items, as well, but the) 72 269 B
0.74 0.36 (benefit of keeping track \050in shorter code and reduced machining time\051 was slight and not) 72 256 B
0.36 (worth the cost of complicating the NC-coding system.) 72 243 S
0.87 0.36 (At the end of a cut, the tool is always left down in the material, and it is left to the next) 72 217 B
0.36 (operation to withdraw the tool.) 72 204 S
0.47 0.36 (The NC-code is written as pseudocode by the system and stored in reverse order from the) 72 178 B
2.76 0.36 (way it will ultimately appear in the file.  At the end of the module\325s operation, the) 72 165 B
-0.27 0.36 (pseudocode is printed out as real NC-code. Also at the end of the module\325s operation, if the) 72 152 B
-0.57 0.36 (drawing option is on, a copy of the pseudocode \050in the correct order\051 is given to the graphics) 72 139 B
-0.28 0.36 (system in case the user wants to see the tool path.  If the module aborts during operation, as) 72 126 B
2.14 0.36 (it may if some feature or operation fails verification, the pseudocode is scrapped, and) 72 113 B
0.36 (nothing is printed out.) 72 100 S
FMENDPAGE
%%EndPage: "41" 48
%%Page: "42" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 42 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.2.) 72 685 S
280.11 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Pseudocode and Print Routine) 125.04 685 S
0.83 0.36 (The use of pseudocode was adopted principally to simplify the job of writing NC-coding) 72 662 B
-0.38 0.36 (functions, but it has proved to have several other advantages.  The biggest side advantage is) 72 650 B
-0.44 0.36 (that pseudocode is easily used by the drawing system to draw tool paths.  This is because its) 72 638 B
0.96 0.36 (format is native to LISP and because conceptually separate items \050such as the name of a) 72 626 B
0.87 0.36 (coordinate and its value\051 are still separate.  Drawing from real code would require that a) 72 614 B
-0.25 0.24 (parsing routine be written to separate groups of characters into conceptually distinct bunches.) 72 602 B
0.4 0.24 (An earlier version of the system wrote NC-code line-by-line to a file, opening and closing a) 72 580 B
0.92 0.24 (port repeatedly.  The system could not handle the frequent opening and closing of the port) 72 568 B
1.07 0.24 (correctly, and was dropping lines of code.  The use of pseudocode cleared the problem up) 72 556 B
0.24 (since the port is opened only once and closed once.) 72 544 S
0.19 0.36 (Pseudocode is stored in the LISP environment as a list of sublists.  Each sublist represents) 72 522 B
0.27 0.36 (one line of code.  The pseudocode differs from the final code in the following respects \050in) 72 510 B
-0.17 0.36 (addition to the obvious difference of the pseudocode being in the environment only and the) 72 498 B
0.36 (real code being in a file only\051.) 72 486 S
1.12 0.36 (A.  In pseudocode floating point numbers are kept with all the significant figures) 90 464 B
-0.3 0.36 (LISP provides \05017 or so\051.  In real code, floating point numbers are rounded off to) 108 451 B
-0.14 0.36 (4 decimal places, and terminal zeros are suppressed in the second through fourth) 108 438 B
0.36 (places.) 108 425 S
0.69 0.36 (B.  In pseudocode some numbers may be either fixed or floating point and may or) 90 402 B
-0.01 0.36 (may not have a sign; namely numbers that represent values of r, x, y, or z.  Such) 108 389 B
1.61 0.36 (numbers are converted to floating point numbers by the print routine and are) 108 376 B
0.36 (always printed with a sign.) 108 363 S
1.6 0.36 (C.  In pseudocode there are no line numbers; they are not needed since lists are) 90 340 B
1.7 0.36 (inherently ordered.  Line numbers appear in the real code.  The numbers are) 108 327 B
0.24 0.36 (generated by the print routine, which uses a counter to keep track.  The absence) 108 314 B
-0.42 0.36 (of line numbers in pseudocode is a big help when copies of several lines are to be) 108 301 B
0.36 (made, as when repeating code at several different depths.) 108 288 S
0.2 0.36 (D.  Pseudocode may contain strings.  Real code contains no strings. Strings may be) 90 265 B
0.36 (used to hold bits of code that will be welded together by the print routine.) 108 252 S
0.49 0.36 (E.  The print routine automatically deletes spaces following some characters in the) 90 229 B
0.36 (pseudocode, unless instructed otherwise.) 108 216 S
0.92 0.36 (F.  Pseudocode may contain three terms which are not printed, but are interpreted) 90 193 B
0.36 (specially by the print routine.  These are:) 108 180 S
3 F
(Term                                                   Interpretation) 84 157 T
2 F
0.36 (    nil) 72 131 S
0.12 (Do not print anything.  Using nil simplifies the writing of NC-coding functions.) 147.36 131 S
0.36 (    sign) 72 118 S
0.36 ( Print the sign of the following number.) 144 118 S
0.36 (    no_space) 72 105 S
0.36 ( Do not put any space between the previous and following items.) 144 105 S
72 90 540 171 R
0.5 H
N
72 153 540 153 2 L
2 Z
N
FMENDPAGE
%%EndPage: "42" 49
%%Page: "43" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 43 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.11 0.24 (The pseudocode that results in the seven lines of code given in the example of section 2.2. is) 72 672 B
0.24 (as follows:) 72 659 S
(      \050g2 x 0.04729792843330796 y 0.2093696684367282 r 0.35375 z -0.0121017118049899\051) 72 633 T
(      \050g1 z 0 f 5\051) 72 620 T
(      \050g90 g0 z 0.1\051) 72 607 T
(      \050x 0.3816198612624016 y -0.26\051) 72 594 T
(      \050m8\051) 72 581 T
(      \050g56 g90 "x\050p66\051" "y\050p67\051"\051) 72 568 T
(      \050g90 g0 s 3437 t 2 d 2 m3 m6\051) 72 555 T
(An example of line made up in bits is the following:) 72 529 T
(      \050"p66=\050p97" sign 0.0 no_space "\051" "p67=\050p98" sign 0.0 no_space "\051"\051) 72 503 T
(If this happens to be line 18, it prints out as follows:) 72 477 T
(      n0018 p66=\050p97+0.0\051 p67=\050p98+0.0\051) 72 451 T
0.36 (        3.3.) 72 425 S
179.93 423.8 125.04 423.8 2 L
V
0.6 H
0 Z
N
0.36 (Comments) 125.04 425 S
-0.42 0.36 (Whenever a tool change occurs, a comment line is put into the NC-code, describing the new) 72 399 B
0.04 0.36 (tool.  Most of the 15 metal cutters insert a comment describing the operation or the feature) 72 386 B
0.06 0.36 (being machined.  The comment may appear on a separate line, or at the end of an effective) 72 373 B
-0.29 0.36 (line.) 72 360 B
-0.28 0.24 (  Comments are denoted by an exclamation mark \050!\051, and anything following the mark) 94.8 360 B
-0.29 0.36 ( on) 524.21 360 B
-0.38 0.36 (a line of code is interpreted as a comment, no matter how it would ordinarily be interpreted.) 72 347 B
0.36 (        3.4.) 72 321 S
234.56 319.8 125.04 319.8 2 L
V
N
0.36 (Machine Capabilities) 125.04 321 S
0.36 (        3.4.1.  Introduction) 72 295 S
-0.33 0.36 (The NC-codes selected to be used in the VWS2 system were generally ones which stand for) 72 269 B
-0.17 0.36 (capabilities which are common to most numerically controlled milling machines.  This was) 72 256 B
0.78 0.36 (done so that the system could be adapted easily to other machines.  The system has been) 72 243 B
0.05 0.36 (adapted for a different milling machine at the University of Maryland, and parts have been) 72 230 B
0.36 (cut using NC-code written by the adapted system.) 72 217 S
2.63 0.36 (By not using any of the zero-setting routines, and using version 1 of the depth_loop) 72 191 B
-0.16 0.36 (function, only the common capabilities listed in the next subsection are needed, except that) 72 178 B
1.31 0.36 (init_nc, close_nc, and change_tool all would have to be rewritten for a milling machine) 72 165 B
0.36 (which does not have parameter capability, since those three functions use parameters.) 72 152 S
FMENDPAGE
%%EndPage: "43" 50
%%Page: "44" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 44 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        3.4.2.  Common Capabilities) 72 685 S
1.47 0.36 (The following capabilities used in the VWS2 system we believe to be common to most) 72 659 B
-0.57 0.36 (numerically controlled machine tools.) 72 646 B
-0.53 0.12 (They are given here in the order they appear in Table) 271.17 646 B
-0.57 0.36 ( 6.) 527.49 646 B
0.36 (1.  use a tool offset value) 86 633 S
0.36 (2.  set feed rate) 86 620 S
0.36 (3.  move at traverse speed) 86 607 S
0.36 (4.  mill in a straight line in three dimensions) 86 594 S
0.36 (5.  make a circular arc in two dimensions or a helical arc in three) 86 581 S
0.36 (6.  run canned cycles like those represented by g81, g82, g83, and g84.) 86 568 S
0.36 (7.  interpret x, y, and z values as coordinates) 86 555 S
-0.56 0.36 (     \050the alternative is to interpret x, y, and z values as distances from the current location\051.) 86 542 B
0.36 (8.  start and stop the spindle) 86 529 S
0.36 (9.  retract the spindle) 86 516 S
0.36 (10. turn coolant on and off) 86 503 S
0.36 (11. lock the quill) 86 490 S
0.36 (12. use NC-code with line numbers in it) 86 477 S
0.36 (13. set spindle speed) 86 464 S
0.36 (14. use radii in making arcs and traverse to a given z in canned cycles) 86 451 S
0.36 (15. change a tool) 86 438 S
0.36 (16. move the w-axis) 86 425 S
0.36 (17. use NC-code with comments in it) 86 412 S
-0.75 0.36 (The air pressure driven tapping cycle used to implement the g84 code on the Monarch VMC-) 72 386 B
-0.69 0.36 (75 is not a common capability, but a canned tapping cycle of some sort is common and could) 72 373 B
0.36 (be substituted.) 72 360 S
0.36 (        3.4.3.  Less Common Capabilities) 72 334 S
3.02 0.36 (The least common capability of a milling machine used in the VWS2 system is the) 72 308 B
3.32 0.36 (Monarch\325s probing capability.  This capability is employed in the three zero-setting) 72 295 B
2.29 0.36 (operations.  Probing is used in the system principally so that we can deal with slight) 72 282 B
-0.09 0.36 (variations in the location of parts which have been loaded automatically by a robot into the) 72 269 B
1.82 0.36 (vise.  The g53, g56, m27, m28, and m950 codes and subroutine calls are used only in) 72 256 B
0.36 (connection with zero-setting.) 72 243 S
-0.36 0.36 (A second less common capability is the use of parameters and the evaluation of expressions) 72 217 B
1.64 0.36 (including parameters.  Parameters are used in the three zero-setting operations, init_nc,) 72 204 B
0.36 (close_nc, change_tool, and the second version of depth_loop.) 72 191 S
1.45 0.36 (The last two uncommon capabilities are used only in the second version of depth_loop,) 72 165 B
-0.3 0.36 (namely jumping to some other line of code than the next one \050a "goto" statement\051 and using) 72 152 B
0.9 0.36 (the conditional "if" to trigger the jump.  The depth_loop function writes all the NC-code) 72 139 B
2.67 0.36 (needed to repeat a series of lines of code at increasing depths.  The first version of) 72 126 B
-0.63 0.36 (depth_loop prints new lines at each new depth.  The second version reuses the lines by using) 72 113 B
2.62 0.36 (a parameter to represent depth, using "if" and "goto" to loop back as many times as) 72 100 B
FMENDPAGE
%%EndPage: "44" 51
%%Page: "45" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 45 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.9 0.36 (necessary, and increasing the value of the depth parameter on each loop.  The use of the) 72 685 B
2.71 0.36 (second version of depth_loop may save several hundred lines in a) 72 672 B
2.42 (1000 line program,) 443.5 672 P
(depending upon the nature of the cuts, of course.) 72 659 T
0.36 (        4.  SIMPLE ALGORITHMS) 72 633 S
0.36 (        4.1.) 72 607 S
165.92 605.8 125.04 605.8 2 L
V
0.6 H
0 Z
N
0.36 (Drilling) 125.04 607 S
0.04 0.36 (The drill is located over the center of the hole, brought down quickly to 0.1 inch above the) 72 581 B
-0.84 0.36 (material, and fed vertically downwards to make the hole. During feeding the drill is retracted) 72 568 B
0.36 0.36 (for a moment and then fed back into the hole each time it goes another pass depth deeper.) 72 555 B
0.07 0.36 (This is called pecking.  Once in the right xy location, the entire algorithm is carried out by) 72 542 B
0.36 (a g83 canned cycle on one line of NC-code.) 72 529 S
0.36 (        4.2.) 72 503 S
167.56 501.8 125.04 501.8 2 L
V
N
0.36 (Tapping) 125.04 503 S
0.39 0.36 (The tap is located over the center of the hole, brought down quickly to 0.1 inch above the) 72 477 B
0.9 0.36 (material, and pushed vertically downwards by air pressure. The tap screws itself into the) 72 464 B
-0.39 0.36 (material to the given depth.  The spindle reverses and unscrews the tap from the hole.  Once) 72 451 B
-0.43 0.36 (in the right xy location, the entire algorithm is carried out by a g84 canned cycle on one line) 72 438 B
0.36 (of NC-code.) 72 425 S
0.36 (        4.3.) 72 399 S
204.08 397.8 125.04 397.8 2 L
V
N
0.36 (Countersinking) 125.04 399 S
1.03 0.36 (The countersink is located over the center of the hole, brought down quickly to 0.1 inch) 72 373 B
-0.31 0.36 (above the material, and fed vertically downwards to the necessary depth.  At the final depth) 72 360 B
0.47 0.36 (the tool hesitates \050dwells\051 for half a second to make a clean cut, and then it is withdrawn.) 72 347 B
0.39 0.36 (Once in the right xy location, the entire algorithm is carried out by a g82 canned cycle on) 72 334 B
0.36 (one line of NC-code.) 72 321 S
0.36 (        4.4.) 72 295 S
261.37 293.8 125.04 293.8 2 L
V
N
0.36 (Milling a Straight_Groove) 125.04 295 S
0.41 0.36 (A straight groove is milled by ramping the tool back and forth into the material.  On each) 72 269 B
0.36 (ramp the tool is angled downwards at the minimum of:) 72 256 S
0.36 (A. the maximum ramping angle,) 90 243 S
-0.4 0.36 (B. an angle that will make the vertical depth of the cut at the far end of the groove be) 90 230 B
0.36 (one pass_depth,) 108 217 S
0.36 (C. an angle that will reach the bottom of the groove at the far end.) 90 204 S
-0.31 0.36 (After the last ramp is done, the tool is returned to the starting point at constant depth) 90 191 B
0.36 (to complete the work.) 108 178 S
0.33 0.36 (If the length of the tool_path for a straight_groove is less than 0.1 inches, then the groove) 72 152 B
0.54 0.36 (is too short to ramp.  In this case, an error message is issued, and the groove is milled by) 72 139 B
-0.59 0.36 (plunging at a low feed rate into the material at one end of the groove and milling to the other) 72 126 B
-0.31 0.36 (end. The experienced user, having been notified, can then decide whether or not it is safe to) 72 113 B
0.36 (use this code.) 72 100 S
FMENDPAGE
%%EndPage: "45" 52
%%Page: "46" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 46 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        4.5.) 72 685 S
214.13 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Milling a Groove) 125.04 685 S
-0.12 0.36 (The set of corners for the groove is converted into a set of contour corners, and the contour) 72 659 B
0.36 (groove milling algorithm is used.) 72 646 S
0.36 (        4.6.) 72 620 S
185.96 618.8 125.04 618.8 2 L
V
N
0.36 (Chamfering) 125.04 620 S
1.63 0.36 (A chamfer tool is moved on a path that is a rectangle with \050possibly\051 rounded corners.) 72 594 B
0.08 0.36 (Recall that a chamfering operation breaks an edge where a vertical wall meets a horizontal) 72 581 B
0.53 0.36 (surface of the part.  The tool meets the vertical wall at exactly half a tool radius from the) 72 568 B
0.36 (axis of the tool and cuts with only the upper half of the tool.) 72 555 S
0.36 (        4.7.) 72 529 S
203.44 527.8 125.04 527.8 2 L
V
N
0.36 (Center Drilling) 125.04 529 S
-0.07 0.36 (A center drill is brought to the correct xy location, brought down quickly to 0.1 inch above) 72 503 B
1.12 0.36 (the material, and fed vertically downwards to the necessary depth.  Once in the right xy) 72 490 B
0.36 (location, the entire algorithm is carried out by a g81 canned cycle on one line of NC-code.) 72 477 S
0.36 (        4.8.) 72 451 S
199.72 449.8 125.04 449.8 2 L
V
N
0.36 (Counterboring) 125.04 451 S
1.09 0.36 (The counterboring algorithm is identical to the countersinking algorithm, except that the) 72 425 B
-0.09 0.36 (dwell time is the amount of time it takes for the spindle to make two full turns, or a quarter) 72 412 B
0.36 (of a second, whichever is greater.) 72 399 S
0.36 (        5.  NON-TRIVIAL BUT EASY ALGORITHMS) 72 373 S
0.36 (        5.1.) 72 347 S
191.03 345.8 125.04 345.8 2 L
V
N
0.36 (Face Milling) 125.04 347 S
0.79 0.36 (The face milling algorithm mills away a rectangular area of the top of the part to a fixed) 72 321 B
1.06 0.36 (depth.  Normally the rectangle includes the whole top surface of the part, but this is not) 72 308 B
0.36 (required.) 72 295 S
-0.48 0.36 (If the rectangle is longer in the x-direction than the y-direction, the face mill is fed back and) 72 271 B
0.51 0.36 (forth across the part parallel to the x-axis, removing a strip of material one stepover wide) 72 258 B
0.27 0.36 (on each horizontal move. After each move parallel to the x-axis, the tool is rapidly moved) 72 245 B
0.43 0.36 (one stepover in the y-direction while it is outside the rectangle.  The last move parallel to) 72 232 B
0.41 0.36 (the x-axis is adjusted so that the face mill extends beyond the rectangle by 0.1 inch in the) 72 219 B
0.36 (positive y-direction \050less if the last strip is nearly as wide as the tool\051.) 72 206 S
0.55 0.36 (If the total depth to be milled is greater than the pass depth, the same moves are repeated) 72 182 B
0.36 (until the final depth is reached.) 72 169 S
0.31 0.36 (If the rectangle is longer in the y-direction than the x-direction, the back and forth motion) 72 145 B
0.36 (is parallel to the y-axis and the stepover is made in the x-direction.) 72 132 S
-0.21 0.36 (The back and forth motion results in an alternation between conventional cutting and climb) 72 108 B
0.36 (cutting.  This has not proved to be a problem.) 72 95 S
FMENDPAGE
%%EndPage: "46" 53
%%Page: "47" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 47 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        5.2.) 72 685 S
184.02 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Fly Cutting) 125.04 685 S
0.39 0.36 (The fly cutting algorithm is identical to the face milling algorithm.  In fact, the same NC-) 72 659 B
0.42 0.36 (coding function is used for both.  Of course speeds, feed rates, pass depths, and stepovers) 72 646 B
0.36 (are different for the two operations, but these are arguments to the NC-coding function.) 72 633 S
0.36 (        6. SOPHISTICATED ALGORITHMS) 72 607 S
0.36 (        6.1.) 72 581 S
201.76 579.8 125.04 579.8 2 L
V
N
0.36 (Pocket Milling) 125.04 581 S
0.36 (        6.1.1.  Introduction) 72 555 S
1.41 0.36 (The normal pocket algorithm is non-trivial but easy.  However, the overall algorithm is) 72 529 B
0.19 0.36 (complicated by the variety of situations it is designed to handle.  The complicating factors) 72 516 B
-0.05 0.36 (are:  very small pockets, small pockets, and making the initial slot.  Figure 6 shows the top) 72 503 B
1.22 0.36 (view of the cutter path for the normal situation and the three complications in milling a) 72 490 B
0.36 (pocket.) 72 477 S
0.36 (        6.1.2.  Normal Pocket Algorithm) 72 451 S
-0.4 0.36 (As shown in Figure 6\050A\051, the normal situation is that a slot is milled across the center of the) 72 425 B
-0.41 0.36 (pocket to full depth.  Then several passes are made at successively increasing depths to mill) 72 412 B
0.16 0.36 (away the bulk of the material inside the pocket to within 0.01 inch of the final sides of the) 72 399 B
-0.19 0.36 (pocket.  Finally, a finish pass around the perimeter of the pocket is done at the full depth to) 72 386 B
0.36 (even up the sides of the pocket.) 72 373 S
-0.28 0.36 (The bulk removal passes are identical except for the depth of the cut.  On each pass the tool) 72 347 B
0.78 0.36 (is inserted in the initial slot, moved downwards and to the right to start the cut, and then) 72 334 B
0.28 0.36 (passed around the expanding periphery of uncut material in a clockwise direction, moving) 72 321 B
0.31 0.36 (downwards and to the right again after each full circuit.  On the first few circuits, the tool) 72 308 B
2.63 0.36 (path is rectangular, but as milling proceeds, the corners of the rectangle are rounded) 72 295 B
0.36 (concentrically with the corners of the pocket.) 72 282 S
0.36 (        6.1.3.  Very Small Pockets) 72 256 S
-0.28 0.36 (A very small pocket is one whose length and width are both less than 0.02 inch greater than) 72 230 B
-0.39 0.36 (the diameter of the end mill being used to make the pocket.  A very small pocket is made by) 72 217 B
0.45 0.36 (plunging the end mill straight into the material to full depth, and then making a finish cut) 72 204 B
0.03 0.36 (\050unless the tool is the same size as the pocket, in which case no finish cut is needed\051.  This) 72 191 B
0.63 0.36 (is shown in Figure 6\050B\051.  Because plunge cutting may be unsafe, a message is sent to the) 72 178 B
0.36 (user if a plunge cut is to be made.) 72 165 S
FMENDPAGE
%%EndPage: "47" 54
%%Page: "48" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 48 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        6.1.4.  Small Pockets) 72 685 S
0.43 0.36 (If both the length and the width of the pocket are smaller than 1.5 times the tool diameter) 72 659 B
-0.76 0.36 (plus 0.02 inch, so that there is not enough room to mill a slot, but the pocket is not very small) 72 646 B
0.75 0.36 (\050as defined above\051, bulk material removal is accomplished by generating a set of contour) 72 633 B
-0.81 0.36 (corners, and a contour groove is milled 0.01 inch \050or less, if the pocket is very narrow\051 inside) 72 620 B
-0.69 0.36 (in final walls.  Then a finish pass is made.  This is shown in Figure 6\050C\051.  Because the pocket) 72 607 B
0.36 (is small, making a contour groove will not leave an island inside the pocket.) 72 594 S
0.36 (        6.1.5.  Making the Initial Slot) 72 568 S
-0.34 0.36 (In the normal situation, the length of the initial slot is the difference between the length and) 72 542 B
-0.1 0.36 (width of the pocket.  If the pocket is longer in the x-direction, the slot is horizontal.  If it is) 72 529 B
0.46 0.36 (longer in the y-direction, the slot is vertical.  If the normal size slot is long enough \050more) 72 516 B
0.36 (than one tool radius long\051, it is made by ramping down into it.) 72 503 S
0.29 0.36 (If the pocket is square, or close to it, the normal slot length will be too small for ramping.) 72 477 B
-0.26 0.24 (In this case, as shown in Figure 6\050D\051, the ends of the slot are extended to near the walls of the) 72 464 B
-0.43 0.24 (pocket to allow room for ramping.  This will provide a suitable line unless the pocket is small.) 72 451 B
FMENDPAGE
%%EndPage: "48" 55
%%Page: "49" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 49 -) 293 72 T
1 18 Q
(Figure  6.  Pocket  Cutting  Tool  Paths) 156.75 681 T
72 196 540 671 R
5 X
V
0.5 H
0 Z
0 X
N
153 293 207 320 R
7 X
V
0 180 27 27 180 320 G
3 H
2 Z
0 X
0 180 27 27 180 320 A
7 X
0 180 9 9 180 320 G
0.5 H
0 X
0 180 9 9 180 320 A
360 441 441 441 441 387 495 387 495 297 441 297 441 243
 360 243 360 297 306 297 306 387 360 387 12 Y
7 X
V
90 450 31.5 31.5 427.5 562.5 G
3 H
0 Z
0 X
90 450 31.5 31.5 427.5 562.5 A
160 610 160 657 284 657 283 609 331 610 331 517 284 517
 284 468 160 468 160 517 110 517 110 610 12 Y
7 X
V
0 X
(\050A\051) 216 441 T
240.55 551.45 242.65 549.35 2 L
0.5 H
N
241.84 552.38 242.65 549.35 239.62 550.16 3 L
N
234 558 240.55 551.45 2 L
2 Z
N
219.46 540 216.5 540 2 L
0 Z
N
219.21 538.43 216.5 540 219.21 541.57 3 L
N
234 540 219.46 540 2 L
2 Z
N
180 563.54 180 566.5 2 L
0 Z
N
178.43 563.79 180 566.5 181.57 563.79 3 L
N
180 558 180 563.54 2 L
2 Z
N
230.54 585 233.5 585 2 L
0 Z
N
230.79 586.57 233.5 585 230.79 583.43 3 L
N
216 585 230.54 585 2 L
2 Z
N
258.55 533.45 260.65 531.35 2 L
0 Z
N
259.83 534.38 260.65 531.35 257.62 532.17 3 L
N
252 540 258.55 533.45 2 L
2 Z
N
261 561.46 261 558.5 2 L
0 Z
N
262.57 561.21 261 558.5 259.43 561.21 3 L
N
261 567 261 561.46 2 L
2 Z
N
219.46 522 216.5 522 2 L
0 Z
N
219.21 520.43 216.5 522 219.21 523.57 3 L
N
234 522 219.46 522 2 L
2 Z
N
162 563.54 162 566.5 2 L
0 Z
N
160.43 563.79 162 566.5 163.57 563.79 3 L
N
162 558 162 563.54 2 L
2 Z
N
230.54 603 233.5 603 2 L
0 Z
N
230.79 604.57 233.5 603 230.79 601.43 3 L
N
216 603 230.54 603 2 L
2 Z
N
279 561.46 279 558.5 2 L
0 Z
N
280.57 561.21 279 558.5 277.43 561.21 3 L
N
279 567 279 561.46 2 L
2 Z
N
7 X
90 450 4.5 4.5 427.5 562.5 G
0 Z
0 X
90 450 4.5 4.5 427.5 562.5 A
90 450 1 1 427 563 G
90 450 1 1 427 563 A
(\050B\051) 414 504 T
7 X
0 90 58.5 58.5 436.5 382.5 G
3 H
2 Z
0 X
0 90 58.5 58.5 436.5 382.5 A
495 382 495 301 2 L
N
7 X
270 360 58.5 58.5 436.5 301.5 G
0 X
270 360 58.5 58.5 436.5 301.5 A
437 243 365 243 2 L
N
7 X
180 270 58.5 58.5 364.5 301.5 G
0 X
180 270 58.5 58.5 364.5 301.5 A
306 301 306 382 2 L
N
7 X
90 180 58.5 58.5 364.5 382.5 G
0 X
90 180 58.5 58.5 364.5 382.5 A
365 441 437 441 2 L
N
401 337 419 319 383 319 383 364 419 364 419 319 437 301
 365 301 365 382 437 382 437 283 365 283 12 L
0.5 H
N
180 270 18 18 365 301 A
347 301 347 382 2 L
N
90 180 18 18 365 382 A
365 400 437 400 2 L
N
0 90 18 18 437 382 A
455 382 455 301 2 L
N
270 360 18 18 437 301 A
437 283 437 265 2 L
N
437 265 365 265 2 L
N
180 270 36 36 365 301 A
329 301 329 382 2 L
N
90 180 36 36 365 382 A
365 418 437 418 2 L
N
0 90 36 36 437 382 A
473 382 473 301 2 L
N
270 360 36 36 437 301 A
437 261 365 261 2 L
N
180 270 40.5 40.5 364.5 301.5 A
324 301 324 382 2 L
N
90 180 40.5 40.5 364.5 382.5 A
365 423 437 423 2 L
N
0 90 40.5 40.5 436.5 382.5 A
477 382 477 301 2 L
N
270 360 40.5 40.5 436.5 301.5 A
401 418 401 265 2 L
N
(\050D\051) 397 211 T
7 X
180 360 27 27 180 293 G
3 H
0 X
180 360 27 27 180 293 A
153 320 153 293 2 L
N
207 320 207 293 2 L
N
7 X
0 180 4.5 4.5 180.5 319.5 G
0.5 H
0 X
0 180 4.5 4.5 180.5 319.5 A
176 320 176 293 2 L
N
185 320 185 293 2 L
N
171 320 171 293 2 L
N
189 320 189 293 2 L
N
7 X
180 360 9 9 180 293 G
0 X
180 360 9 9 180 293 A
7 X
180 360 4.5 4.5 180.5 292.5 G
0 X
180 360 4.5 4.5 180.5 292.5 A
(\050C\051) 162 238 T
7 X
0 90 49.5 49.5 281.5 608.5 G
3 H
0 X
0 90 49.5 49.5 281.5 608.5 A
7 X
90 180 49.5 49.5 159.5 608.5 G
0 X
90 180 49.5 49.5 159.5 608.5 A
7 X
270 360 49.5 49.5 281.5 518.5 G
0 X
270 360 49.5 49.5 281.5 518.5 A
7 X
180 270 49.5 49.5 159.5 518.5 G
0 X
180 270 49.5 49.5 159.5 518.5 A
160 658 281 658 2 L
N
331 608 331 518 2 L
N
160 469 281 469 2 L
N
110 608 110 518 2 L
N
204 564 236 564 254 546 186 546 186 582 254 582 254 546
 272 528 168 528 168 600 272 600 272 528 281 510 159 510 14 L
0.5 H
N
180 270 9 9 159 519 A
150 519 150 609 2 L
N
90 180 9 9 159 609 A
159 618 281 618 2 L
N
0 90 9 9 281 609 A
290 609 290 519 2 L
N
270 360 9 9 281 519 A
281 510 281 492 2 L
N
281 492 159 492 2 L
N
180 270 27 27 159 519 A
132 519 132 609 2 L
N
90 180 27 27 159 609 A
159 636 281 636 2 L
N
0 90 27 27 281 609 A
308 609 308 519 2 L
N
270 360 27 27 281 519 A
281 492 281 487 2 L
N
281 487 159 487 2 L
N
180 270 31.5 31.5 159.5 518.5 A
128 519 128 609 2 L
N
90 180 31.5 31.5 159.5 608.5 A
159 640 281 640 2 L
N
0 90 31.5 31.5 280.5 608.5 A
312 609 312 519 2 L
N
270 360 31.5 31.5 280.5 518.5 A
75 97 540 187 R
7 X
V
2 12 Q
0 X
(In this figure tool paths are shown for the four variations of the pocket making algorithm.) 75 179 T
(Heavy outlines show the pockets.  Light lines show the tool paths.) 75 166 T
(The distance between the outermost pair of tool path lines, 0.01, is exaggerated in each case.) 75 153 T
(\050A\051 the normal situation. First a slot is made, then material removed, then a finish cut made.) 75 140 T
(\050B\051 a very small pocket.  First a hole is plunge cut, then a finish cut made.) 75 127 T
(\050C\051 a small pocket.  First a contour groove is made and then a finish cut made.) 75 114 T
(\050D\051 length and width are almost equal. The initial slot goes across the pocket, rest is like A.) 75 101 T
72 90 540 671 R
1 H
0 Z
N
FMENDPAGE
%%EndPage: "49" 56
%%Page: "50" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 50 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        6.2.) 72 685 S
190.37 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Text Milling) 125.04 685 S
0.9 0.36 (Text milling is accomplished by milling each character separately.  The first character is) 72 659 B
0.98 0.36 (milled at the starting location of the text.  The routine which generates NC-code for one) 72 646 B
0.36 (character also returns the x-value of the location where the next character should start.) 72 633 S
-0.2 0.36 (The VWS2 methods for dealing with text are described in detail in sections 2.15.7 and 2.16) 72 607 B
0.36 (of chapter II of the design protocol paper [K&J2].) 72 594 S
1.63 0.36 (Each character in each font has a template for making the character stored in the fonts) 72 568 B
-0.31 0.36 (database.  The template for making a character consists of two lists: nc_points and nc_path.) 72 555 B
-0.36 0.36 (In the plain font the letter R, for example, has the nc_points and nc_path shown in Figure 7.) 72 542 B
0.37 0.36 (Each entry on the nc_points list \050except the last one\051 is a pair of numbers which represent) 72 516 B
-0.12 0.36 (the x and y coordinates of a point on the character.  These coordinates are scaled according) 72 503 B
0.36 (to the height of the text and are translated to the proper xy-location.) 72 490 S
-0.11 0.36 (The last entry on the nc_points list is the point to go to when the character is finished.  The) 72 464 B
0.08 0.36 (x-value of the last point is always larger than the x-value of the lower right-hand corner of) 72 451 B
0.98 0.36 (an imaginary parallelogram that just fits around the character by an amount which is the) 72 438 B
0.36 (spacing for the particular font.  The y-value of the last entry is always zero.) 72 425 S
0.22 0.36 (Each entry on the nc_path is a pair in which the first item represents a type of path to mill) 72 399 B
-0.72 0.36 (to the next point, and the second item tells which point on the nc_points list is the next point.) 72 386 B
0.36 (The letter codes found on the nc_path list mean the following:) 72 360 S
0.36 (      s = straight line) 72 347 S
0.36 (      w = clockwise arc) 72 334 S
0.36 (      ccw = counterclockwise arc) 72 321 S
0.36 (      j = jump without milling) 72 308 S
0.36 (The use of nc_points and nc_path to mill the letter R is explained in Figure 7.) 72 282 S
0.36 (If text is deep, it will be cut in several passes.) 72 256 S
-0.4 0.36 (The initial entry of the tool into a text character is by plunge cutting. While this is not ideal,) 72 230 B
0.36 (since text is almost always quite shallow, entry by plunge cutting is almost always safe.) 72 217 S
0.03 0.36 (For most fonts, the radius used for making arcs is of such a size that arcs and straight lines) 72 191 B
-0.18 0.36 (join together smoothly.  However, one of the options of the font maker is to flatten out arcs) 72 178 B
0.37 0.36 (by making the radius larger.  The "angular" font uses this option.  No change in any other) 72 165 B
0.36 (part of the system is required.) 72 152 S
FMENDPAGE
%%EndPage: "50" 57
%%Page: "51" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 51 -) 293 72 T
72 378 540 675 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 675 189 711 540 711 540 351 72 351 72 711 189 711
 189 387 405 387 405 675 10 Y
6 X
0 0 0 1 0 0 0 K
V
225 671 225 383 2 L
0.5 H
2 Z
8 X
N
261 671 261 383 2 L
N
297 671 297 383 2 L
N
333 671 333 383 2 L
N
369 671 369 383 2 L
N
405 671 405 383 2 L
N
189 670 189 383 2 L
N
189 383 405 383 2 L
N
189 419 405 419 2 L
N
189 455 405 455 2 L
N
189 491 405 491 2 L
N
189 527 405 527 2 L
N
189 563 405 563 2 L
N
189 599 405 599 2 L
N
189 635 405 635 2 L
N
189 671 405 671 2 L
N
225 635 225 419 2 L
3 H
4 X
N
207 419 207 635 2 L
0 X
N
90 180 18 18 225 635 A
225 653 333 653 2 L
N
0 90 54 54 333 599 A
387 599 387 563 2 L
N
270 360 54 54 333 563 A
333 545 243 545 2 L
N
243 545 243 617 2 L
N
243 617 333 617 2 L
N
0 90 18 18 333 599 A
351 599 351 563 2 L
N
270 360 18 18 333 563 A
180 360 18 18 225 419 A
243 419 243 509 2 L
N
279 527 369 419 2 L
4 X
N
333 509 320 509 2 L
0 X
N
319 508 384 430 2 L
N
243 509 270 509 2 L
N
270 510 360 404 2 L
N
227 398 18 17.5 369 419.5 A
225 635 333 635 2 L
4 X
N
0 90 36 36 333 599 A
369 599 369 563 2 L
N
270 360 36 36 333 563 A
333 527 225 527 2 L
N
212.54 635 215.5 635 2 L
0.5 H
0 Z
0 X
N
212.79 636.57 215.5 635 212.79 633.43 3 L
N
162 635 212.54 635 2 L
2 Z
N
277.22 538.97 278.74 536.43 2 L
0 Z
N
278.69 539.56 278.74 536.43 276 537.95 3 L
N
252 581 277.22 538.97 2 L
2 Z
N
252 581 162 581 2 L
N
212.54 527 215.5 527 2 L
0 Z
N
212.79 528.57 215.5 527 212.79 525.43 3 L
N
162 527 212.54 527 2 L
2 Z
N
212.54 419 215.5 419 2 L
0 Z
N
212.79 420.57 215.5 419 212.79 417.43 3 L
N
162 419 212.54 419 2 L
2 Z
N
351.26 640.17 348.47 639.17 2 L
0 Z
N
351.55 638.61 348.47 639.17 350.49 641.56 3 L
N
387 653 351.26 640.17 2 L
2 Z
N
387 653 432 653 2 L
N
381.46 599 378.5 599 2 L
0 Z
N
381.21 597.43 378.5 599 381.21 600.57 3 L
N
432 599 381.46 599 2 L
2 Z
N
381.46 563 378.5 563 2 L
0 Z
N
381.21 561.43 378.5 563 381.21 564.57 3 L
N
432 563 381.46 563 2 L
2 Z
N
381.46 419 378.5 419 2 L
0 Z
N
381.21 417.43 378.5 419 381.21 420.57 3 L
N
432 419 381.46 419 2 L
2 Z
N
346.3 521.95 343.48 522.85 2 L
0 Z
N
345.59 520.53 343.48 522.85 346.54 523.52 3 L
N
387 509 346.3 521.95 2 L
2 Z
N
387 509 432 509 2 L
N
0 0 612 792 C
1 18 Q
0 X
0 0 0 1 0 0 0 K
(Figure  7.  Text  Tool  Path) 202.75 685.17 T
1 12 Q
(\0500.0  0.5\051) 116 534.07 T
(\0500.0  0.0\051) 116 425.32 T
(\0500.25  0.5\051) 110 588.44 T
(\0500.0  1.0\051) 116 642.81 T
(\0500.5  1.0\051) 441 660.94 T
(\0500.667  0.833\051) 441 606.57 T
(\0500.667  0.667\051) 441 570.32 T
(\0500.5  0.5\051) 441 515.94 T
(\0500.667  0.0\051) 441 425.32 T
2 F
-0.08 (This figure shows the tool path for milling the letter R in plain font. The outline of the R is shown) 72 362.93 P
(with a heavy black line.  The tool path is shown with a heavy grey line.) 72 349.93 T
(Two sets of data are needed. Nc_points is a list of pairs of numbers representing coordinates:) 72 328.93 T
( \050\0500 0\051 \0500 0.5\051 \0500 1\051 \0500.5 1\051 \0500.667 0.833\051 \0500.667 0.667\051 \0500.5 0.5\051 \0500.25 0.5\051 \0500.667 0\051 \0501 0\051\051) 72 315.93 T
-0.08 (Nc_path is a list of pairs.  The first element of each pair is a letter code, and the second element is) 72 294.93 P
(an integer standing for an element of the nc_points:) 72 281.93 T
(      \050\050s 3\051 \050s 4\051 \050w 5\051 \050s 6\051 \050w 7\051 \050s 2\051 \050j 8\051 \050s 9\051\051.) 72 268.93 T
0.37 (The machining of a character always starts at the first point on the nc_points list.  Thus,  milling) 72 247.93 P
(begins by moving to \0500 0\051 and inserting the tool. Then the nc_path is followed in order:) 72 234.93 T
(   \050s 3\051 = mill straight to point 3 at \0500  1\051.) 72 221.93 T
(   \050s 4\051 = mill straight to point 4 at \0500.5  1\051.) 72 208.93 T
(   \050w 5\051 = mill in a clockwise arc to point 5 at \0500.667  0.833\051.) 72 195.93 T
(   \050s 6\051 = mill straight to point 6 at \0500.667  0.667\051.) 72 182.93 T
(   \050w 7\051 = mill in a clockwise arc to point 7 at \0500.5  0.5\051.) 72 169.93 T
(   \050s 2\051 = mill straight to point 2 at \0500  0.5\051.) 72 156.93 T
(   \050j 8\051 =  pull the tool up, jump to point 8 at \0500.25  0.5\051, and reinsert the tool.) 72 143.93 T
(   \050s 9\051 = mill straight to point 9 at \0500.667  0\051.) 72 130.93 T
(The last point on the nc_points list, \0501  0\051, shows where the next character should start.) 72 117.93 T
(For NC-coding, the nc_points list is scaled and translated appropriately before being used.) 72 96.93 T
FMENDPAGE
%%EndPage: "51" 58
%%Page: "52" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 52 -) 293 72 T
72 90 540 693 R
7 X
V
0 X
0.36 (        6.3.) 72 685 S
259.34 683.8 125.04 683.8 2 L
V
0.6 H
0 Z
N
0.36 (Milling a Contour Groove) 125.04 685 S
-0.04 0.36 (A contour groove is specified by a set of corners.  The notion of a set of contour corners \050a) 72 661 B
1.75 0.36 (contour outline\051 is discussed in detail in the design protocol paper [K&J2], Chapter II,) 72 648 B
-0.3 0.36 (section 2.15.8.  Included in the description of each corner are its starting and ending points,) 72 635 B
0.14 0.36 (the radius of the arc, and the angle it subtends.  If the first corner has a nil radius, then the) 72 622 B
0.03 0.36 (groove is open.  If the radius for the first corner has a value, then the groove is closed, and) 72 609 B
0.48 0.36 (can be milled by ramping downward in circuits around the groove.  If the groove is open,) 72 596 B
0.36 (then the groove must be milled back and forth between the ends.) 72 583 S
0.28 0.36 (A separate routine is used for each type of contour groove.  For a closed groove, the ramp) 72 559 B
-0.04 0.36 (angle is set according to the type of material \0505 degrees for steel and monel, 15 degrees for) 72 546 B
-0.1 0.36 (aluminum and brass\051.  The tool, which is an end mill for a flat-bottomed groove and a ball-) 72 533 B
0.05 0.36 (nosed-end-mill for a round-bottomed groove, is ramped into the material at the ramp angle) 72 520 B
0.08 0.36 (along the contour outline until \050i\051 one pass depth is reached, or \050ii\051 the bottom of the cut is) 72 507 B
0.34 0.36 (reached, or \050iii\051 a complete circuit around the outline is made.  In case \050i\051, the tool path is) 72 494 B
-0.73 0.36 (levelled off for the rest of the circuit.  In case \050ii\051, the path is levelled and one more complete) 72 481 B
0.36 (circuit is made to the place where levelling started.) 72 468 S
0.98 0.36 (For an open groove, the method is slightly different.  The ramping depth is found as the) 72 444 B
-0.83 0.36 (depth, the pass_depth, or the length of the groove times the tangent of the maximum ramping) 72 431 B
0.17 0.36 (angle, whichever is smallest.  The change in depth for each segment is then the fraction of) 72 418 B
0.25 0.36 (the groove length covered by the segment times the ramping depth.  This is repeated, with) 72 405 B
-0.71 0.36 (NC code written for each segment, until the end of the groove is reached.  The groove is then) 72 392 B
0.16 0.36 (milled in the reverse direction at a constant depth.  This process is repeated as many times) 72 379 B
0.36 (as necessary to reach the proper depth.) 72 366 S
0.36 (        6.4.) 72 342 S
256.02 340.8 125.04 340.8 2 L
V
N
0.36 (Milling a Contour Pocket) 125.04 342 S
-0.59 0.36 (The algorithm for milling a contour pocket is shown in Figure 8.  The algorithm is described) 72 318 B
0.81 0.36 (on the figure, as well.  The initial cut is made by the routine described in section 6.3 for) 72 305 B
1.27 0.36 (ramping into closed contour grooves.  The final cut is made by a simpler routine which) 72 292 B
0.36 (inserts the tool to full depth first and then follows the contour.) 72 279 S
2.24 0.36 (A second version of this algorithm, written earlier, replaces the middle portion of the) 72 255 B
1.51 0.36 (algorithm \050bulk material removal\051 with a zigzag pattern. This second algorithm is more) 72 242 B
-0.43 0.36 (difficult.  It was discarded because it alternates between conventional cutting on the zig and) 72 229 B
1.14 0.36 (climb cutting on the zag.  Using the algorithm would have required that a much smaller) 72 216 B
-0.72 0.36 (stepover be used for steel to avoid chatter during climb cutting.  This would have lengthened) 72 203 B
0.36 (machining time considerably.) 72 190 S
0.36 (        6.5.) 72 166 S
243.97 164.8 125.04 164.8 2 L
V
N
0.36 (Milling a Side Contour) 125.04 166 S
0.25 0.36 (The algorithm for milling a side contour is shown in Figure 9.  The algorithm is described) 72 142 B
1.46 0.36 (on the figure, as well.  As with a contour pocket, the initial cut is made by the routine) 72 129 B
0.15 0.36 (described in section 6.3 for ramping into closed contour grooves, and the final cut is made) 72 116 B
0.36 (by the simpler routine.) 72 103 S
FMENDPAGE
%%EndPage: "52" 59
%%Page: "53" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 53 -) 293 72 T
63 81 549 702 R
7 X
V
72 90 540 693 R
V
1 18 Q
0 X
(Figure  8.  Contour  Pocket  Tool  Path) 157.26 681 T
72 90 540 333 R
7 X
V
2 12 Q
0 X
-0.03 (This tool path drawing, which is a bit image taken from the screen, shows the tool path used to) 79 315 P
-0.54 (cut a particular contour pocket.  The heavy line marks the outline of the contour pocket.   A light) 79 302 P
(solid line is drawn when the tool is cutting.  A light dotted line is drawn when the tool is in the) 79 289 T
(air above the part.) 79 276 T
0.44 (The cut starts at the top of the picture. The inner contour path is followed first.  It is made by) 79 255 P
(ramping the tool down into the part to full depth while following the path.) 79 242 T
-0.31 (The horizontal cuts are made next to remove the material on the inside of the contour.  Each cut) 79 221 P
-0.2 (spans the inner contour and is made from right to left so that conventional milling is done.  The) 79 208 P
0.41 (order in which the cuts are made is from top to bottom.  After each cut the tool is withdrawn,) 79 195 P
0.32 (moved to the beginning of the next cut and inserted rapidly.  Note that there are no horizontal) 79 182 P
0.09 (cuts in the neck of the figure.  This is because cuts whose length is less than a tool radius have) 79 169 P
(been suppressed; the material they would cut has already been removed.) 79 156 T
-0.14 (If the pocket is deep, the entire pattern of horizontal cuts is repeated several times at increasing) 79 130 P
(depths to reach the final depth.) 79 117 T
(The last step is to make a finish pass at full depth around the outer contour outline.) 79 96 T
72 90 540 666 R
1 H
0 Z
N
72 333 540 666 R
5 X
V
0.5 H
2 Z
0 X
N
%%BeginBinary:  3411     
256 178 432 300 0 90 348 BEGINBITMAPBWc
D"
F1D"
FFD"
7FC#
FCFFC"
DFC"
3FC"
FFB"
F7B"
CFA#
FDFFA"
F3A"
FF:a"
FE9"<"
F0199"<"
E0038*
FE003FFFFFFFFFFC018$:$
FC03FFFF807F8#;$
E01FEFF03F8#;$
C07F9FF81F8#:%
83FFFBFFFE0F8";%
07E7FFFF077#;"8"
FE0FFF837#:"9"
FC1FFDC38":"9"
3FF3E17#:"9"
F87F7FE0<#9"
FCFFF07#9":"
F0FFFFF87":";"
E1DF7F<"
3F7"8$:"
C3EFF7FFFC:'8"
8000000000033F7*
C7FFFE7FFFFFFFFFF97%:$
87FFFDFDFCFFFE9(
FB8000000000067*
8FFFF77EE3FFFFFFF29%8%
ECFF7FCFFAFFFF1F9%
EDFFFFF39"8&
E9FF87FFFB7F9(
DBFFF7FFFF9FFD7"<#
1FEF3D;"8#
FBFFC59"`"8"
D8018F9"P"
DBFD:$9"E#
F1FFBFBFE000:$8"E%
FFFFDFFEF000001F;#H"8"
E7EFE001;#G&
FBFFFE001FFC00;#;"A'
FFCFC7FC03FFFFE03F<"G#8#
F7F00FF81F<#8"C#8#
FC9FDFE07FFE07<&C#8#
FF6FFFFF5FC1FFFF03=#E":"
FF3F83C0>"E":#
DF07E07F>#C#:#
FE7FFE1FF83F=$8"@#:#
E7FFBFE3F87FFC1F7";%B#:#
8FFBFFFF6FF0FFFE0F9"9$C";#
E9FFFFFCC1FF079"a"B"<"
EC2F8787:(B"<"
FFF1E7FFFFFFAF0FC39'C#<"
F77FFFF9C37FFC3FE17*8"?#
87FFFB80000007878FF1F87F9*@#8#8"
FDFFFFFFF81FFF167FF0FFC003F07%8'?"9#8#
C7FFFE7FFFCFFFB79E31C33FFCF87F7.>"8%
C3FFFF80000000F3FFD7FFF07887FCF81F3F:&9%;#8'
FFFFFFFF38F1FFF0E7FE0FFBC7E3DFFFFC7"<#:$:#8%
E1C57FFFF9E3FC3FE73FFCE7>#8"8%8#8%8"
F2BFF8FFFFC79FF87FDEFFFF3B3F7"<$<'8"8%
F0FCDFDBFFEF0FFFE1FFB999FFFE1F7#;#>%8#8"
F87FFECFFFFF1E03FE77ED>$?'8$
FF57EBFF0479FFFDEFF6FFFF7#<"@'8"
FC3FA7FE1FFE70F39FF28"<"@'8#
1F93FC3FFFFFE163FB7F7#<"@#8)
FE0FDBF0FFDEFFC39FF9BFFF8F7#<&<"9&
FF07EBEDFFFC7FE139FFFFE7858"<"@"8'
80EDC3FEF0000000018#;#?"8'
C07FEC6D0FFDEDFFFFFFFD8#;#>#8#9"
E01FF5B5FE1FF39FFE8#<">#8$9"
FC03F5F83FEF7FCFDF8$:#>#8$
FE003FF6F6F0FF9CFFF78':#;"9$
FFE00000000FFE3FE17BFFFF9"9"A"8#
F00787FEF79"<">"8#8"
FFF20FF9CF3F:%8"=#8#8"8"
FFFFFFC7F8FC1FF7BFCFBF@"=#8#8$
FAF87FCF7FFFFFFD@#<#8#8#
FB7FF0FFBCFFFE7FA$:"9"9'
3FFF1FC37BFFBFFD7FFF1FA"<"8#:#
5F87FCF7FFFBA";#8#;#
6FFE0FFBCFFAFF@#;#8#:#
FD7FFC3FF7BFF9F6G#8#:&
F87FCE7FFEF5FFFE3FA";#8#:"
BDE1FFBDFFFFA$9"8#a"
BEFF8FC3FE7805A#:"8#Q"
BF7F87FDE7EBB"9#8$;%
FFFE1FFBDFF3DBFFFC7F@";#8$;"
FEFC3FE7BFFDD7F#8%<#
F07FDE7FFFE7F8FFA#9#8%:"
DFE7E1FF3DFFFFFBB7B"9"8#8":"
FBC3FEFBFFAFB#8"8#9"9$
FFC70FFDE7C76FFFF1E#8#9"9"
FE1FF3DFFF5FE#8#:":"
F83FEF3F9FE3@(8#:%
FF5FFF87FFF0FF9EFFEFFFFEDFA"9"9";%
6FE17DFF3FFEBFC$8#<#8"
C7FF87FEF3DFFDC7C$8#<$
E3FF0FF9EFFFFD7FD#8#<#8"
FE1FF7DFFE3D8FC$8#<#
E1F87FEF3FFFFBA"8#8"d"
AFF0FF9CFFA%9"S"8"
B7FFE2C179F61FC#8$="
E387FCF7F8F5C#8$=%
F10FFBEFFFEDFFFE3FC#8%
F02FF79FFFF1D"8%
6FCF7FFFFFA"8"8#8";%
D7F7BEFFE3DBFFFC7FA(9";"
DBFFFBFFFFFE79FFD7C"8#:":%
FFFDF7C7B7FFF8FFF#:":"
FBEFFF6FE$;";"
7FE79F8FF1A"9$;"8#
EDBFDF7FFFFEDFE$<%
FFBCFF3FFFF9BFE#=$8"
FE7BDFFFF7E3A"9#='
F6FDF7FE7FF67FFFC3E#='
F3CFFFBFEDFFFF83A#8#>#8"
FB7FEDBFFCDD87A#8"e"8"
F93FDE3B8FA#8"T#8"
FDDF3CFEE71FA&?%
FEEFFFFEFBF9DFFFFEA&?%
FF37FFFCF7F73FFFFCB%?#8"
B8FFF3CF0EFF3FB%>#8#
CE0F0F3FF8F9F87FB%=$8#
F3F0FCFFE007E7F0FFB$=%8"
FC7FE3801FFE1FE0B$;'8"
FF001FFE007FFFF1FFC1C#:'9"
FFFFF801FFFFE00F83H(9"
E007FFFF801FFF07G(9#
801FFFFE007FFFFE0FE):#
FE007FFFF801FFFFFC1FD(<#
F801FFFFE007FFF83FC(=#
E007FFFF801FFFE07FB(>#
801FFFFE007FFFC0FF@)?"
FE007FFFF801FFFF01=*@#
C3FFF201FFFFE007FFFE07?'A#
FBFFFF801FFFFC1F=(B#
E3FFF9FE007FFFF03F?%C#
FE01FFFF807F?#D$
FFFFFE03FF="G#
E1F00FJ#
9807F="F$
F0F001FFJ$
7F8000F=#C%
F87FE000007FJ&
58000000FFF=#@'
FC3FFE00000007FF>"?#8#
1FF8001FFF=#>#8#
FE0FE0007FFF=#='
FF0780000001FFFF>";'
81FE00000007FF>#9#8#
C07FF8001FFF>#8#8#
E01FE0007FFF>*
F801FF80000001FFFF>(
FE0000000007FF>#8#
FF801FFF?%
F8007FFF?$
FFFFFF














ENDBITMAP
%%EndBinary
FMENDPAGE
%%EndPage: "53" 60
%%Page: "54" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 54 -) 293 72 T
72 90 540 360 R
7 X
V
0 X
-0.03 (This tool path drawing, which is a bit image taken from the screen, shows the tool path used to) 79 352 P
0.12 (cut a particular side contour.  The rectangle is the part, and the heavy line marks the outline of) 79 339 P
0.43 (the side contour.  A light solid line is is drawn when the tool is cutting.  A light dotted line is) 79 326 P
(drawn when the tool is in the air above the part.) 79 313 T
-0.61 (The cut starts at the left of the picture, slightly below the top.  The outer contour path is followed) 79 287 P
-0.42 (first.  It is made by ramping the tool down into the part to full depth while following the contour) 79 274 P
(path.) 79 261 T
-0.27 (The horizontal cuts are made next to remove the material outside the outer contour.  Each cut is) 79 235 P
0.65 (made from right to left so that conventional milling is done.  The order in which the cuts are) 79 222 P
0.48 (made is from top to bottom.  After each cut the tool is withdrawn, moved to the beginning of) 79 209 P
0.84 (the next cut, and inserted rapidly.  At the right, the tool is inserted outside the part by a tool) 79 196 P
0.26 (radius plus 0.1 inch.  At the left the tool is withdrawn just at the edge of the part.  Cuts whose) 79 183 P
1.36 (length inside the material is less than a tool radius have been suppressed; the material they) 79 170 P
-0.41 (would cut has already been removed.  If the side contour is deep, the entire pattern of horizontal) 79 157 P
(cuts is repeated several times at increasing depths to reach the final depth.) 79 144 T
(The last step is to make a finish pass at full depth around the inner contour outline.) 79 118 T
1 18 Q
(Figure  9.  Side  Contour  Tool  Path) 166.74 681 T
72 90 540 663 R
1 H
0 Z
N
%%BeginBinary:  7763     
346 215 469 293 0 71 373 BEGINBITMAPBWc
z"
K557Fz"z"
5AAA85AABFz"z"
555515557Fz"z"
5AA2A5AABFz"z"
455516557Fz"
KAABFz"z"
455156557Fz"z"
4AA2A6AABFz"z"
355457557Fz"z"
3AA8A7AABFz"
K557Fz"z"
2AAA28AABF#j%
5554F0555557F(z&
AAAAAAAAA0828A@AA0AAAAAAABFr#s"z'
550505555145505555555557Ft$z"
AA0A282A?AABFv'z(
555050515555544554555555555557Fx%z)
AAA8A282A83AAA2AAAAAAAAAAAABF#j"r"
5554A50557F#J"r"
AAA8A2AAABF#J"r"
5550A15557F(Q$R$R$r"
AAA8FFFFFFF83F0FFFDFE1E3C78FFE2AAABF#9#<$='9%r"
5550E7FFF0FF3FFFFFFF8F0F3FFBFFFE15557F#9#a$@(8"r"
AAA81FC07F3FFFFFFFDE3C7FFDE72AAABF#8$Q#C&8"r"
5550FCFC3F87C7FFFFF870F115557F#8$<"G&r"
AAA8F3C3FFF9FFFFE3C20AAABF#8#=#D#8,
5550CE3FF879FC3FFFFE05051555555555557F#8#=#D#:*
AAA839FFE7BE1FFF2AAAAA08282AAAAABF0j%
5550000060F1E1E3C7878F1E1C3C4890555557F(P%V"Q#r"
AAA8FFFDC1C3CFFEFFF39FF7FE2AAABF*9%@#="r"
5550FFF3DFFFF78F0FF9FFFDEFFDCF15557F1?$="r"
AAA8FFEF3FFFFFFFFE1E3CFF3FFFFE6FFEF3FF2AAABF&9)?#>"r"
5550FFDCFFFFFFFF7870FFFFB3F9FF15557F%=&>#?"r"
AAA8FFBBFFFFF1E3CDFC7F2AAABF%=(;$?"r"
5550FF77DFFFFFFFE1878FFE1FFF15557F%="9&9#@"r"
AAA8FEEF3FF6FFFF1E1C8FFF2AAABF%="9*A"r"
5550FDDFFFFB7FFFFFFF3C78C7FF15557F%<";"9&@"r"
AAA8FBBFC7BFFFF9F1E1E72AAABF%8"`"8#9(>"r"
5550F77FF807FDDFFEE7FFFFFBC78F15557F#:";"=#8';"r"
AAA88000F9FFFFFFFF0F1E7F2AAABF%8"<%8#<&9"r"
5550ECFF001FFFFEEFFC7FFFFFBC787F15557F$8#P*>(r"
AAA8EBF001E00FFFFF6FFFFE3FFFFFFFF0F1E7FE2AAABF$8%9#8%A&r"
5550DBE01FFFFEFC0377FF8FFFFFFFFBC205557F$8%9#8$D,
AAA8B700FFFFF9FF81B7C7FFFFFE2A8A0A2AAAAAAAAABF'8":"8#G*
555077FFFE037FC0BBFF15555514141555557F*:%j%
AAA86FFFFC1FFFFCFFF07FFCC070AAAAABF);&Z#r"
5550EFFFF83FFFFFF83FF3DBF30FE15557F);&G"r"
AAA8DFFFF07FFFDFFC1C7FEBFD2AAABF#8%;'F"r"
5550E0FFFF3FFE1FFFEDFFE315557F);'F"r"
AAA8BFFFE1FFEFFF1F0FFFF5FFFF2AAABF#8$;&8"E"r"
5550C3FF9FC7FF07FFF6C715557F$9":%:#=$:"r"
AAA87FFFFBFFFF87FF9FF000002AAABF#8#:#8$9"<&9"r"
555087FBFDE7C7FFFAEFFE0FFFFF1F15557F#8#:#8";#;&9"r"
AAA80FE7F3FFC3FF3FF1FE003FE02AAABF'9#;#9";'8"r"
5550FFFF0DFFFC7FFB7FDF8FC1FFC1FF3F15557F&9$9"<#9(8"r"
AAA0FFFE13FE3FFFE3FE3FFE7F3FFFFE07DF2AAABF#8"9#:"<#9(8"r"
55501F1FFFE1FFFCF1C0FFFFFFF9E715557F#8"8#C#8#9#8"r"
AAA03F87FFFF7FCF3FFE382AAABF%8#<%;"8#9&r"
5550FFFCFBFFF1FFFDBFF9BEFFFFCF7FFE15557F#9#F"8";%r"
AAA0FDE7FE7DF19FFE2AAABF(F%;%r"
5540FE1C7EF3FFFFF0FCE3FEE7FE15557F'>"?$;%r"
AAA8FFFC79FFF8FFEB9FFF7BFE2AAABF&B"b#<$r"
5540EFFC3F80077F9DFE15557F&B"R#<$r"
AAA89F1C7FBFDEFFEEFE2AAABF%B$<"=$r"
55408FFCFEDE7FB9F77E15557F&B#;#=$r"
AAA8FFF8FFDF9FFE77FBBE2AAABF#F";#=$r"
5540FFFDEFFDDE15557F#B#8#:#=$r"
AAA8FC7FFC3FFB9FFEEE2AAABF#F#:#=$r"
5540FFFFE77FFF7615557F#G":#9#9#r"
AAA8F9DCFF0007BA2AAABF#D&9"9$9#r"
5540FF6FFFFE7F3B800000DC15557F#G#8#9"8"8#r"
AAA8FFFFFEF7000FEE2AAABF#H"8#8&8#r"
5540F0FDCFF000FFE007F615557F#B#:"8#8&8#r"
AAA8FE3FFFF3BFE01FFFFF01FA2AAABF#I%8#8"8#r"
5540E7FFEE7F807FC0FC15557F#I%8#8&r"
AAA8F9FF9DFF03FFF03FFFFE0AAABF#E"9$8#9#8"r"
5540B7FFFF7BFE0FF81F15557F#J#8#9#8"r"
AAA84CEE7FC1FFE072AAABF#E(8#9#8"r"
5540A00000000001DFF83FFF0315557F#B+8#:"8"r"
AAA8FF1FFF97FFFFFFFFF73FF0FFC122AABF#E":#8";"8"r"
5540B7EEFFC3E011557F&A";"9";%r"
AAA8FFFC7FFB9D87F07FFE0AAABF#D#:"9";%r"
5540F7DB730FF83FFE01557F#D":#8#;"8"r"
AAA8EFFCEFFC3FFC28AABF#D":#8#;%r"
5540FFFB9FF87FFE1FFE15557F#C";#8#;%r"
AAA88EF77FE0FFFF0FFE22AABF#8"@";#8"?"r"
55503F89CCFFC310557F#C";"9"=$r"
AAA08FBB8787FE2AAABF%C"9"8#=$r"
5550FFFEED77FE1FC3FE11557F#8"E#8#?*
AAA01FFCCFFC3F282AAAAAAAAAAAAABF#B#:#8#=$r"
5550FE0FFBBFF07FE3FE15557F&?#:#8#?"r"
AAA8FFFF0FFFC7E67FE1FF28AABF$G#8">,
55507FDDFFC3E1FE15155555555555557F#8"?";"9">,
AAA887EFBB0FF0FE288AAAAAAAAAAAAABF#8"?"8%8#@"r"
5550C39FF6FFFE67FE1F14557F$A":#8#>,
AAA8BFFFFDDFFC3FF8FE2A8AAAAAAAAAAAAABF#8"D#8#@"r"
5550E1F33FF0FF14557F&>$9#8"A*
AAA8DFFFE0FBFFE3EEFFE12A8AAAAAAAAAAAAABF#8#=";"9"?$r"
5550F07FE7DD83FC7E14557F'=";"9"A*
AAA8EFFFF83FFF330F2A0AAAAAAAAAAAAABF'A$8#A"r"
55506FFFFC07FB7EEFFE1F15557F'<";#8#A*
AAA877FFFE03FE7D9FF87F2A0AAAAAAAAAAAAABF'<";#8#A*
5550B7FFFF00F9737FF0FF15455555555555557F$8#;"8"8#8"B*
AAA8DBE01FFFF10EFFE12A2AAAAAAAAAAAAABF$8#@#9"B*
5550EBF001FD998715455555555555557F$8%9":#9"B*
AAA8ECFF00001FBFFCF70F2A2AAAAAAAAAAAAABF%8$8#:#8#B*
5550F77F800007FE7FFE07FC1F15455555555555557F#:$8#:#8#B*
AAA8F80001FFFFFFFFF87F2A0AAAAAAAAAAAAABF%8'9";#B"r"
5550FBBFFFFF807FFFEFF0F0FF15557F%:%?"C*
AAA8FDDFE03FFFDFC32A0AAAAAAAAAAAAABF%:%9#:"C"r"
5550FEEFF81FFFBFF87F8715557F%:%>#A,
AAA8FF77FE0FFFFFFE0FF8FE2A0AAAAAAAAAAAAABF%:$:#9#C"r"
5550FFBBFF07FBFC3FFC3F14557F%;#;"9#C*
AAA8FFDC83E71FF87F2A8AAAAAAAAAAAAABF&:#:":#C"r"
5550FFEF3FC1FFFEE1FF14557F&:";#9"B$r"
AAA8FFF3DFE0FF0FC3F1FE2AAABF%;"<"9"D*
5550FFFDF0078714155555555555557F&:#;"8#D"r"
AAA8FFFEE7F87F83FE1F28AABF&A"8#D*
5550FFFF39C1F03F15155555555555557F#8#9"<&B$r"
AAA8CE3FFCE07FFFE07FE3FE28AABF#8#9"<&D*
5550F3C37CF01FFF01FF11155555555555557F#8'<%C,
AAA8FCFC3FFFFCFCF801F803C7FE2A2AAAAAAAAAAAAABF#8(;%E"r"
5550FF1FC007FFFE3FFE00000711557F#9$>%E*
AAA8E1FFF1FF80003F222AAAAAAAAAAAAABF#9%>$C$r"
5550FE0FFCDFFE01FF8FFE14557F#9%>#F"r"
AAA8FFF0063FFFFF22AABF#:$J$r"
5550FFFB7F81FFE04557F#J"r"
AAA8A28AABF#`"J"r"
555003;15557F#P"J%r"
AAA8FB8FE3FFE0AAABF$J"r"
5550F9@11557F$J%r"
AAA8FE=FC7FFE22AABF$J"r"
5550FF@15557F%J"r"
AAA8FFF1?22AABF%J%r"
5550FFFF<F8FFFE05557F#8"J"r"
AAA8E7>2AAABF#8"J"8"r"
5550FB;F115557F#8"J"r"
AAA8FF>0AAABF#9"J#r"
5550CF<FC15557F#9"J"8"r"
AAA8F7:E32AAABF#9#J#r"
5550FF9F;FA15557F#:"J"8"r"
AAA8EF9C72AAABF#:"J#r"
5550FF;F615557F#;"J"8"r"
AAA83B88F2AAABF#;"J"r"
5550CB;15557F#`"J#r"
AAA803:EE2AAABF#P"J%r"
5550FB81FFFEC15557F$J"8#r"
AAA8F9<FEDC2AAABF$J"8#r"
5550FE<FCDA15557F%J"8"r"
AAA8FFF3<3F2AAABF%J%r"
5550FFFD<7FFFB615557F%J#8"r"
AAA8FFFF;F8FF2AAABF#8"J"8#r"
5550E3:F06E15557F#8"J"9"r"
AAA8FF:E02AAABF#9"J&r"
5550CF9E1FFFEDE15557F#9"J"9"r"
AAA8F79C32AAABF#9#J"9"r"
5550FF9F88715557F#:"J&r"
AAA8EF807FFFDBE2AAABF#:"J#9"r"
5550FF7FE0F15557F#;"J'r"
AAA83B6FC1FFFFB7E2AAABF#;"J'r"
5550CB6F83FFFFAFE15557F#`"J'r"
AAA8036F07FFFF6FE2AAABF)J'r"
5550FFFFE1C3CFFB6E0FFFFEDFE15557F#8&J"8$r"
AAA8FFFFF78B0F5C1EBFE2AAABF#:&I"8$r"
5550FFFB7E1E3C03DBFE15557F#<&F#8$r"
AAA87FFE3F7870FE07B7FE2AAABF#?&C#8$r"
5550FFFFF1E3CFF80F6FFE15557F#>"8&A(r"
AAA81FFFFFF3878FF03FFFFEEFFE2AAABF#C&?(r"
5550FFFFFF1E1CE0FFFFFDDFFE15557F#=">%="9$r"
AAA8FFFFFF3C7881BFFE2AAABF#H&9#8%r"
5550FFFFF1E1E7FC03FB7FFE15557F#J)8%r"
AAA84FFFFFBC78FFFF01FF6FFFE2AAABF#;"8"C'8"8"r"
5550FD0FFFFFFF0F007FED15557F#<"H'8"r"
AAA8BFFC03BC787FDB2AAABF#>"F*r"
555087800FFFFFF0B1E7FE15557F#J$8&r"
AAA88C0007FFF6FFBC202AABF#;"8"D%8.
5550FEC3000003FFFCEFFFFE15051455555555557F#<"D#8"9#8*
AAA8DFFC007FFBDF2AAAAA88282AAAAABF#a18'c%
55508F1E2078F1E3C78F1E3C78F1E3C7800021C3870E1C200555557F,U#8Q&r"
AAA8FFFFE1C3CFFEDFFFE0C000DEFFFFFE2AAABF#8)>&<"9"r"
5550FFFFF78F0FFFF07F00000003FF3915557F#:'<#8#<#9"r"
AAA8FFFF6E1E383FFC000FFFFEF72AAABF#<&:#8#=#9"r"
5550AFFFFC0870F0003FFFF9EF15557F#<+8#>#9"r"
AAA8B7FFFE03FFF1E3CFC000FFFFF7DF2AAABF#<-@#9"r"
5550DBFFFF00FFFFFF00000003FFCFBF15557F#?%8$@#9"r"
AAA8C00FFC000F1E1CBE7F2AAABF#<"8$8'=$9"r"
5550EDF000003FFFFFFF3C78FE71FF15557F#?"9#9&:#:"r"
AAA8FCFFFFFFFFF1E1E7F1CF2AAABF#<"8%=&8#:"r"
5550F6FFC003FFFFFFFBC78F8F3F15557F#<#8#@(:"r"
AAA8FB7FFFFFFFFFFF0F1C7CFF2AAABF#="G&9"r"
5550BFFFC3A0787F15557F#<#G*r"
AAA8FDDFFE3F9FFFF0F1E7FE2AAABF#<#F+r"
5550FEEFE001FC7FFFFFFFFBC205557F#<#E&9,
AAA8FF6F801FFFE3FFFFFE2A8A0A2AAAAAAAAABF#="C'<*
5550B3FE007FFFE01F15555514141555557F#b3h%
AAA81C3C7870F1E3C78F0E1E3C78F1E001C78F100AAAAABF#R#U'R#r"
5550EE7FE007FFFFC00FFE15557F#=#?(>"r"
AAA8F39F801FFFFF003FFF2AAABF#=#=)?"r"
5550FCEFFE007FFFFC00FFFF15557F#=#<(A"r"
AAA8FF73F801FFFFF003FF2AAABF#>";(B"r"
55507CE007FFFFC00FFF15557F#>#9(C"r"
AAA89F3F801FFFFF003FFF2AAABF#>,D"r"
5550E1C3FFFE007FFFFC00FFFF15557F#>*F"r"
AAA8FE7C0001FFFFF003FF2AAABF#>)G"r"
5550FF9FFFFFFFC00FFF15557F#j"r"
AAA8A2AAABF#J"r"
5550A15557F#J"r"
AAA8A2AAABFz"
K557Fz"
KAABFz"
K557Fz"
KAABFz"
K557Fz"
KAABFz"
K557F
ENDBITMAP
%%EndBinary
FMENDPAGE
%%EndPage: "54" 61
%%Page: "55" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 55 -) 293 72 T
72 90 540 720 R
7 X
V
1 F
0 X
(VI.) 72 712 T
341.68 710.8 103.33 710.8 2 L
V
0.6 H
0 Z
N
(DATA EXECUTION MODULE SOFTWARE) 103.33 712 T
2 F
0.36 (        1.  INTRODUCTION) 72 686 S
-0.12 0.36 (The software for the Data Execution module is all written in Franz Lisp, as is nearly all the) 72 660 B
1.13 0.36 (rest of the VWS2 software.  It is compilable, but is normally run interpreted rather than) 72 647 B
-0.47 0.36 (compiled since changes have been frequent, and, if bugs appear they are much easier to find) 72 634 B
0.36 (and eliminate in uncompiled code.) 72 621 S
1.75 0.36 (In addition to the authors, portions of the code were written by three others.  Mr.  W.) 72 595 B
-0.08 0.36 (Timothy Strayer, a summer worker at NBS, had a hand in many earlier versions of the NC-) 72 582 B
1.96 0.36 (coding functions.  Mr.  Alton Quist, a research associate from General Dynamics who) 72 569 B
-0.43 0.36 (worked at NBS for a year ending in June 1985 wrote most of the original version of the NC-) 72 556 B
0.67 0.36 (coding system, although only a few lines of it remain.  Dr.  Edward Magrab, formerly an) 72 543 B
1.49 0.36 (NBS employee, provided Monarch language versions of the three top-level zero-finding) 72 530 B
0.7 0.36 (functions.  He also wrote the three Monarch language zero-finding subroutines which are) 72 517 B
0.36 (called by the top-level functions.) 72 504 S
0.36 (        2.  LISP FUNCTIONS) 72 478 S
-0.51 0.36 (When it is run with all options off and the input process plan has already been enhanced, the) 72 452 B
-0.36 0.36 (Data Execution module uses eight core functions plus a few miscellaneous and property list) 72 439 B
0.55 0.36 (manipulation functions \050in addition to the functions provided by Franz LISP\051.  When it is) 72 426 B
-0.08 0.36 (run with all options on and the input process plan is not enhanced, the module uses 19 core) 72 413 B
6.13 0.36 (functions, 57 NC-coding functions, quite a few miscellaneous and property list) 72 400 B
-0.26 0.36 (manipulation functions and several hundred graphics, verification, and geometry functions.) 72 387 B
0.28 0.36 (The core functions and the NC-coders are listed in Table 7.  Half the core functions are in) 72 374 B
0.35 0.36 (the exec2 directory and half in the proc2 directory.  All of the NC-coders are in the exec2) 72 361 B
0.36 (directory. There are no functions in the exec2 directory which are not listed in Table 7.) 72 348 S
4.74 0.36 (Functions not listed in Table 7 are discussed in other papers written for AMRF) 72 322 B
0.36 (documentation.) 72 309 S
0.28 0.36 (The function at the top of the hierarchy is "execute_plan".  The real workhorse, though, is) 72 283 B
3.76 0.36 ("execute_step", which makes data-driven function calls to over 50 of the top level) 72 270 B
1 0.36 (verification, drawing, and NC-coding functions.  The operation of these two functions is) 72 257 B
0.36 (described earlier in this paper.) 72 244 S
FMENDPAGE
%%EndPage: "55" 62
%%Page: "56" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 56 -) 293 72 T
1 18 Q
(Table  7.  Data Execution  LISP  Functions) 141.98 681 T
72 90 540 702 R
1 H
0 Z
N
99 99 243 279 R
7 X
V
2 12 Q
0 X
(arc_length) 99 271 T
(cg_chunk) 99 257 T
(cg_go_backwards) 99 243 T
(cg_ramp) 99 229 T
(change_tool) 99 215 T
(compute_r_plane) 99 201 T
(cp_chunk) 99 187 T
(cp_cull) 99 173 T
(cp_first_pt) 99 159 T
(cp_int_gen) 99 145 T
(cp_int_order) 99 131 T
(cp_length) 99 117 T
1 F
(TOP  LEVEL  NC-CODERS  -  EXEC2) 203.99 469 T
90 486 288 657 R
7 X
V
0 X
(CORE  FUNCTIONS  -  EXEC2) 105.67 649 T
2 F
(          add_feature) 90 621 T
(          enhance1_plan) 90 607 T
(          enhance_tool_parms) 90 593 T
(          exec_header) 90 579 T
(          execute_plan) 90 565 T
(          execute_step) 90 551 T
(          init_exec_plan) 90 537 T
(          init_workpiece) 90 523 T
(          precify) 90 509 T
(cbore_hole_nc) 162 451 T
(center_drill_nc) 162 437 T
(chamfer_in_nc) 162 423 T
(chamfer_out_nc) 162 409 T
(close_nc) 162 395 T
(contour_groove_nc) 162 381 T
(contour_pocket_nc) 162 367 T
(csink_hole_nc) 162 353 T
(face_mill_nc) 162 339 T
(groove_nc) 162 325 T
324 486 531 657 R
7 X
V
1 F
0 X
(CORE  FUNCTIONS  -  PROC2) 343.84 649 T
2 F
(             add_extra_items) 324 621 T
(             cull_steps) 324 607 T
(             delete_step) 324 593 T
(             enhance_step) 324 579 T
(             insert_face_mill) 324 565 T
(             insert_step) 324 551 T
(             order_ops) 324 537 T
(             pass_depth) 324 523 T
(             print_plan) 324 509 T
(             pull_tool_req) 324 495 T
(hole_nc) 342 451 T
(init_nc) 342 437 T
(pocket_nc) 342 423 T
(set0_center_nc) 342 409 T
(set0_corner_nc) 342 395 T
(set0_z_nc) 342 381 T
(side_contour_nc) 342 367 T
(straight_groove_nc) 342 353 T
(tap_hole_nc) 342 339 T
(text_nc) 342 325 T
1 F
(NC-CODING SUBORDINATES  -  EXEC2) 194.17 298 T
72 667 540 667 2 L
0.5 H
2 Z
N
72 486 540 486 2 L
N
306 666 306 486 2 L
N
72 315 540 315 2 L
N
243 99 396 279 R
7 X
V
2 F
0 X
(cp_next_init) 243 271 T
(cp_next_pt) 243 257 T
(cp_pick_angle) 243 243 T
(cp_ramp) 243 229 T
(cp_traverse) 243 215 T
(cs_chunk) 243 201 T
(cs_cull) 243 187 T
(cs_traverse) 243 173 T
(depth_loop1) 243 159 T
(depth_loop2) 243 145 T
(feed_rate) 243 131 T
(gets_and_puts) 243 117 T
(groove_chunk) 243 103 T
(letter_chunk) 396 271 T
(mill_letter) 396 257 T
(nc_hunk) 396 243 T
(nc_line) 396 229 T
(pocket_chunk) 396 215 T
(print_nc_file) 396 201 T
(print_nc_line) 396 187 T
(radial_stepover) 396 173 T
(rev_path_edoc) 396 159 T
(spindle_speed) 396 145 T
(straight_groove_chunk) 396 131 T
(sub_face_mill) 396 117 T
FMENDPAGE
%%EndPage: "56" 63
%%Page: "57" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 57 -) 293 72 T
72 99 540 720 R
7 X
V
1 F
0 X
(REFERENCES) 72 712 T
2 F
0.36 ([JUN]) 72 686 S
0.74 0.36 (Jun, Jau-Shi; "The Vertical Machining Workstation Systems"; NISTIR 88-3890; National) 72 673 B
0.36 (Institute of Standards and Technology; 1988; 65 pages.) 72 660 S
0.36 ([KRA1]) 72 633 S
2.93 0.36 (Kramer, Thomas R.; \322Process Plan Expression, Generation, and Enhancement for the) 72 620 B
0.57 0.36 (Vertical Workstation Milling Machine in the Automated Manufacturing Research Facility) 72 607 B
-0.64 0.36 (at the National Bureau of Standards\323; NBSIR 87-3678; National Bureau of Standards; 1987;) 72 594 B
0.36 (56 pages.) 72 581 S
0.36 ([KRA2]) 72 555 S
3.13 0.36 (Kramer, Thomas R.; "Process Planning for a Milling Machine from a Feature-Based) 72 542 B
2.66 0.36 (Design"; Proceedings of Manufacturing International Meeting; Atlanta, Georgia; April) 72 529 B
0.36 (1988; ASME; 1988; Vol. III, pp. 179 -189.) 72 516 S
0.36 ([KRA3]) 72 489 S
4.4 0.36 (Kramer, Thomas R.; "The Graphics Subsystem of the Vertical Workstation of the) 72 476 B
0.71 0.36 (Automated Manufacturing Research Facility at the National Bureau of Standards; NBSIR) 72 463 B
0.36 (88-3783; National Bureau of Standards; 1988; 27 pages.) 72 450 S
0.36 ([KRA4]) 72 424 S
3.83 0.36 (Kramer, Thomas R.; "Data Handling in the Vertical Workstation of the Automated) 72 411 B
1.23 0.36 (Manufacturing Research Facility at the National Bureau of Standards"; NBSIR 88-3763;) 72 398 B
0.36 (National Bureau of Standards; 1988; 62 pages.) 72 385 S
0.36 ([KRA5]) 72 359 S
1.92 0.36 (Kramer, Thomas R.; "The vws_cadm User Interface in the Vertical Workstation of the) 72 346 B
0.19 0.36 (Automated Manufacturing Research Facility at the National Bureau of Standards"; NBSIR) 72 333 B
0.36 (88-3738; National Bureau of Standards; 1988; 110 pages.) 72 320 S
0.36 ([K&J1]) 72 293 S
-0.38 0.24 (Kramer, Thomas R.; and Jun, Jau-Shi;  "Software for an Automated Machining Workstation";) 72 280 B
-0.1 0.24 (Proceedings of the 1986 International Machine Tool Technical Conference; September 1986;) 72 267 B
-0.61 0.24 (Chicago, Illinois; National Machine Tool Builders Association; 1986; pp. 12-9 through 12-44.) 72 254 B
0.36 ([K&J2]) 72 228 S
1.94 0.36 (Kramer, Thomas R.; and Jun, Jau-Shi;  "The Design Protocol, Part Design Editor, and) 72 215 B
0.79 0.36 (Geometry Library of the Vertical Workstation of the Automated Manufacturing Research) 72 202 B
3.64 0.36 (Facility at the National Bureau of Standards"; NBSIR 88-3717; National Bureau of) 72 189 B
0.36 (Standards; 1988; 101 pages.) 72 176 S
0.36 ([K&S1]) 72 150 S
-0.08 0.36 (Kramer, Thomas R.; and Strayer, W.  Timothy; "Error Prevention in Data Preparation for a) 72 137 B
1.59 0.36 (Numerically Controlled Milling Machine"; Proceedings of 1987 ASME annual meeting;) 72 124 B
0.36 (ASME; 1987; PED-Vol. 25; pp. 195 - 213.) 72 111 S
FMENDPAGE
%%EndPage: "57" 64
%%Page: "58" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 708 540 720 R
7 X
0 0 0 1 0 0 0 K
V
2 12 Q
0 X
(VWS Data Execution) 436.02 712 T
72 68 540 80 R
7 X
V
0 X
(- 58 -) 293 72 T
72 90 540 729 R
7 X
V
0 X
([K&S2]) 72 721 T
3.93 (Kramer, Thomas R.; and Strayer, W. Timothy; "Error Prevention and Detection in Data) 72 708 P
2.94 (Preparation for the Vertical Workstation Milling Machine in the Automated Manufacturing) 72 695 P
1.82 (Research Facility at the National Bureau of Standards"; NBSIR 87-3677; National Bureau of) 72 682 P
(Standards; 1987; 61 pages.) 72 669 T
([LOVE]) 72 643 T
0.32 (Lovett, Denver; "The Vertical Workstation\325s Equipment Controllers"; NBSIR 88-3769; National) 72 630 P
(Bureau of Standards; 1988; 59 pages.) 72 617 T
([METC]) 72 591 T
(Machining Data Handbook, Metcut Research Associates, Inc.) 72 578 T
([MONA]) 72 552 T
1 (Programming Manual for the Monarch VMC-75 with GE2000MC Controls; Monarch Cortland) 72 539 P
(Publication Number PRG GE2000MC-4; Monarch Cortland; Cortland, NY; undated.) 72 526 T
([NA&J]) 72 500 T
-0.75 (Nakpalohpo, Ibrahim; and Jun, Jau-Shi; "Automated Equipment Program Generator and Execution) 72 487 P
(System of the AMRF Vertical Workstation"; not yet published; 1987; 17 pages.) 72 474 T
([RUDD]) 72 448 T
-0.46 (Rudder, Frederick; "Operations Manual for the Automatic Operation of the Vertical Workstation";) 72 435 P
(NISTIR 89-4031; National Institute of Standards and Technology; 1989; 33 pages.) 72 422 T
FMENDPAGE
%%EndPage: "58" 65
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 65
%%DocumentFonts: Helvetica-Bold
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%EOF
